{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///node_modules/moment/locale sync ^\\.\\/.*$","webpack:///src/app/add-days-not-allowed-purchase-policy/add-days-not-allowed-purchase-policy.component.ts","webpack:///src/app/add-days-not-allowed-purchase-policy/add-days-not-allowed-purchase-policy.component.html","webpack:///src/app/add-item-conditional-discount-min-items-to-discount-on-all/add-item-conditional-discount-min-items-to-discount-on-all.component.html","webpack:///src/app/add-item-conditional-discount-min-items-to-discount-on-all/add-item-conditional-discount-min-items-to-discount-on-all.component.ts","webpack:///src/app/add-item-conditional-discount-min-items-to-discount-on-extra-items/add-item-conditional-discount-min-items-to-discount-on-extra-items.component.html","webpack:///src/app/add-item-conditional-discount-min-items-to-discount-on-extra-items/add-item-conditional-discount-min-items-to-discount-on-extra-items.component.ts","webpack:///src/app/add-item-min-max-purchase-policy/add-item-min-max-purchase-policy.component.html","webpack:///src/app/add-item-min-max-purchase-policy/add-item-min-max-purchase-policy.component.ts","webpack:///src/app/add-item/add-item.component.ts","webpack:///src/app/add-item/add-item.component.html","webpack:///src/app/add-open-discount/add-open-discount.component.html","webpack:///src/app/add-open-discount/add-open-discount.component.ts","webpack:///src/app/add-store-conditional-discount/add-store-conditional-discount.component.html","webpack:///src/app/add-store-conditional-discount/add-store-conditional-discount.component.ts","webpack:///src/app/add-store-manager/add-store-manager.component.ts","webpack:///src/app/add-store-manager/add-store-manager.component.html","webpack:///src/app/add-store-min-max-purchase-policy/add-store-min-max-purchase-policy.component.ts","webpack:///src/app/add-store-min-max-purchase-policy/add-store-min-max-purchase-policy.component.html","webpack:///src/app/add-store-owner/add-store-owner.component.ts","webpack:///src/app/add-store-owner/add-store-owner.component.html","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/approve-store-owner/approve-store-owner.component.ts","webpack:///src/app/approve-store-owner/approve-store-owner.component.html","webpack:///src/app/checkout/checkout.component.html","webpack:///src/app/checkout/checkout.component.ts","webpack:///src/app/discount-types-edit-page/discount-types-edit-page.component.html","webpack:///src/app/discount-types-edit-page/discount-types-edit-page.component.ts","webpack:///src/app/discounts-edit-page/discounts-edit-page.component.html","webpack:///src/app/discounts-edit-page/discounts-edit-page.component.ts","webpack:///src/app/discounts-management/discounts-management.component.ts","webpack:///src/app/discounts-management/discounts-management.component.html","webpack:///src/app/display-order/display-order.component.html","webpack:///src/app/display-order/display-order.component.ts","webpack:///src/app/edit-item-amount-in-cart/edit-item-amount-in-cart.component.ts","webpack:///src/app/edit-item-amount-in-cart/edit-item-amount-in-cart.component.html","webpack:///src/app/edit-item/edit-item.component.ts","webpack:///src/app/edit-item/edit-item.component.html","webpack:///src/app/extended-search/extended-search.component.ts","webpack:///src/app/extended-search/extended-search.component.html","webpack:///src/app/get-messages/get-messages.component.ts","webpack:///src/app/get-messages/get-messages.component.html","webpack:///src/app/http-request.service.ts","webpack:///src/app/item-page/item-page.component.html","webpack:///src/app/item-page/item-page.component.ts","webpack:///src/app/login/login.component.ts","webpack:///src/app/login/login.component.html","webpack:///src/app/logout/logout.component.ts","webpack:///src/app/logout/logout.component.html","webpack:///src/app/manage-permissions/manage-permissions.component.ts","webpack:///src/app/manage-permissions/manage-permissions.component.html","webpack:///src/app/manage-purchase-policies/manage-purchase-policies.component.html","webpack:///src/app/manage-purchase-policies/manage-purchase-policies.component.ts","webpack:///src/app/manage-purchases/manage-purchases.component.ts","webpack:///src/app/manage-purchases/manage-purchases.component.html","webpack:///src/app/manage-types-of-purchase-policy/manage-types-of-purchase-policy.component.html","webpack:///src/app/manage-types-of-purchase-policy/manage-types-of-purchase-policy.component.ts","webpack:///src/app/open-store/open-store.component.ts","webpack:///src/app/open-store/open-store.component.html","webpack:///src/app/refresh-component/refresh-component.component.ts","webpack:///src/app/refresh-component/refresh-component.component.html","webpack:///src/app/register/register.component.ts","webpack:///src/app/register/register.component.html","webpack:///src/app/remove-store-manager/remove-store-manager.component.ts","webpack:///src/app/remove-store-manager/remove-store-manager.component.html","webpack:///src/app/remove-store-owner/remove-store-owner.component.ts","webpack:///src/app/remove-store-owner/remove-store-owner.component.html","webpack:///src/app/search-results/search-results.component.html","webpack:///src/app/search-results/search-results.component.ts","webpack:///src/app/show-statistics/show-statistics.component.html","webpack:///src/app/show-statistics/show-statistics.component.ts","webpack:///src/app/store-history-admin/store-history-admin.component.html","webpack:///src/app/store-history-admin/store-history-admin.component.ts","webpack:///src/app/store-history/store-history.component.html","webpack:///src/app/store-history/store-history.component.ts","webpack:///src/app/store-managment/store-managment.component.html","webpack:///src/app/store-managment/store-managment.component.ts","webpack:///src/app/stores-details/stores-details.component.html","webpack:///src/app/stores-details/stores-details.component.ts","webpack:///src/app/stores-list/stores-list.component.ts","webpack:///src/app/stores-list/stores-list.component.html","webpack:///src/app/user-history/user-history.component.html","webpack:///src/app/user-history/user-history.component.ts","webpack:///src/app/users-history-admin/users-history-admin.component.html","webpack:///src/app/users-history-admin/users-history-admin.component.ts","webpack:///src/app/view-cart/view-cart.component.ts","webpack:///src/app/view-cart/view-cart.component.html","webpack:///src/environments/environment.ts","webpack:///src/main.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","map","webpackContext","webpackContextResolve","__webpack_require__","o","webpackContextKeys","Object","AddDaysNotAllowedPurchasePolicyComponent","httpService","router","routerDaysPolicy","dropdownList","selectedItems","dropdownSettings","selectedDays","selectDaysNotAllowed","Sunday","Monday","Tuesday","Wednesday","Thursday","Friday","Saturday","storeName","storeid","actionFailed","messageToUser","snapshot","paramMap","get","item_id","item_text","item_txt","singleSelection","idField","textField","selectAllText","unSelectAllText","allowSearchFilter","item","includes","push","items","daysNotAllowed","value","request","StoreID","DaysNotAllowed","post","subscribe","data","Success","window","alert","navigateByUrl","skipLocationChange","navigate","response","JSON","parse","AnswerOrExceptionJson","Message","onSubmit","selector","templateUrl","styleUrls","AddItemConditionalDiscountMinItemsToDiscountOnAllComponent","routerAddOpenDiscount","selectedItemId","params","Map","set","getWithParamsAsync","dataStore","store","ContactDetails","Name","storeInventory","key","Items","costumerData","ItemID","Discount","discountPrecent","DurationInDays","durationInDays","MinItems","minItems","AddItemConditionalDiscountMinItemsToDiscountOnExtraItemsComponent","ExtraItems","extraItems","DiscountForExtra","discountForExtra","AddItemMinMaxPurchasePolicyComponent","routerAddItemMinMaxPolicy","addItemMinMaxPolicyDetails","MinAmount","minAmount","undefined","MaxAmount","maxAmount","AddItemComponent","routerAdd","addItemFailed","MessageToUser","StoreName","itemData","addItemRequest","categories","stringify","split","category","trim","amount","keywords","keyword","name","itemname","price","storeId","AddOpenDiscountComponent","addOpenDiscountDetails","AddStoreConditionalDiscountComponent","MinPurchase","minPurchase","discount","AddStoreManagerComponent","routerAppoint","appointStoreManagerFailed","customerData","appointOwnerRequest","StoreId","Username","username","AddStoreMinMaxPurchasePolicyComponent","routerAddStoreMinMaxPolicy","addStoreMinMaxPolicyDetails","AddStoreOwnerComponent","appointStoreOwnerFailed","AppComponent","_cdr","isAdmin","User","localStorage","getItem","setTimeout","detectChanges","searchItemName","details","itemName","SearchItemName","nativeElement","triggerSearchItems","triggerExtendedSearchItems","AppModule","forRoot","path","redirectTo","pathMatch","component","imports","declarations","providers","bootstrap","ApproveStoreOwnerComponent","approveStoreOwnerFailed","moment","MY_FORMATS","dateInput","display","monthYearLabel","dateA11yLabel","monthYearA11yLabel","CheckoutComponent","routerCheckout","date","checkoutFailed","orderId","ExpireYear","year","ExpireMonth","month","checkoutRequest","OrderID","PayingCustomerName","payingCustomerName","Card","card","Expire","CCV","ccv","ID","Address","address","City","city","Country","country","ZipCode","zipcode","postAsync","checkoutResponse","normalizedYear","ctrlValue","setValue","normalizedMonth","datepicker","close","provide","useClass","deps","useValue","chosenYearHandler","chosenMonthHandler","DiscountTypesEditPageComponent","routerDiscountsTypes","allTypesOfDiscount","formDeleteType","required","formAddType","discountTypesAllowed","possibleTypesToAdd","forEach","type","error","deleteTypeRequest","DiscountTypeString","addTypeRequest","deleteDiscountType","addDiscountType","backToDiscountManagement","DiscountsEditPageComponent","routerDiscountsEditPage","operatorsForComopsite","formDelete","formDiscountComposite","formDiscountLeft","formDiscountRight","formOperator","actionFailed0","actionFailed1","actionFailed2","discounts","dataDiscounts","compositeRequest","DiscountLeftID","DiscountID","DiscountRightID","BoolOperator","deleteRequest","AddOpenDiscount","AddItemConditionalDiscount_MinItems_ToDiscountOnAll","AddItemConditionalDiscount_MinItems_ToDiscountOnExtraItems","AddStoreConditionalDiscount","ComposeTwoDiscounts","deleteDiscount","DiscountsManagementComponent","routerDiscountsManager","discountTypesEditPage","discountsEditPage","backToStore","Total","DisplayOrderComponent","storesAndItems","getAsync","order","StoreOrders","session","storeOrder","getWithParamstAsync","storeInfoByIdResponse","storeItems","StoreOrderItems","OrderId","EditItemAmountInCartComponent","_location","updateAmountFailed","itemId","getWithParams","Id","Amount","dataToSend","back","UpdateAmount","EditItemComponent","editItemFailed","itemid","editItemRequest","Rank","rank","Price","Categories","Keywords","ExtendedSearchComponent","extenedSearchForm","filterItemRank","filterMinPrice","filterMaxPrice","filterStoreRank","onSubmitSearch","GetMessagesComponent","showMessagesFailed","Messages","length","HttpRequestService","_httpService","url","toPromise","param","parameters","paramsToSend","body","providedIn","ItemPageComponent","routerItem","inventoryPermission","storesWithPermissionsTuples","element","index","array","Item2","Item1","addToCartMethod","LoginComponent","loginFailed","setItem","_","location","reload","LogoutComponent","logoutSucces","removeItem","ManagePermissionsComponent","form","formEditPermission","addOrRemove","allPermissions","managePermissionsFailed","addOrRemovePermissionRequest","Permission","controls","editPermission","ManagePurchasePoliciesComponent","routerPurchasePolicies","formPurchasePolicyComposite","formPurchasePolicyLeft","formPurchasePolicyRight","purchasePolicies","dataPurchasePolicies","PolicyLeftID","PolicyID","PolicyRightID","AddItemMinMaxPurchasePolicy","AddStoreMinMaxPurchasePolicy","AddDaysNotAllowedPurchasePolicy","ComposeTwoPurchasePolicies","DeletePurchasePolicy","backToManagePurchases","ManagePurchasesComponent","manageTypesOfPurchasePolicy","managePurchasePolicies","ManageTypesOfPurchasePolicyComponent","routerPurchasePolicyTypes","allTypesOfPurchasePolicy","purchasePolicyTypesAllowed","PurchasePolicy","deletePurchasePolicyType","addPurchasePolicyType","OpenStoreComponent","openStoreFailed","storeData","RefreshComponentComponent","RegisterComponent","registerFailed","RemoveStoreManagerComponent","removeStoreManagerFailed","appointOwnerRequst","RemoveStoreOwnerComponent","removeStoreOwnerFailed","SearchResultsComponent","searchFailed","itemsByStoreName","keywordsAsString","dataSearch","results","paramsForStoreDetails","constructor","ShowStatisticsComponent","myData","myType","myWidth","myHeight","datefrom","dateto","mycolumnNames","myTitle","selectUsers","Guests","Registered","Managers","Owners","Admins","permission","event","ctrlValueTo","target","getFullYear","getMonth","getDate","ctrlValueFrom","statisticsReq","format","statisticsByUsers","v","console","log","ChangeDateFrom","ChangeDateTo","StoreHistoryAdminComponent","routerHistory","Orders","ordersAndItems","storeHistoryFailed","dataAdmin","dataOfHistory","StoreHistoryComponent","permissions","StoreManagmentComponent","routerManagement","appointOwnerPermission","removeOwnerPermission","appointManagerPermission","removeManagerPermission","historyPermission","policyPermission","historyAdminPermission","StoresDetailsComponent","StoresListComponent","getAllStoresFaild","stores","UserHistoryComponent","selectedOrderId","showTotal","ord","Order","UsersHistoryAdminComponent","userHistoryAdminFailed","ViewCartComponent","viewCartFaild","RemoveItemFromCartFailed","itemsToPresent","UpdateItemAmountInCartFailed","total","itemsInCart","pair","storeID","ItemToRemove","checkout","environment","production","bootstrapModule","err"],"mappings":"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","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","var map = {\n\t\"./af\": \"./node_modules/moment/locale/af.js\",\n\t\"./af.js\": \"./node_modules/moment/locale/af.js\",\n\t\"./ar\": \"./node_modules/moment/locale/ar.js\",\n\t\"./ar-dz\": \"./node_modules/moment/locale/ar-dz.js\",\n\t\"./ar-dz.js\": \"./node_modules/moment/locale/ar-dz.js\",\n\t\"./ar-kw\": \"./node_modules/moment/locale/ar-kw.js\",\n\t\"./ar-kw.js\": \"./node_modules/moment/locale/ar-kw.js\",\n\t\"./ar-ly\": \"./node_modules/moment/locale/ar-ly.js\",\n\t\"./ar-ly.js\": \"./node_modules/moment/locale/ar-ly.js\",\n\t\"./ar-ma\": \"./node_modules/moment/locale/ar-ma.js\",\n\t\"./ar-ma.js\": \"./node_modules/moment/locale/ar-ma.js\",\n\t\"./ar-sa\": \"./node_modules/moment/locale/ar-sa.js\",\n\t\"./ar-sa.js\": \"./node_modules/moment/locale/ar-sa.js\",\n\t\"./ar-tn\": \"./node_modules/moment/locale/ar-tn.js\",\n\t\"./ar-tn.js\": \"./node_modules/moment/locale/ar-tn.js\",\n\t\"./ar.js\": \"./node_modules/moment/locale/ar.js\",\n\t\"./az\": \"./node_modules/moment/locale/az.js\",\n\t\"./az.js\": \"./node_modules/moment/locale/az.js\",\n\t\"./be\": \"./node_modules/moment/locale/be.js\",\n\t\"./be.js\": \"./node_modules/moment/locale/be.js\",\n\t\"./bg\": \"./node_modules/moment/locale/bg.js\",\n\t\"./bg.js\": \"./node_modules/moment/locale/bg.js\",\n\t\"./bm\": \"./node_modules/moment/locale/bm.js\",\n\t\"./bm.js\": \"./node_modules/moment/locale/bm.js\",\n\t\"./bn\": \"./node_modules/moment/locale/bn.js\",\n\t\"./bn.js\": \"./node_modules/moment/locale/bn.js\",\n\t\"./bo\": \"./node_modules/moment/locale/bo.js\",\n\t\"./bo.js\": \"./node_modules/moment/locale/bo.js\",\n\t\"./br\": \"./node_modules/moment/locale/br.js\",\n\t\"./br.js\": \"./node_modules/moment/locale/br.js\",\n\t\"./bs\": \"./node_modules/moment/locale/bs.js\",\n\t\"./bs.js\": \"./node_modules/moment/locale/bs.js\",\n\t\"./ca\": \"./node_modules/moment/locale/ca.js\",\n\t\"./ca.js\": \"./node_modules/moment/locale/ca.js\",\n\t\"./cs\": \"./node_modules/moment/locale/cs.js\",\n\t\"./cs.js\": \"./node_modules/moment/locale/cs.js\",\n\t\"./cv\": \"./node_modules/moment/locale/cv.js\",\n\t\"./cv.js\": \"./node_modules/moment/locale/cv.js\",\n\t\"./cy\": \"./node_modules/moment/locale/cy.js\",\n\t\"./cy.js\": \"./node_modules/moment/locale/cy.js\",\n\t\"./da\": \"./node_modules/moment/locale/da.js\",\n\t\"./da.js\": \"./node_modules/moment/locale/da.js\",\n\t\"./de\": \"./node_modules/moment/locale/de.js\",\n\t\"./de-at\": \"./node_modules/moment/locale/de-at.js\",\n\t\"./de-at.js\": \"./node_modules/moment/locale/de-at.js\",\n\t\"./de-ch\": \"./node_modules/moment/locale/de-ch.js\",\n\t\"./de-ch.js\": \"./node_modules/moment/locale/de-ch.js\",\n\t\"./de.js\": \"./node_modules/moment/locale/de.js\",\n\t\"./dv\": \"./node_modules/moment/locale/dv.js\",\n\t\"./dv.js\": \"./node_modules/moment/locale/dv.js\",\n\t\"./el\": \"./node_modules/moment/locale/el.js\",\n\t\"./el.js\": \"./node_modules/moment/locale/el.js\",\n\t\"./en-au\": \"./node_modules/moment/locale/en-au.js\",\n\t\"./en-au.js\": \"./node_modules/moment/locale/en-au.js\",\n\t\"./en-ca\": \"./node_modules/moment/locale/en-ca.js\",\n\t\"./en-ca.js\": \"./node_modules/moment/locale/en-ca.js\",\n\t\"./en-gb\": \"./node_modules/moment/locale/en-gb.js\",\n\t\"./en-gb.js\": \"./node_modules/moment/locale/en-gb.js\",\n\t\"./en-ie\": \"./node_modules/moment/locale/en-ie.js\",\n\t\"./en-ie.js\": \"./node_modules/moment/locale/en-ie.js\",\n\t\"./en-il\": \"./node_modules/moment/locale/en-il.js\",\n\t\"./en-il.js\": \"./node_modules/moment/locale/en-il.js\",\n\t\"./en-in\": \"./node_modules/moment/locale/en-in.js\",\n\t\"./en-in.js\": \"./node_modules/moment/locale/en-in.js\",\n\t\"./en-nz\": \"./node_modules/moment/locale/en-nz.js\",\n\t\"./en-nz.js\": \"./node_modules/moment/locale/en-nz.js\",\n\t\"./en-sg\": \"./node_modules/moment/locale/en-sg.js\",\n\t\"./en-sg.js\": \"./node_modules/moment/locale/en-sg.js\",\n\t\"./eo\": \"./node_modules/moment/locale/eo.js\",\n\t\"./eo.js\": \"./node_modules/moment/locale/eo.js\",\n\t\"./es\": \"./node_modules/moment/locale/es.js\",\n\t\"./es-do\": \"./node_modules/moment/locale/es-do.js\",\n\t\"./es-do.js\": \"./node_modules/moment/locale/es-do.js\",\n\t\"./es-us\": \"./node_modules/moment/locale/es-us.js\",\n\t\"./es-us.js\": \"./node_modules/moment/locale/es-us.js\",\n\t\"./es.js\": \"./node_modules/moment/locale/es.js\",\n\t\"./et\": \"./node_modules/moment/locale/et.js\",\n\t\"./et.js\": \"./node_modules/moment/locale/et.js\",\n\t\"./eu\": \"./node_modules/moment/locale/eu.js\",\n\t\"./eu.js\": \"./node_modules/moment/locale/eu.js\",\n\t\"./fa\": \"./node_modules/moment/locale/fa.js\",\n\t\"./fa.js\": \"./node_modules/moment/locale/fa.js\",\n\t\"./fi\": \"./node_modules/moment/locale/fi.js\",\n\t\"./fi.js\": \"./node_modules/moment/locale/fi.js\",\n\t\"./fil\": \"./node_modules/moment/locale/fil.js\",\n\t\"./fil.js\": \"./node_modules/moment/locale/fil.js\",\n\t\"./fo\": \"./node_modules/moment/locale/fo.js\",\n\t\"./fo.js\": \"./node_modules/moment/locale/fo.js\",\n\t\"./fr\": \"./node_modules/moment/locale/fr.js\",\n\t\"./fr-ca\": \"./node_modules/moment/locale/fr-ca.js\",\n\t\"./fr-ca.js\": \"./node_modules/moment/locale/fr-ca.js\",\n\t\"./fr-ch\": \"./node_modules/moment/locale/fr-ch.js\",\n\t\"./fr-ch.js\": \"./node_modules/moment/locale/fr-ch.js\",\n\t\"./fr.js\": \"./node_modules/moment/locale/fr.js\",\n\t\"./fy\": \"./node_modules/moment/locale/fy.js\",\n\t\"./fy.js\": \"./node_modules/moment/locale/fy.js\",\n\t\"./ga\": \"./node_modules/moment/locale/ga.js\",\n\t\"./ga.js\": \"./node_modules/moment/locale/ga.js\",\n\t\"./gd\": \"./node_modules/moment/locale/gd.js\",\n\t\"./gd.js\": \"./node_modules/moment/locale/gd.js\",\n\t\"./gl\": \"./node_modules/moment/locale/gl.js\",\n\t\"./gl.js\": \"./node_modules/moment/locale/gl.js\",\n\t\"./gom-deva\": \"./node_modules/moment/locale/gom-deva.js\",\n\t\"./gom-deva.js\": \"./node_modules/moment/locale/gom-deva.js\",\n\t\"./gom-latn\": \"./node_modules/moment/locale/gom-latn.js\",\n\t\"./gom-latn.js\": \"./node_modules/moment/locale/gom-latn.js\",\n\t\"./gu\": \"./node_modules/moment/locale/gu.js\",\n\t\"./gu.js\": \"./node_modules/moment/locale/gu.js\",\n\t\"./he\": \"./node_modules/moment/locale/he.js\",\n\t\"./he.js\": \"./node_modules/moment/locale/he.js\",\n\t\"./hi\": \"./node_modules/moment/locale/hi.js\",\n\t\"./hi.js\": \"./node_modules/moment/locale/hi.js\",\n\t\"./hr\": \"./node_modules/moment/locale/hr.js\",\n\t\"./hr.js\": \"./node_modules/moment/locale/hr.js\",\n\t\"./hu\": \"./node_modules/moment/locale/hu.js\",\n\t\"./hu.js\": \"./node_modules/moment/locale/hu.js\",\n\t\"./hy-am\": \"./node_modules/moment/locale/hy-am.js\",\n\t\"./hy-am.js\": \"./node_modules/moment/locale/hy-am.js\",\n\t\"./id\": \"./node_modules/moment/locale/id.js\",\n\t\"./id.js\": \"./node_modules/moment/locale/id.js\",\n\t\"./is\": \"./node_modules/moment/locale/is.js\",\n\t\"./is.js\": \"./node_modules/moment/locale/is.js\",\n\t\"./it\": \"./node_modules/moment/locale/it.js\",\n\t\"./it-ch\": \"./node_modules/moment/locale/it-ch.js\",\n\t\"./it-ch.js\": \"./node_modules/moment/locale/it-ch.js\",\n\t\"./it.js\": \"./node_modules/moment/locale/it.js\",\n\t\"./ja\": \"./node_modules/moment/locale/ja.js\",\n\t\"./ja.js\": \"./node_modules/moment/locale/ja.js\",\n\t\"./jv\": \"./node_modules/moment/locale/jv.js\",\n\t\"./jv.js\": \"./node_modules/moment/locale/jv.js\",\n\t\"./ka\": \"./node_modules/moment/locale/ka.js\",\n\t\"./ka.js\": \"./node_modules/moment/locale/ka.js\",\n\t\"./kk\": \"./node_modules/moment/locale/kk.js\",\n\t\"./kk.js\": \"./node_modules/moment/locale/kk.js\",\n\t\"./km\": \"./node_modules/moment/locale/km.js\",\n\t\"./km.js\": \"./node_modules/moment/locale/km.js\",\n\t\"./kn\": \"./node_modules/moment/locale/kn.js\",\n\t\"./kn.js\": \"./node_modules/moment/locale/kn.js\",\n\t\"./ko\": \"./node_modules/moment/locale/ko.js\",\n\t\"./ko.js\": \"./node_modules/moment/locale/ko.js\",\n\t\"./ku\": \"./node_modules/moment/locale/ku.js\",\n\t\"./ku.js\": \"./node_modules/moment/locale/ku.js\",\n\t\"./ky\": \"./node_modules/moment/locale/ky.js\",\n\t\"./ky.js\": \"./node_modules/moment/locale/ky.js\",\n\t\"./lb\": \"./node_modules/moment/locale/lb.js\",\n\t\"./lb.js\": \"./node_modules/moment/locale/lb.js\",\n\t\"./lo\": \"./node_modules/moment/locale/lo.js\",\n\t\"./lo.js\": \"./node_modules/moment/locale/lo.js\",\n\t\"./lt\": \"./node_modules/moment/locale/lt.js\",\n\t\"./lt.js\": \"./node_modules/moment/locale/lt.js\",\n\t\"./lv\": \"./node_modules/moment/locale/lv.js\",\n\t\"./lv.js\": \"./node_modules/moment/locale/lv.js\",\n\t\"./me\": \"./node_modules/moment/locale/me.js\",\n\t\"./me.js\": \"./node_modules/moment/locale/me.js\",\n\t\"./mi\": \"./node_modules/moment/locale/mi.js\",\n\t\"./mi.js\": \"./node_modules/moment/locale/mi.js\",\n\t\"./mk\": \"./node_modules/moment/locale/mk.js\",\n\t\"./mk.js\": \"./node_modules/moment/locale/mk.js\",\n\t\"./ml\": \"./node_modules/moment/locale/ml.js\",\n\t\"./ml.js\": \"./node_modules/moment/locale/ml.js\",\n\t\"./mn\": \"./node_modules/moment/locale/mn.js\",\n\t\"./mn.js\": \"./node_modules/moment/locale/mn.js\",\n\t\"./mr\": \"./node_modules/moment/locale/mr.js\",\n\t\"./mr.js\": \"./node_modules/moment/locale/mr.js\",\n\t\"./ms\": \"./node_modules/moment/locale/ms.js\",\n\t\"./ms-my\": \"./node_modules/moment/locale/ms-my.js\",\n\t\"./ms-my.js\": \"./node_modules/moment/locale/ms-my.js\",\n\t\"./ms.js\": \"./node_modules/moment/locale/ms.js\",\n\t\"./mt\": \"./node_modules/moment/locale/mt.js\",\n\t\"./mt.js\": \"./node_modules/moment/locale/mt.js\",\n\t\"./my\": \"./node_modules/moment/locale/my.js\",\n\t\"./my.js\": \"./node_modules/moment/locale/my.js\",\n\t\"./nb\": \"./node_modules/moment/locale/nb.js\",\n\t\"./nb.js\": \"./node_modules/moment/locale/nb.js\",\n\t\"./ne\": \"./node_modules/moment/locale/ne.js\",\n\t\"./ne.js\": \"./node_modules/moment/locale/ne.js\",\n\t\"./nl\": \"./node_modules/moment/locale/nl.js\",\n\t\"./nl-be\": \"./node_modules/moment/locale/nl-be.js\",\n\t\"./nl-be.js\": \"./node_modules/moment/locale/nl-be.js\",\n\t\"./nl.js\": \"./node_modules/moment/locale/nl.js\",\n\t\"./nn\": \"./node_modules/moment/locale/nn.js\",\n\t\"./nn.js\": \"./node_modules/moment/locale/nn.js\",\n\t\"./oc-lnc\": \"./node_modules/moment/locale/oc-lnc.js\",\n\t\"./oc-lnc.js\": \"./node_modules/moment/locale/oc-lnc.js\",\n\t\"./pa-in\": \"./node_modules/moment/locale/pa-in.js\",\n\t\"./pa-in.js\": \"./node_modules/moment/locale/pa-in.js\",\n\t\"./pl\": \"./node_modules/moment/locale/pl.js\",\n\t\"./pl.js\": \"./node_modules/moment/locale/pl.js\",\n\t\"./pt\": \"./node_modules/moment/locale/pt.js\",\n\t\"./pt-br\": \"./node_modules/moment/locale/pt-br.js\",\n\t\"./pt-br.js\": \"./node_modules/moment/locale/pt-br.js\",\n\t\"./pt.js\": \"./node_modules/moment/locale/pt.js\",\n\t\"./ro\": \"./node_modules/moment/locale/ro.js\",\n\t\"./ro.js\": \"./node_modules/moment/locale/ro.js\",\n\t\"./ru\": \"./node_modules/moment/locale/ru.js\",\n\t\"./ru.js\": \"./node_modules/moment/locale/ru.js\",\n\t\"./sd\": \"./node_modules/moment/locale/sd.js\",\n\t\"./sd.js\": \"./node_modules/moment/locale/sd.js\",\n\t\"./se\": \"./node_modules/moment/locale/se.js\",\n\t\"./se.js\": \"./node_modules/moment/locale/se.js\",\n\t\"./si\": \"./node_modules/moment/locale/si.js\",\n\t\"./si.js\": \"./node_modules/moment/locale/si.js\",\n\t\"./sk\": \"./node_modules/moment/locale/sk.js\",\n\t\"./sk.js\": \"./node_modules/moment/locale/sk.js\",\n\t\"./sl\": \"./node_modules/moment/locale/sl.js\",\n\t\"./sl.js\": \"./node_modules/moment/locale/sl.js\",\n\t\"./sq\": \"./node_modules/moment/locale/sq.js\",\n\t\"./sq.js\": \"./node_modules/moment/locale/sq.js\",\n\t\"./sr\": \"./node_modules/moment/locale/sr.js\",\n\t\"./sr-cyrl\": \"./node_modules/moment/locale/sr-cyrl.js\",\n\t\"./sr-cyrl.js\": \"./node_modules/moment/locale/sr-cyrl.js\",\n\t\"./sr.js\": \"./node_modules/moment/locale/sr.js\",\n\t\"./ss\": \"./node_modules/moment/locale/ss.js\",\n\t\"./ss.js\": \"./node_modules/moment/locale/ss.js\",\n\t\"./sv\": \"./node_modules/moment/locale/sv.js\",\n\t\"./sv.js\": \"./node_modules/moment/locale/sv.js\",\n\t\"./sw\": \"./node_modules/moment/locale/sw.js\",\n\t\"./sw.js\": \"./node_modules/moment/locale/sw.js\",\n\t\"./ta\": \"./node_modules/moment/locale/ta.js\",\n\t\"./ta.js\": \"./node_modules/moment/locale/ta.js\",\n\t\"./te\": \"./node_modules/moment/locale/te.js\",\n\t\"./te.js\": \"./node_modules/moment/locale/te.js\",\n\t\"./tet\": \"./node_modules/moment/locale/tet.js\",\n\t\"./tet.js\": \"./node_modules/moment/locale/tet.js\",\n\t\"./tg\": \"./node_modules/moment/locale/tg.js\",\n\t\"./tg.js\": \"./node_modules/moment/locale/tg.js\",\n\t\"./th\": \"./node_modules/moment/locale/th.js\",\n\t\"./th.js\": \"./node_modules/moment/locale/th.js\",\n\t\"./tl-ph\": \"./node_modules/moment/locale/tl-ph.js\",\n\t\"./tl-ph.js\": \"./node_modules/moment/locale/tl-ph.js\",\n\t\"./tlh\": \"./node_modules/moment/locale/tlh.js\",\n\t\"./tlh.js\": \"./node_modules/moment/locale/tlh.js\",\n\t\"./tr\": \"./node_modules/moment/locale/tr.js\",\n\t\"./tr.js\": \"./node_modules/moment/locale/tr.js\",\n\t\"./tzl\": \"./node_modules/moment/locale/tzl.js\",\n\t\"./tzl.js\": \"./node_modules/moment/locale/tzl.js\",\n\t\"./tzm\": \"./node_modules/moment/locale/tzm.js\",\n\t\"./tzm-latn\": \"./node_modules/moment/locale/tzm-latn.js\",\n\t\"./tzm-latn.js\": \"./node_modules/moment/locale/tzm-latn.js\",\n\t\"./tzm.js\": \"./node_modules/moment/locale/tzm.js\",\n\t\"./ug-cn\": \"./node_modules/moment/locale/ug-cn.js\",\n\t\"./ug-cn.js\": \"./node_modules/moment/locale/ug-cn.js\",\n\t\"./uk\": \"./node_modules/moment/locale/uk.js\",\n\t\"./uk.js\": \"./node_modules/moment/locale/uk.js\",\n\t\"./ur\": \"./node_modules/moment/locale/ur.js\",\n\t\"./ur.js\": \"./node_modules/moment/locale/ur.js\",\n\t\"./uz\": \"./node_modules/moment/locale/uz.js\",\n\t\"./uz-latn\": \"./node_modules/moment/locale/uz-latn.js\",\n\t\"./uz-latn.js\": \"./node_modules/moment/locale/uz-latn.js\",\n\t\"./uz.js\": \"./node_modules/moment/locale/uz.js\",\n\t\"./vi\": \"./node_modules/moment/locale/vi.js\",\n\t\"./vi.js\": \"./node_modules/moment/locale/vi.js\",\n\t\"./x-pseudo\": \"./node_modules/moment/locale/x-pseudo.js\",\n\t\"./x-pseudo.js\": \"./node_modules/moment/locale/x-pseudo.js\",\n\t\"./yo\": \"./node_modules/moment/locale/yo.js\",\n\t\"./yo.js\": \"./node_modules/moment/locale/yo.js\",\n\t\"./zh-cn\": \"./node_modules/moment/locale/zh-cn.js\",\n\t\"./zh-cn.js\": \"./node_modules/moment/locale/zh-cn.js\",\n\t\"./zh-hk\": \"./node_modules/moment/locale/zh-hk.js\",\n\t\"./zh-hk.js\": \"./node_modules/moment/locale/zh-hk.js\",\n\t\"./zh-mo\": \"./node_modules/moment/locale/zh-mo.js\",\n\t\"./zh-mo.js\": \"./node_modules/moment/locale/zh-mo.js\",\n\t\"./zh-tw\": \"./node_modules/moment/locale/zh-tw.js\",\n\t\"./zh-tw.js\": \"./node_modules/moment/locale/zh-tw.js\"\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = \"./node_modules/moment/locale sync recursive ^\\\\.\\\\/.*$\";","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, Router } from \"@angular/router\";\nimport { AddDaysNotAllowedPurchasePolicyBodyRequest } from '../contracts.service';\nimport { HttpRequestService, JsonParsed } from '../http-request.service';\nimport { FormGroup, FormControl } from '@angular/forms';\n\n@Component({\n  selector: 'app-add-days-not-allowed-purchase-policy',\n  templateUrl: './add-days-not-allowed-purchase-policy.component.html',\n  styleUrls: ['./add-days-not-allowed-purchase-policy.component.css']\n})\nexport class AddDaysNotAllowedPurchasePolicyComponent implements OnInit {\n    storeName: string;\n    storeid: string;\n    actionFailed: boolean;\n    messageToUser: string;\n\n    dropdownList = [];\n    selectedItems = [];\n    dropdownSettings: any = {};\n    selectedDays: any[] = [];\n\n    selectDaysNotAllowed = new FormGroup({\n        Sunday: new FormControl(),\n        Monday: new FormControl(),\n        Tuesday: new FormControl(),\n        Wednesday: new FormControl(),\n        Thursday: new FormControl(),\n        Friday: new FormControl(),\n        Saturday: new FormControl()\n    });\n\n \n    constructor(private httpService: HttpRequestService, private router: ActivatedRoute, private routerDaysPolicy: Router)\n    {\n        this.storeName = \"\";\n        this.storeid = \"\";\n        this.actionFailed = false;\n        this.messageToUser = \"\";\n    }\n\n    ngOnInit(): void {\n        this.storeid = this.router.snapshot.paramMap.get('storeid');\n        this.storeName = this.router.snapshot.paramMap.get('storeName');\n\n        this.dropdownList = [\n            { item_id: 1, item_text: 'Sunday' },\n            { item_id: 2, item_text: 'Monday' },\n            { item_id: 3, item_text: 'Tuesday' },\n            { item_id: 4, item_text: 'Wednesday' },\n            { item_id: 5, item_text: 'Thursday' },\n            { item_id: 6, item_txt: 'Friday' },\n            { item_id: 6, item_txt: 'Saturday' }\n        ];\n        this.selectedItems = [];\n\n        this.dropdownSettings = {\n            singleSelection: false,\n            idField: 'item_id',\n            textField: 'item_text',\n            selectAllText: 'Select All',\n            unSelectAllText: 'UnSelect All',\n            allowSearchFilter: true\n        };\n    }\n\n    onItemSelect(item: any) {\n        if (!this.selectedDays.includes(item)) {\n\n        }\n        this.selectedDays.push(item);\n        //console.log(item);\n    }\n    onSelectAll(items: any) {\n        //console.log(items);\n    }\n\n    onSubmit() {\n        let daysNotAllowed: number[] = [];\n\n        if (this.selectDaysNotAllowed.get('Sunday').value) {\n            daysNotAllowed.push(1);\n        }\n\n        if (this.selectDaysNotAllowed.get('Monday').value) {\n            daysNotAllowed.push(2);\n        }\n\n        if (this.selectDaysNotAllowed.get('Tuesday').value) {\n            daysNotAllowed.push(3);\n        }\n\n        if (this.selectDaysNotAllowed.get('Wednesday').value) {\n            daysNotAllowed.push(4);\n        }\n\n        if (this.selectDaysNotAllowed.get('Thursday').value) {\n            daysNotAllowed.push(5);\n        }\n\n        if (this.selectDaysNotAllowed.get('Friday').value) {\n            daysNotAllowed.push(6);\n        }\n\n        if (this.selectDaysNotAllowed.get('Saturday').value) {\n            daysNotAllowed.push(7);\n        }\n\n        let request: AddDaysNotAllowedPurchasePolicyBodyRequest = {\n            StoreID: this.storeid,\n            DaysNotAllowed: daysNotAllowed\n        }\n\n        this.httpService.post('api/store/AddDaysNotAllowedPurchasePolicy', request).subscribe((data: JsonParsed) => {\n            if (data.Success) {\n                window.alert('The purchase policy type has been added to store');\n                this.routerDaysPolicy.navigateByUrl('/RefreshComponent', { skipLocationChange: true }).then(() => {\n                    this.routerDaysPolicy.navigate(['/home/' + this.storeid + '/storeManagment/purchasesManagment', { 'storeName': this.storeName }]);\n                });\n            } else {\n                this.actionFailed = true;\n                let response = JSON.parse(data.AnswerOrExceptionJson);\n                if (response) {\n                    this.messageToUser = response.Message;\n                }\n            }\n        });\n    }\n}\n","<!DOCTYPE html>\n<html>\n<head>\n    <meta charset=\"utf-8\">\n    <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\">\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\n    <title>Add days not allowed purchase Policy</title>\n    <link href=\"https://fonts.googleapis.com/css?family=Roboto:300,400\" rel=\"stylesheet\">\n</head>\n<body>\n    <div class=\"container\">\n        <form [formGroup]=\"selectDaysNotAllowed\" (ngSubmit)=\"onSubmit()\">\n            <h2 class=\"form-signin-heading\">Select days not possible to purchase in store: {{ storeName }}</h2>\n            <!--Spacer-->\n            <hr class=\"spacer\">\n            <!--Spacer-->\n            <label for=\"durationInDays\" class=\"sr-only\">Number of days for discount</label>\n            <p>\n                <input type=\"checkbox\" formControlName=\"Sunday\">Sunday\n            </p>\n            <p>\n                <input type=\"checkbox\" formControlName=\"Monday\">Monday\n            </p>\n            <p>\n                <input type=\"checkbox\" formControlName=\"Tuesday\">Tuesday\n            </p>\n            <p>\n                <input type=\"checkbox\" formControlName=\"Wednesday\">Wednesday\n            </p>\n            <p>\n                <input type=\"checkbox\" formControlName=\"Thursday\">Thursday\n            </p>\n            <p>\n                <input type=\"checkbox\" formControlName=\"Friday\">Friday\n            </p>\n            <p>\n                <input type=\"checkbox\" formControlName=\"Saturday\">Saturday\n            </p>\n            <!--Spacer-->\n            <hr class=\"spacer\">\n            <!--Spacer-->\n            <button class=\"btn btn-lg btn-primary btn-block\" type=\"submit\">Select</button>\n        </form>\n        <div *ngIf=\"actionFailed == true\">\n            <div class=\"form-signin-heading\" style=\"color:red;\">{{messageToUser}}</div>\n        </div>\n    </div> <!-- /container -->\n</body>\n</html>\n","<!DOCTYPE html>\r\n<html>\r\n<head>\r\n    <meta charset=\"utf-8\">\r\n    <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\">\r\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\r\n    <title>Add conditional discount for item discount on all</title>\r\n    <link href=\"https://fonts.googleapis.com/css?family=Roboto:300,400\" rel=\"stylesheet\">\r\n</head>\r\n<body>\r\n    <div class=\"container\">\r\n        <form #addItemConditionalDiscount=\"ngForm\" ngNativeValidate (ngSubmit)=\"onSubmit(addItemConditionalDiscount.value)\" class=\"form-signin\">\r\n            <h2 class=\"form-signin-heading\">Add conditional discount for item in store {{ storeName }}: minimum items for discount on all</h2>\r\n            <hr class=\"spacer\">\r\n            <mat-form-field>\r\n                <mat-label>Item</mat-label>\r\n                <mat-select [(value)]=\"selectedItemId\">\r\n                    <mat-option *ngFor=\"let item of items\" [value]=\"item.Id\">\r\n                        {{ item.Name }}\r\n                    </mat-option>\r\n                </mat-select>\r\n            </mat-form-field>\r\n            <hr class=\"spacer\">\r\n            <label for=\"discountPrecent\" class=\"sr-only\">Discount precent</label>\r\n            <input type=\"number\" step=\"0.01\" min=\"0\" max=\"1\" name=\"discountPrecent\" class=\"form-control\" placeholder=\"Discount precent\" required autofocus ngModel>\r\n            <hr class=\"spacer\">\r\n            <label for=\"durationInDays\" class=\"sr-only\">Number of days for discount</label>\r\n            <input type=\"number\" name=\"durationInDays\" class=\"form-control\" placeholder=\"Duration in days\" required autofocus ngModel>\r\n            <hr class=\"spacer\">\r\n            <label for=\"minItems\" class=\"sr-only\">Minimum items for discount</label>\r\n            <input type=\"number\" name=\"minItems\" class=\"form-control\" placeholder=\"Minimum items\" required autofocus ngModel>\r\n            <hr class=\"spacer\">\r\n            <button class=\"btn btn-lg btn-primary btn-block\" type=\"submit\">Add</button>\r\n        </form>\r\n        <div *ngIf=\"actionFailed == true\">\r\n            <div class=\"form-signin-heading\" style=\"color:red;\">{{messageToUser}}</div>\r\n        </div>\r\n    </div> \r\n</body>\r\n</html>\r\n","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, Router } from \"@angular/router\";\nimport { MyStore, Item, StoreInventory, AddItemConditionalDiscount_MinItems_ToDiscountOnAllBodyRequest } from '../contracts.service';\nimport { HttpRequestService, JsonParsed } from '../http-request.service';\n\n\n@Component({\n  selector: 'app-add-item-conditional-discount-min-items-to-discount-on-all',\n  templateUrl: './add-item-conditional-discount-min-items-to-discount-on-all.component.html',\n  styleUrls: ['./add-item-conditional-discount-min-items-to-discount-on-all.component.css']\n})\nexport class AddItemConditionalDiscountMinItemsToDiscountOnAllComponent implements OnInit {\n    storeName: string;\n    storeid: string;\n    store: MyStore;\n    items: Item[];\n    storeInventory: StoreInventory;\n    selectedItemId: string;\n    actionFailed: boolean;\n    messageToUser: string;\n\n    constructor(private httpService: HttpRequestService, private router: ActivatedRoute, private routerAddOpenDiscount: Router) {\n        this.storeName = \"\";\n        this.storeid = \"\";\n        this.selectedItemId = \"\";\n        this.actionFailed = false;\n        this.messageToUser = \"\";\n        this.items = [];\n    }\n\n    async ngOnInit(): Promise<void> {\n        this.storeid = this.router.snapshot.paramMap.get('storeid');\n        let params: Map<string, string> = new Map();\n        params.set(\"storeid\", this.storeid);\n\n        let dataStore: JsonParsed = await this.httpService.getWithParamsAsync('api/store/GetStoreInformationByID', params);\n        if (dataStore.Success) {\n            this.store = JSON.parse(dataStore.AnswerOrExceptionJson);\n            this.storeName = this.store.ContactDetails.Name;\n            this.storeInventory = this.store.storeInventory;\n            for (let key in this.storeInventory.Items) {\n                this.items.push(this.storeInventory.Items[key]);\n            }\n        }\n        else {\n            let response = JSON.parse(dataStore.AnswerOrExceptionJson);\n            if (response) {\n                this.actionFailed = true;\n                this.messageToUser = response.Message;\n            }\n        }\n    }\n\n    onSubmit(costumerData) {\n        let request: AddItemConditionalDiscount_MinItems_ToDiscountOnAllBodyRequest = {\n            StoreID: this.storeid,\n            ItemID: this.selectedItemId,\n            Discount: costumerData.discountPrecent,\n            DurationInDays: costumerData.durationInDays,\n            MinItems: costumerData.minItems\n        }\n\n        this.httpService.post('api/store/AddItemConditionalDiscount_MinItems_ToDiscountOnAll', request).subscribe((data: JsonParsed) => {\n            if (data.Success) {\n                window.alert('The discount has been added to the store');\n                this.routerAddOpenDiscount.navigateByUrl('/RefreshComponent', { skipLocationChange: true }).then(() =>\n                    this.routerAddOpenDiscount.navigate(['/home/' + this.storeid + '/storeManagment/discountsManagement', { 'storeName': this.storeName }]));\n            } else {\n                this.actionFailed = true;\n                let response = JSON.parse(data.AnswerOrExceptionJson);\n                if (response) {\n                    this.messageToUser = response.Message;\n                }\n            }\n        });\n    }\n\n}\n","<!DOCTYPE html>\r\n<html>\r\n<head>\r\n    <meta charset=\"utf-8\">\r\n    <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\">\r\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\r\n    <title>>Add conditional discount for item discount on extra</title>\r\n    <link href=\"https://fonts.googleapis.com/css?family=Roboto:300,400\" rel=\"stylesheet\">\r\n</head>\r\n<body>\r\n    <div class=\"container\">\r\n        <form #addItemConditionalDiscount=\"ngForm\" ngNativeValidate (ngSubmit)=\"onSubmit(addItemConditionalDiscount.value)\" class=\"form-signin\">\r\n            <h2 class=\"form-signin-heading\">Add conditional discount for item in store {{ storeName }}: minimum items for discount on extra</h2>\r\n            <hr class=\"spacer\">\r\n            <mat-form-field>\r\n                <mat-label>Item</mat-label>\r\n                <mat-select [(value)]=\"selectedItemId\">\r\n                    <mat-option *ngFor=\"let item of items\" [value]=\"item.Id\">\r\n                        {{ item.Name }}\r\n                    </mat-option>\r\n                </mat-select>\r\n            </mat-form-field>\r\n            <hr class=\"spacer\">\r\n            <label for=\"discountForExtra\" class=\"sr-only\">Discount For Extra</label>\r\n            <input type=\"number\" step=\"0.01\" min=\"0\" max=\"1\" name=\"discountForExtra\" class=\"form-control\" placeholder=\"Discount For Extra\" required autofocus ngModel>\r\n            <hr class=\"spacer\">\r\n            <label for=\"durationInDays\" class=\"sr-only\">Number of days for discount</label>\r\n            <input type=\"number\" name=\"durationInDays\" class=\"form-control\" placeholder=\"Duration in days\" required autofocus ngModel>\r\n            <hr class=\"spacer\">\r\n            <label for=\"minItems\" class=\"sr-only\">Minimum items for discount</label>\r\n            <input type=\"number\" name=\"minItems\" class=\"form-control\" placeholder=\"Minimum items\" required autofocus ngModel>\r\n            <hr class=\"spacer\">\r\n            <label for=\"extraItems\" class=\"sr-only\">Extra items for discount</label>\r\n            <input type=\"number\" name=\"extraItems\" class=\"form-control\" placeholder=\"Extra items\" required autofocus ngModel>\r\n            <hr class=\"spacer\">\r\n            <button class=\"btn btn-lg btn-primary btn-block\" type=\"submit\">Add</button>\r\n        </form>\r\n        <div *ngIf=\"actionFailed == true\">\r\n            <div class=\"form-signin-heading\" style=\"color:red;\">{{messageToUser}}</div>\r\n        </div>\r\n    </div>\r\n</body>\r\n</html>\r\n","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, Router } from \"@angular/router\";\nimport { MyStore, Item, StoreInventory, AddItemConditionalDiscount_MinItems_ToDiscountOnExtraItemsBodyRequest } from '../contracts.service';\nimport { HttpRequestService, JsonParsed } from '../http-request.service';\n\n\n@Component({\n  selector: 'app-add-item-conditional-discount-min-items-to-discount-on-extra-items',\n  templateUrl: './add-item-conditional-discount-min-items-to-discount-on-extra-items.component.html',\n  styleUrls: ['./add-item-conditional-discount-min-items-to-discount-on-extra-items.component.css']\n})\nexport class AddItemConditionalDiscountMinItemsToDiscountOnExtraItemsComponent implements OnInit {\n    storeName: string;\n    storeid: string;\n    store: MyStore;\n    items: Item[];\n    storeInventory: StoreInventory;\n    selectedItemId: string;\n    actionFailed: boolean;\n    messageToUser: string;\n\n    constructor(private httpService: HttpRequestService, private router: ActivatedRoute, private routerAddOpenDiscount: Router) {\n        this.storeName = \"\";\n        this.storeid = \"\";\n        this.selectedItemId = \"\";\n        this.actionFailed = false;\n        this.messageToUser = \"\";\n        this.items = [];\n    }\n\n    async ngOnInit(): Promise<void> {\n        this.storeid = this.router.snapshot.paramMap.get('storeid');\n        let params: Map<string, string> = new Map();\n        params.set(\"storeid\", this.storeid);\n\n        let dataStore: JsonParsed = await this.httpService.getWithParamsAsync('api/store/GetStoreInformationByID', params);\n        if (dataStore.Success) {\n            this.store = JSON.parse(dataStore.AnswerOrExceptionJson);\n            this.storeName = this.store.ContactDetails.Name;\n            this.storeInventory = this.store.storeInventory;\n            for (let key in this.storeInventory.Items) {\n                this.items.push(this.storeInventory.Items[key]);\n            }\n        }\n        else {\n            let response = JSON.parse(dataStore.AnswerOrExceptionJson);\n            if (response) {\n                this.actionFailed = true;\n                this.messageToUser = response.Message;\n            }\n        }\n    }\n\n    onSubmit(costumerData) {\n        let request: AddItemConditionalDiscount_MinItems_ToDiscountOnExtraItemsBodyRequest = {\n            StoreID: this.storeid,\n            ItemID: this.selectedItemId,\n            DurationInDays: costumerData.durationInDays,\n            MinItems: costumerData.minItems,\n            ExtraItems: costumerData.extraItems,\n            DiscountForExtra: costumerData.discountForExtra\n        }\n\n        this.httpService.post('api/store/AddItemConditionalDiscount_MinItems_ToDiscountOnExtraItems', request).subscribe((data: JsonParsed) => {\n            if (data.Success) {\n                window.alert('The discount has been added to the store');\n                this.routerAddOpenDiscount.navigateByUrl('/RefreshComponent', { skipLocationChange: true }).then(() =>\n                    this.routerAddOpenDiscount.navigate(['/home/' + this.storeid + '/storeManagment/discountsManagement', { 'storeName': this.storeName }]));\n            } else {\n                this.actionFailed = true;\n                let response = JSON.parse(data.AnswerOrExceptionJson);\n                if (response) {\n                    this.messageToUser = response.Message;\n                }\n            }\n        });\n    }\n\n}\n","<!DOCTYPE html>\n<html>\n<head>\n    <meta charset=\"utf-8\">\n    <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\">\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\n    <title>Add Item Min Max Purchase Policy</title>\n    <link href=\"https://fonts.googleapis.com/css?family=Roboto:300,400\" rel=\"stylesheet\">\n</head>\n<body>\n    <div class=\"container\">\n        <form #addItemMinMaxPolicy=\"ngForm\" ngNativeValidate (ngSubmit)=\"onSubmit(addItemMinMaxPolicy.value)\" class=\"form-signin\">\n            <h2 class=\"form-signin-heading\">Add item min max policy in store: {{ storeName }}</h2>\n            <!--Spacer-->\n            <hr class=\"spacer\">\n            <!--Spacer-->\n            <mat-form-field>\n                <mat-label>Item</mat-label>\n                <mat-select [(value)]=\"selectedItemId\">\n                    <mat-option *ngFor=\"let item of items\" [value]=\"item.Id\">\n                        {{ item.Name }}\n                    </mat-option>\n                </mat-select>\n            </mat-form-field>\n            <!--Spacer-->\n            <hr class=\"spacer\">\n            <!--Spacer-->\n            <label for=\"minAmount\" class=\"sr-only\">Minimum amount</label>\n            <input type=\"number\" name=\"minAmount\" class=\"form-control\" placeholder=\"Minimum amount\" autofocus ngModel>\n            <!--Spacer-->\n            <hr class=\"spacer\">\n            <!--Spacer-->\n            <label for=\"maxAmount\" class=\"sr-only\">Maximum amount</label>\n            <input type=\"number\" name=\"maxAmount\" class=\"form-control\" placeholder=\"Maximum amount\" autofocus ngModel>\n            <!--Spacer-->\n            <hr class=\"spacer\">\n            <!--Spacer-->\n            <button class=\"btn btn-lg btn-primary btn-block\" type=\"submit\">Add</button>\n        </form>\n        <div *ngIf=\"actionFailed == true\">\n            <div class=\"form-signin-heading\" style=\"color:red;\">{{messageToUser}}</div>\n        </div>\n    </div> <!-- /container -->\n</body>\n</html>\n","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, Router } from \"@angular/router\";\nimport { MyStore, Item, StoreInventory, AddItemMinMaxPurchasePolicyBodyRequest } from '../contracts.service';\nimport { HttpRequestService, JsonParsed } from '../http-request.service';\n\n@Component({\n  selector: 'app-add-item-min-max-purchase-policy',\n  templateUrl: './add-item-min-max-purchase-policy.component.html',\n  styleUrls: ['./add-item-min-max-purchase-policy.component.css']\n})\nexport class AddItemMinMaxPurchasePolicyComponent implements OnInit {\n    storeName: string;\n    storeid: string;\n    store: MyStore;\n    items: Item[];\n    storeInventory: StoreInventory;\n    selectedItemId: string;\n    actionFailed: boolean;\n    messageToUser: string;\n\n    constructor(private httpService: HttpRequestService, private router: ActivatedRoute, private routerAddItemMinMaxPolicy: Router) {\n        this.storeName = \"\";\n        this.storeid = \"\";\n        this.selectedItemId = \"\";\n        this.actionFailed = false;\n        this.messageToUser = \"\";\n        this.items = [];\n    }\n\n    async ngOnInit(): Promise<void> {\n        this.storeid = this.router.snapshot.paramMap.get('storeid');\n        this.storeName = this.router.snapshot.paramMap.get('storeName');\n        let params: Map<string, string> = new Map();\n        params.set(\"storeid\", this.storeid);\n\n        let dataStore: JsonParsed = await this.httpService.getWithParamsAsync('api/store/GetStoreInformationByID', params);\n        if (dataStore.Success) {\n            this.store = JSON.parse(dataStore.AnswerOrExceptionJson);\n            this.storeName = this.store.ContactDetails.Name;\n            this.storeInventory = this.store.storeInventory;\n            for (let key in this.storeInventory.Items) {\n                this.items.push(this.storeInventory.Items[key]);\n            }\n        }\n        else {\n            let response = JSON.parse(dataStore.AnswerOrExceptionJson);\n            if (response) {\n                this.actionFailed = true;\n                this.messageToUser = response.Message;\n            }\n        }\n    }\n\n    onSubmit(addItemMinMaxPolicyDetails) {\n        let request: AddItemMinMaxPurchasePolicyBodyRequest = {\n            StoreID: this.storeid,\n            ItemID: this.selectedItemId,\n            MinAmount: addItemMinMaxPolicyDetails.minAmount != \"\" ? addItemMinMaxPolicyDetails.minAmount : undefined,\n            MaxAmount: addItemMinMaxPolicyDetails.maxAmount != \"\" ? addItemMinMaxPolicyDetails.maxAmount : undefined\n        };\n\n        this.httpService.post('api/store/AddItemMinMaxPurchasePolicy', request).subscribe((data: JsonParsed) => {\n            if (data.Success) {\n                window.alert('The purchase policy has been added to the store');\n                this.routerAddItemMinMaxPolicy.navigateByUrl('/RefreshComponent', { skipLocationChange: true }).then(() =>\n                    this.routerAddItemMinMaxPolicy.navigate(['/home/' + this.storeid + '/storeManagment/purchasesManagment', { 'storeName': this.storeName }]));\n            } else {\n                this.actionFailed = true;\n                let response = JSON.parse(data.AnswerOrExceptionJson);\n                if (response) {\n                    this.messageToUser = response.Message;\n                }\n            }\n        });\n    }\n\n}\n","import { Component, OnInit } from '@angular/core';\r\nimport { ActivatedRoute, Router } from \"@angular/router\";\r\nimport { HttpRequestService, JsonParsed } from '../http-request.service';\r\nimport { MyStore, AddItemBodyRequest } from '../contracts.service';\r\n\r\n@Component({\r\n  selector: 'app-add-item',\r\n  templateUrl: './add-item.component.html',\r\n  styleUrls: ['./add-item.component.css']\r\n})\r\nexport class AddItemComponent implements OnInit {\r\n    addItemFailed: boolean;\r\n    MessageToUser: string;\r\n    id: string;\r\n    StoreName: string;\r\n\r\n    constructor(\r\n        private router: ActivatedRoute,\r\n        private routerAdd: Router,\r\n        private httpService: HttpRequestService,\r\n    ) {\r\n        this.addItemFailed = false;\r\n        this.MessageToUser = '';\r\n    }\r\n\r\n    ngOnInit(): void {\r\n        this.id = this.router.snapshot.paramMap.get('storeid');\r\n        this.StoreName = this.router.snapshot.paramMap.get('storeName');\r\n    }\r\n\r\n    onSubmit(itemData) {\r\n        let addItemRequest: AddItemBodyRequest =\r\n        {\r\n            categories: JSON.stringify(itemData.categories.split(',').map(function (category) {\r\n                return category.trim();\r\n            })),\r\n            amount: itemData.amount,\r\n            keywords: JSON.stringify(itemData.keywords.split(',').map(function (keyword) {\r\n                return keyword.trim();\r\n            })),\r\n            name: itemData.itemname,\r\n            price: itemData.price,\r\n            storeId: this.id\r\n        }\r\n        \r\n        this.httpService.post('api/store/AddItem', addItemRequest).subscribe((data: JsonParsed) => {\r\n            if (data.Success) {\r\n                this.routerAdd.navigateByUrl('/home/' + this.id);\r\n            } else {\r\n                this.addItemFailed = true;\r\n                let response = JSON.parse(data.AnswerOrExceptionJson);\r\n                if (response) {\r\n                    this.MessageToUser = response.Message;\r\n                }\r\n            }\r\n        });\r\n    }\r\n}\r\n","<!DOCTYPE html>\r\n<html>\r\n<head>\r\n    <meta charset=\"utf-8\">\r\n    <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\">\r\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\r\n    <title>Custom Bootstrap Login Page</title>\r\n    <link href=\"https://fonts.googleapis.com/css?family=Roboto:300,400\" rel=\"stylesheet\">\r\n</head>\r\n<body>\r\n    <div class=\"container\">\r\n        <form #addItemForm=\"ngForm\" (ngSubmit)=\"onSubmit(addItemForm.value)\" class=\"form-signin\">\r\n            <h2 class=\"form-signin-heading\">Add Item To Store: {{ StoreName }}</h2>\r\n            <!--Spacer-->\r\n            <hr class=\"spacer\">\r\n            <!--Spacer-->\r\n            <label for=\"itemname\" class=\"sr-only\">Item Name</label>\r\n            <input type=\"text\" name=\"itemname\" class=\"form-control\" placeholder=\"Item Name\" required autofocus ngModel>\r\n            <!--Spacer-->\r\n            <hr class=\"spacer\">\r\n            <!--Spacer-->\r\n            <label for=\"amount\" class=\"sr-only\">Amount</label>\r\n            <input type=\"number\" name=\"amount\" class=\"form-control\" placeholder=\"Amount\" required autofocus ngModel>\r\n            <!--Spacer-->\r\n            <hr class=\"spacer\">\r\n            <!--Spacer-->\r\n            <label for=\"categories\" class=\"sr-only\">Categories</label>\r\n            <input type=\"text\" name=\"categories\" class=\"form-control\" placeholder=\"Categories\" required autofocus ngModel>\r\n            <!--Spacer-->\r\n            <hr class=\"spacer\">\r\n            <!--Spacer-->\r\n            <label for=\"price\" class=\"sr-only\">Item Price</label>\r\n            <input type=\"number\" name=\"price\" class=\"form-control\" placeholder=\"Item Price\" required autofocus ngModel>\r\n            <!--Spacer-->\r\n            <hr class=\"spacer\">\r\n            <!--Spacer-->\r\n            <label for=\"keywords\" class=\"sr-only\">Key Words</label>\r\n            <input type=\"text\" name=\"keywords\" class=\"form-control\" placeholder=\"Key Words\" required autofocus ngModel>\r\n            <button class=\"btn btn-lg btn-primary btn-block\" type=\"submit\">Add Item</button>\r\n        </form>\r\n        <div *ngIf=\"addItemFailed == true\">\r\n            <div class=\"form-signin-heading\" style=\"color:red;\">{{MessageToUser}}</div>\r\n        </div>\r\n    </div> <!-- /container -->\r\n</body>\r\n</html>\r\n","<!DOCTYPE html>\n<html>\n<head>\n    <meta charset=\"utf-8\">\n    <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\">\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\n    <title>Add Open Discount</title>\n    <link href=\"https://fonts.googleapis.com/css?family=Roboto:300,400\" rel=\"stylesheet\">\n</head>\n<body>\n    <div class=\"container\">\n        <form #addOpenDiscount=\"ngForm\" ngNativeValidate (ngSubmit)=\"onSubmit(addOpenDiscount.value)\" class=\"form-signin\">\n            <h2 class=\"form-signin-heading\">Add open discount in store: {{ storeName }}</h2>\n            <!--Spacer-->\n            <hr class=\"spacer\">\n            <!--Spacer-->\n            <mat-form-field>\n                <mat-label>Item</mat-label>\n                <mat-select [(value)]=\"selectedItemId\">\n                    <mat-option *ngFor=\"let item of items\" [value]=\"item.Id\">\n                        {{ item.Name }}\n                    </mat-option>\n                </mat-select>\n            </mat-form-field>\n            <!--Spacer-->\n            <hr class=\"spacer\">\n            <!--Spacer-->\n            <label for=\"discountPrecent\" class=\"sr-only\">Discount precent</label>\n            <input type=\"number\" step=\"0.01\" min=\"0\" max=\"1\" name=\"discountPrecent\" class=\"form-control\" placeholder=\"Discount precent\" required autofocus ngModel>\n            <!--Spacer-->\n            <hr class=\"spacer\">\n            <!--Spacer-->\n            <label for=\"durationInDays\" class=\"sr-only\">Number of days for discount</label>\n            <input type=\"number\" name=\"durationInDays\" class=\"form-control\" placeholder=\"Duration in days\" required autofocus ngModel>\n            <!--Spacer-->\n            <hr class=\"spacer\">\n            <!--Spacer-->\n            <button class=\"btn btn-lg btn-primary btn-block\" type=\"submit\">Add</button>\n        </form>\n        <div *ngIf=\"actionFailed == true\">\n            <div class=\"form-signin-heading\" style=\"color:red;\">{{messageToUser}}</div>\n        </div>\n    </div> <!-- /container -->\n</body>\n</html>\n","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, Router} from \"@angular/router\";\nimport { MyStore, Item, StoreInventory, AddOpenDiscountBodyRequest } from '../contracts.service';\nimport { HttpRequestService, JsonParsed } from '../http-request.service';\n\n@Component({\n  selector: 'app-add-open-discount',\n  templateUrl: './add-open-discount.component.html',\n  styleUrls: ['./add-open-discount.component.css']\n})\nexport class AddOpenDiscountComponent implements OnInit {\n    storeName: string;\n    storeid: string;\n    store: MyStore;\n    items: Item[];\n    storeInventory: StoreInventory;\n    selectedItemId: string;\n    actionFailed: boolean;\n    messageToUser: string;\n\n    constructor(private httpService: HttpRequestService, private router: ActivatedRoute, private routerAddOpenDiscount: Router) {\n        this.storeName = \"\";\n        this.storeid = \"\";\n        this.selectedItemId = \"\";\n        this.actionFailed = false;\n        this.messageToUser = \"\";\n        this.items = [];\n    }\n\n    async ngOnInit(): Promise<void> {\n        this.storeid = this.router.snapshot.paramMap.get('storeid');\n        let params: Map<string, string> = new Map();\n        params.set(\"storeid\", this.storeid);\n\n        let dataStore: JsonParsed = await this.httpService.getWithParamsAsync('api/store/GetStoreInformationByID', params);\n        if (dataStore.Success) {\n            this.store = JSON.parse(dataStore.AnswerOrExceptionJson);\n            this.storeName = this.store.ContactDetails.Name;\n            this.storeInventory = this.store.storeInventory;\n            for (let key in this.storeInventory.Items) {\n                this.items.push(this.storeInventory.Items[key]);\n            }\n        }\n        else {\n            let response = JSON.parse(dataStore.AnswerOrExceptionJson);\n            if (response) {\n                this.actionFailed = true;\n                this.messageToUser = response.Message;\n            }\n        }\n    }\n\n    onSubmit(addOpenDiscountDetails) {\n        let request: AddOpenDiscountBodyRequest = {\n            StoreID: this.storeid,\n            ItemID: this.selectedItemId,\n            Discount: addOpenDiscountDetails.discountPrecent,\n            DurationInDays: addOpenDiscountDetails.durationInDays\n        }\n\n        this.httpService.post('api/store/AddOpenDiscount', request).subscribe((data: JsonParsed) => {\n            if (data.Success) {\n                window.alert('The discount has been added to the store');\n                this.routerAddOpenDiscount.navigateByUrl('/RefreshComponent', { skipLocationChange: true }).then(() =>\n                    this.routerAddOpenDiscount.navigate(['/home/' + this.storeid + '/storeManagment/discountsManagement', { 'storeName': this.storeName }]));\n            } else {\n                this.actionFailed = true;\n                let response = JSON.parse(data.AnswerOrExceptionJson);\n                if (response) {\n                    this.messageToUser = response.Message;\n                }\n            }\n        });\n    }\n}\n","<!DOCTYPE html>\r\n<html>\r\n<head>\r\n    <meta charset=\"utf-8\">\r\n    <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\">\r\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\r\n    <title>Add conditional discount for store</title>\r\n    <link href=\"https://fonts.googleapis.com/css?family=Roboto:300,400\" rel=\"stylesheet\">\r\n</head>\r\n<body>\r\n    <div class=\"container\">\r\n        <form #addItemConditionalDiscount=\"ngForm\" ngNativeValidate (ngSubmit)=\"onSubmit(addItemConditionalDiscount.value)\" class=\"form-signin\">\r\n            <h2 class=\"form-signin-heading\">Add conditional discount for store: {{ storeName }}</h2>\r\n            <hr class=\"spacer\">\r\n            <label for=\"discount\" class=\"sr-only\">Discount precent</label>\r\n            <input type=\"number\" step=\"0.01\" min=\"0\" max=\"1\" name=\"discount\" class=\"form-control\" placeholder=\"Discount precent\" required autofocus ngModel>\r\n            <hr class=\"spacer\">\r\n            <label for=\"durationInDays\" class=\"sr-only\">Number of days for discount</label>\r\n            <input type=\"number\" name=\"durationInDays\" class=\"form-control\" placeholder=\"Duration in days\" required autofocus ngModel>\r\n            <hr class=\"spacer\">\r\n            <label for=\"minPurchase\" class=\"sr-only\">Minimum of total price for discount</label>\r\n            <input type=\"number\" name=\"minPurchase\" class=\"form-control\" placeholder=\"Minimum of total price\" required autofocus ngModel>\r\n            <hr class=\"spacer\">\r\n            <button class=\"btn btn-lg btn-primary btn-block\" type=\"submit\">Add</button>\r\n        </form>\r\n        <div *ngIf=\"actionFailed == true\">\r\n            <div class=\"form-signin-heading\" style=\"color:red;\">{{messageToUser}}</div>\r\n        </div>\r\n    </div>\r\n</body>\r\n</html>\r\n","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, Router } from \"@angular/router\";\nimport { MyStore, Item, StoreInventory, AddStoreConditionalDiscountBodyRequest } from '../contracts.service';\nimport { HttpRequestService, JsonParsed } from '../http-request.service';\n\n@Component({\n  selector: 'app-add-store-conditional-discount',\n  templateUrl: './add-store-conditional-discount.component.html',\n  styleUrls: ['./add-store-conditional-discount.component.css']\n})\nexport class AddStoreConditionalDiscountComponent implements OnInit {\n    storeName: string;\n    storeid: string;\n    actionFailed: boolean;\n    messageToUser: string;\n\n    constructor(private httpService: HttpRequestService, private router: ActivatedRoute, private routerAddOpenDiscount: Router) {\n        this.storeName = \"\";\n        this.storeid = \"\";\n        this.actionFailed = false;\n        this.messageToUser = \"\";\n    }\n\n    async ngOnInit(): Promise<void> {\n        this.storeid = this.router.snapshot.paramMap.get('storeid');\n        this.storeName = this.router.snapshot.paramMap.get('storeName');\n    }\n\n    onSubmit(costumerData) {\n        let request: AddStoreConditionalDiscountBodyRequest = {\n            StoreID: this.storeid,\n            DurationInDays: costumerData.durationInDays,\n            MinPurchase: costumerData.minPurchase,\n            Discount: costumerData.discount\n        }\n\n        this.httpService.post('api/store/AddStoreConditionalDiscount', request).subscribe((data: JsonParsed) => {\n            if (data.Success) {\n                window.alert('The discount has been added to the store');\n                this.routerAddOpenDiscount.navigateByUrl('/RefreshComponent', { skipLocationChange: true }).then(() =>\n                    this.routerAddOpenDiscount.navigate(['/home/' + this.storeid + '/storeManagment/discountsManagement', { 'storeName': this.storeName }]));\n            } else {\n                this.actionFailed = true;\n                let response = JSON.parse(data.AnswerOrExceptionJson);\n                if (response) {\n                    this.messageToUser = response.Message;\n                }\n            }\n        });\n    }\n}\n","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, Router } from \"@angular/router\";\nimport { HttpRequestService, JsonParsed } from '../http-request.service';\nimport { AppointOrRemoveOwnerOrManagerBodyRequest, MyStore } from '../contracts.service';\n\n@Component({\n  selector: 'app-add-store-manager',\n  templateUrl: './add-store-manager.component.html',\n  styleUrls: ['./add-store-manager.component.css']\n})\nexport class AddStoreManagerComponent implements OnInit {\n    appointStoreManagerFailed: boolean;\n    MessageToUser: string;\n    storeId: string;\n    StoreName: string;\n\n    constructor(\n        private router: ActivatedRoute,\n        private routerAppoint: Router,\n        private httpService: HttpRequestService,\n    ) {\n        this.appointStoreManagerFailed = false;\n        this.MessageToUser = '';\n    }\n\n    ngOnInit(): void {\n        this.storeId = this.router.snapshot.paramMap.get('storeid');\n        this.StoreName = this.router.snapshot.paramMap.get('storeName');\n    }\n\n    onSubmit(customerData) {\n        let appointOwnerRequest: AppointOrRemoveOwnerOrManagerBodyRequest =\n        {\n            StoreId: this.storeId,\n            Username: customerData.username\n        }\n\n        this.httpService.post('api/store/AppointManager', appointOwnerRequest).subscribe((data: JsonParsed) => {\n            if (data.Success) {\n                this.routerAppoint.navigateByUrl('/home/' + this.storeId);\n            } else {\n                this.appointStoreManagerFailed = true;\n                let response = JSON.parse(data.AnswerOrExceptionJson);\n                if (response) {\n                    this.MessageToUser = response.Message;\n                }\n            }\n        });\n    }\n}\n","<!DOCTYPE html>\r\n<html>\r\n<head>\r\n    <meta charset=\"utf-8\">\r\n    <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\">\r\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\r\n    <title>Custom Bootstrap Login Page</title>\r\n    <link href=\"https://fonts.googleapis.com/css?family=Roboto:300,400\" rel=\"stylesheet\">\r\n</head>\r\n<body>\r\n    <div class=\"container\">\r\n        <form #appointManagerForm=\"ngForm\" (ngSubmit)=\"onSubmit(appointManagerForm.value)\" class=\"form-signin\">\r\n            <h2 class=\"form-signin-heading\">Appoint Additional Store Manager To Store: {{ StoreName }}</h2>\r\n            <!--Spacer-->\r\n            <hr class=\"spacer\">\r\n            <!--Spacer-->\r\n            <label for=\"username\" class=\"sr-only\">UserName</label>\r\n            <input type=\"text\" name=\"username\" class=\"form-control\" placeholder=\"UserName\" required autofocus ngModel>\r\n            <button class=\"btn btn-lg btn-primary btn-block\" type=\"submit\">Appoint Store Manager</button>\r\n        </form>\r\n        <div *ngIf=\"appointStoreManagerFailed == true\">\r\n            <div class=\"form-signin-heading\" style=\"color:red;\">{{MessageToUser}}</div>\r\n        </div>\r\n    </div> <!-- /container -->\r\n</body>\r\n</html>\r\n","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, Router } from \"@angular/router\";\nimport { AddStoreMinMaxPurchasePolicyBodyRequest } from '../contracts.service';\nimport { HttpRequestService, JsonParsed } from '../http-request.service';\n\n@Component({\n  selector: 'app-add-store-min-max-purchase-policy',\n  templateUrl: './add-store-min-max-purchase-policy.component.html',\n  styleUrls: ['./add-store-min-max-purchase-policy.component.css']\n})\nexport class AddStoreMinMaxPurchasePolicyComponent implements OnInit {\n    storeName: string;\n    storeid: string;\n    actionFailed: boolean;\n    messageToUser: string;\n\n    constructor(private httpService: HttpRequestService, private router: ActivatedRoute, private routerAddStoreMinMaxPolicy: Router) {\n        this.storeName = \"\";\n        this.storeid = \"\";\n        this.actionFailed = false;\n        this.messageToUser = \"\";\n    }\n\n    ngOnInit(): void {\n        this.storeid = this.router.snapshot.paramMap.get('storeid');\n        this.storeName = this.router.snapshot.paramMap.get('storeName');\n  }\n\n    onSubmit(addStoreMinMaxPolicyDetails) {\n        let request: AddStoreMinMaxPurchasePolicyBodyRequest = {\n            StoreID: this.storeid,\n            MinAmount: addStoreMinMaxPolicyDetails.minAmount != \"\" ? addStoreMinMaxPolicyDetails.minAmount : undefined,\n            MaxAmount: addStoreMinMaxPolicyDetails.maxAmount != \"\" ? addStoreMinMaxPolicyDetails.maxAmount : undefined\n        };\n\n        this.httpService.post('api/store/AddStoreMinMaxPurchasePolicy', request).subscribe((data: JsonParsed) => {\n            if (data.Success) {\n                window.alert('The purchase policy has been added to the store');\n                this.routerAddStoreMinMaxPolicy.navigateByUrl('/RefreshComponent', { skipLocationChange: true }).then(() =>\n                    this.routerAddStoreMinMaxPolicy.navigate(['/home/' + this.storeid + '/storeManagment/purchasesManagment', { 'storeName': this.storeName }]));\n            } else {\n                this.actionFailed = true;\n                let response = JSON.parse(data.AnswerOrExceptionJson);\n                if (response) {\n                    this.messageToUser = response.Message;\n                }\n            }\n        });\n    }\n}\n","<!DOCTYPE html>\n<html>\n<head>\n    <meta charset=\"utf-8\">\n    <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\">\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\n    <title>Add Store Min Max Purchase Policy</title>\n    <link href=\"https://fonts.googleapis.com/css?family=Roboto:300,400\" rel=\"stylesheet\">\n</head>\n<body>\n    <div class=\"container\">\n        <form #addStoreMinMaxPolicy=\"ngForm\" ngNativeValidate (ngSubmit)=\"onSubmit(addStoreMinMaxPolicy.value)\" class=\"form-signin\">\n            <h2 class=\"form-signin-heading\">Add store min max policy in store: {{ storeName }}</h2>\n            <!--Spacer-->\n            <hr class=\"spacer\">\n            <!--Spacer-->\n            <label for=\"minAmount\" class=\"sr-only\">Minimum amount</label>\n            <input type=\"number\" name=\"minAmount\" class=\"form-control\" placeholder=\"Minimum amount\" autofocus ngModel>\n            <!--Spacer-->\n            <hr class=\"spacer\">\n            <!--Spacer-->\n            <label for=\"maxAmount\" class=\"sr-only\">Maximum amount</label>\n            <input type=\"number\" name=\"maxAmount\" class=\"form-control\" placeholder=\"Maximum amount\" autofocus ngModel>\n            <!--Spacer-->\n            <hr class=\"spacer\">\n            <!--Spacer-->\n            <button class=\"btn btn-lg btn-primary btn-block\" type=\"submit\">Add</button>\n        </form>\n        <div *ngIf=\"actionFailed == true\">\n            <div class=\"form-signin-heading\" style=\"color:red;\">{{messageToUser}}</div>\n        </div>\n    </div> <!-- /container -->\n</body>\n</html>\n","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, Router } from \"@angular/router\";\nimport { HttpRequestService, JsonParsed } from '../http-request.service';\nimport { AppointOrRemoveOwnerOrManagerBodyRequest, MyStore } from '../contracts.service';\n\n@Component({\n  selector: 'app-add-store-owner',\n  templateUrl: './add-store-owner.component.html',\n  styleUrls: ['./add-store-owner.component.css']\n})\nexport class AddStoreOwnerComponent implements OnInit {\n    appointStoreOwnerFailed: boolean;\n    MessageToUser: string;\n    storeId: string;\n    StoreName: string;\n\n    constructor(\n        private router: ActivatedRoute,\n        private routerAppoint: Router,\n        private httpService: HttpRequestService,\n    ) {\n        this.appointStoreOwnerFailed = false;\n        this.MessageToUser = '';\n    }\n\n    ngOnInit(): void {\n        this.storeId = this.router.snapshot.paramMap.get('storeid');\n        this.StoreName = this.router.snapshot.paramMap.get('storeName');\n  }\n\n    onSubmit(customerData) {\n        let appointOwnerRequest: AppointOrRemoveOwnerOrManagerBodyRequest =\n        {\n            StoreId: this.storeId,\n            Username: customerData.username\n        }\n\n        this.httpService.post('api/store/AppointOwner', appointOwnerRequest).subscribe((data: JsonParsed) => {\n            if (data.Success) {\n                this.routerAppoint.navigateByUrl('/home/' + this.storeId);\n            } else {\n                this.appointStoreOwnerFailed = true;\n                let response = JSON.parse(data.AnswerOrExceptionJson);\n                if (response) {\n                    this.MessageToUser = response.Message;\n                }\n            }\n        });\n    }\n\n}\n","<!DOCTYPE html>\r\n<html>\r\n<head>\r\n    <meta charset=\"utf-8\">\r\n    <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\">\r\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\r\n    <title>Custom Bootstrap Login Page</title>\r\n    <link href=\"https://fonts.googleapis.com/css?family=Roboto:300,400\" rel=\"stylesheet\">\r\n</head>\r\n<body>\r\n    <div class=\"container\">\r\n        <form #appointOwnerForm=\"ngForm\" (ngSubmit)=\"onSubmit(appointOwnerForm.value)\" class=\"form-signin\">\r\n            <h2 class=\"form-signin-heading\">Appoint Additional Store Owner To Store: {{ StoreName }}</h2>\r\n            <!--Spacer-->\r\n            <hr class=\"spacer\">\r\n            <!--Spacer-->\r\n            <label for=\"username\" class=\"sr-only\">UserName</label>\r\n            <input type=\"text\" name=\"username\" class=\"form-control\" placeholder=\"UserName\" required autofocus ngModel>\r\n            <button class=\"btn btn-lg btn-primary btn-block\" type=\"submit\">Appoint Store Owner</button>\r\n        </form>\r\n        <div *ngIf=\"appointStoreOwnerFailed == true\">\r\n            <div class=\"form-signin-heading\" style=\"color:red;\">{{MessageToUser}}</div>\r\n        </div>\r\n    </div> <!-- /container -->\r\n</body>\r\n</html>\r\n","import { Component, OnInit, ChangeDetectorRef, Input, ViewChild, ElementRef,CUSTOM_ELEMENTS_SCHEMA  } from '@angular/core';\r\nimport { Router } from \"@angular/router\";\r\nimport { ExtendedSearchDetails } from './contracts.service';\r\nimport { HttpRequestService, JsonParsed } from './http-request.service';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.css'],\r\n  //schemas: [ CUSTOM_ELEMENTS_SCHEMA ]\r\n})\r\n\r\nexport class AppComponent implements OnInit {\r\n    @Input()\r\n    User: string;\r\n    isAdmin: boolean;\r\n\r\n    @ViewChild('SearchItemName') SearchItemName: ElementRef;\r\n\r\n    constructor(private router: Router, private _cdr: ChangeDetectorRef, private httpService: HttpRequestService,) {\r\n        this.isAdmin = false;\r\n\r\n    }\r\n\r\n    ngOnInit(): void {\r\n        this.User = localStorage.getItem('currentUser');\r\n        this.httpService.get('api/user/IsAdmin').subscribe((data: JsonParsed) => {\r\n            if (data.Success) {\r\n                this.isAdmin = true;\r\n            }\r\n        });\r\n    }\r\n\r\n    changeStatus(): void {\r\n        setTimeout(() => {\r\n            this.User = undefined;\r\n            this._cdr.detectChanges()\r\n        }, 1000);\r\n    }\r\n\r\n    triggerSearchItems(searchItemName: string) {\r\n        let details: ExtendedSearchDetails = {\r\n            itemName: searchItemName\r\n        };\r\n        this.router.navigate(['/searchResults', details]);\r\n        this.SearchItemName.nativeElement.value = '';\r\n    }\r\n\r\n    triggerExtendedSearchItems() {\r\n        this.router.navigateByUrl('/extendedSearch');\r\n        this.SearchItemName.nativeElement.value = '';\r\n    }\r\n}\r\n","<mat-toolbar color=\"primary\">\r\n    <mat-toolbar-row>\r\n        <button mat-icon-button>\r\n            <mat-icon (click)=\"sidenav.toggle()\">menu</mat-icon>\r\n        </button>\r\n        <a [routerLink]=\"['/']\"><h1>Stores Web</h1></a>\r\n        <span class=\"menu-spacer\"></span>\r\n        <div *ngIf=\"this.User; else loggedOut\">\r\n            <span class=\"menu-spacer\"></span>\r\n            <a mat-button [routerLink]=\"'/logout'\"> Logout </a>\r\n            <a mat-button [routerLink]=\"'/getMessages'\"> Messages </a>\r\n            <h2> Hello {{this.User}}! </h2>\r\n        </div>\r\n        <ng-template #loggedOut>\r\n            <span class=\"menu-spacer\"></span>\r\n            <a mat-button [routerLink]=\"'/login'\"> Login </a>\r\n            <a mat-button [routerLink]=\"'/register'\"> Register </a>\r\n            <h2> Hello Guest!     </h2>\r\n        </ng-template>\r\n        <span class=\"menu-spacer\"></span>\r\n        <input type=\"text\" #SearchItemName id=\"SearchItemName\">\r\n        <hr class=\"spacer\">\r\n        <button (click)=\"triggerSearchItems(SearchItemName.value)\" formtarget=\"_blank\">Search</button>\r\n        <hr class=\"spacer\">\r\n        <button (click)=\"triggerExtendedSearchItems()\" formtarget=\"_blank\">Extended Search</button>\r\n        <hr class=\"spacer\">\r\n\r\n\r\n\r\n    </mat-toolbar-row>\r\n</mat-toolbar>\r\n<mat-sidenav-container>\r\n    <mat-sidenav #sidenav>\r\n        <mat-nav-list>\r\n            <div *ngIf=\"this.User\">\r\n                <a mat-list-item (click)=\"sidenav.toggle()\" [routerLink]=\"'/openStore'\">Open Store </a>\r\n                <a mat-list-item (click)=\"sidenav.toggle()\" [routerLink]=\"'/UserHistory'\">My History </a>\r\n            </div>\r\n            <div *ngIf=\"isAdmin == true\">\r\n                <a mat-list-item (click)=\"sidenav.toggle()\" [routerLink]=\"'/usersHistoryAdmin'\">Users History </a>\r\n                <a mat-list-item (click)=\"sidenav.toggle()\" [routerLink]=\"'/showStatistics'\">Show Statistics </a>\r\n            </div>\r\n            <a mat-list-item (click)=\"sidenav.toggle()\" [routerLink]=\"'/viewCart'\">View Cart </a>\r\n            <a mat-list-item (click)=\"sidenav.toggle()\" href=\"\" mat-list-item>Close</a>\r\n        </mat-nav-list>\r\n    </mat-sidenav>\r\n    <mat-sidenav-content>\r\n        <div style=\"height: 88vh;\">\r\n            <router-outlet></router-outlet>\r\n        </div>\r\n    </mat-sidenav-content>\r\n</mat-sidenav-container>\r\n\r\n","import { BrowserModule } from '@angular/platform-browser';\r\nimport { NgModule } from '@angular/core';\r\nimport { RouterModule } from '@angular/router';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { HttpClientModule } from '@angular/common/http';\r\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\r\nimport { Observable } from 'rxjs';\r\nimport { MatToolbarModule } from '@angular/material/toolbar';\r\nimport { MatIconModule } from '@angular/material/icon';\r\nimport { MatSidenavModule } from '@angular/material/sidenav';\r\nimport { MatListModule } from '@angular/material/list';\r\nimport { GoogleChartsModule } from 'angular-google-charts';\r\nimport {MatNativeDateModule} from '@angular/material/core';\r\nimport { MatButtonModule } from '@angular/material/button';\r\nimport { MatSelectModule } from '@angular/material/select';\r\nimport { MatFormFieldModule } from '@angular/material/form-field';\r\nimport { MatInputModule } from '@angular/material/input';\r\nimport { MatDatepickerModule } from '@angular/material/datepicker';\r\n// import { NgbModule } from '@ng-bootstrap/ng-bootstrap'; //rate item\r\nimport { AppComponent } from './app.component';\r\nimport { LoginComponent } from './login/login.component';\r\nimport { RegisterComponent } from './register/register.component';\r\nimport { StoresListComponent } from './stores-list/stores-list.component';\r\nimport { StoresDetailsComponent } from './stores-details/stores-details.component';\r\nimport { LogoutComponent } from './logout/logout.component';\r\nimport { OpenStoreComponent } from './open-store/open-store.component';\r\nimport { AddItemComponent } from './add-item/add-item.component';\r\nimport { ViewCartComponent } from './view-cart/view-cart.component';\r\nimport { CheckoutComponent } from './checkout/checkout.component';\r\nimport { DisplayOrderComponent } from './display-order/display-order.component';\r\nimport { StoreHistoryComponent } from './store-history/store-history.component';\r\nimport { ItemPageComponent } from './item-page/item-page.component';\r\nimport { EditItemComponent } from './edit-item/edit-item.component';\r\nimport { SearchResultsComponent } from './search-results/search-results.component';\r\nimport { ExtendedSearchComponent } from './extended-search/extended-search.component';\r\nimport { StoreManagmentComponent } from './store-managment/store-managment.component';\r\nimport { AddStoreOwnerComponent } from './add-store-owner/add-store-owner.component';\r\nimport { AddStoreManagerComponent } from './add-store-manager/add-store-manager.component';\r\nimport { RemoveStoreManagerComponent } from './remove-store-manager/remove-store-manager.component';\r\nimport { DiscountsManagementComponent } from './discounts-management/discounts-management.component';\r\nimport { DiscountTypesEditPageComponent } from './discount-types-edit-page/discount-types-edit-page.component';\r\nimport { DiscountsEditPageComponent } from './discounts-edit-page/discounts-edit-page.component';\r\nimport { EditItemAmountInCartComponent } from './edit-item-amount-in-cart/edit-item-amount-in-cart.component';\r\nimport { AddOpenDiscountComponent } from './add-open-discount/add-open-discount.component';\r\nimport { RefreshComponentComponent } from './refresh-component/refresh-component.component';\r\nimport { ManagePermissionsComponent } from './manage-permissions/manage-permissions.component';\r\nimport { RemoveStoreOwnerComponent } from './remove-store-owner/remove-store-owner.component';\r\nimport { AddItemConditionalDiscountMinItemsToDiscountOnAllComponent } from './add-item-conditional-discount-min-items-to-discount-on-all/add-item-conditional-discount-min-items-to-discount-on-all.component';\r\nimport { AddItemConditionalDiscountMinItemsToDiscountOnExtraItemsComponent } from './add-item-conditional-discount-min-items-to-discount-on-extra-items/add-item-conditional-discount-min-items-to-discount-on-extra-items.component';\r\nimport { AddStoreConditionalDiscountComponent } from './add-store-conditional-discount/add-store-conditional-discount.component';\r\nimport { UsersHistoryAdminComponent } from './users-history-admin/users-history-admin.component';\r\nimport { StoreHistoryAdminComponent } from './store-history-admin/store-history-admin.component';\r\nimport { UserHistoryComponent } from './user-history/user-history.component';\r\nimport { GetMessagesComponent } from './get-messages/get-messages.component';\r\nimport { ApproveStoreOwnerComponent } from './approve-store-owner/approve-store-owner.component';\nimport { ManagePurchasesComponent } from './manage-purchases/manage-purchases.component';\nimport { ManageTypesOfPurchasePolicyComponent } from './manage-types-of-purchase-policy/manage-types-of-purchase-policy.component';\nimport { ManagePurchasePoliciesComponent } from './manage-purchase-policies/manage-purchase-policies.component';\nimport { AddItemMinMaxPurchasePolicyComponent } from './add-item-min-max-purchase-policy/add-item-min-max-purchase-policy.component';\nimport { AddStoreMinMaxPurchasePolicyComponent } from './add-store-min-max-purchase-policy/add-store-min-max-purchase-policy.component';\nimport { AddDaysNotAllowedPurchasePolicyComponent } from './add-days-not-allowed-purchase-policy/add-days-not-allowed-purchase-policy.component';\nimport { ShowStatisticsComponent } from './show-statistics/show-statistics.component';\n\r\n@NgModule({\r\n  imports: [\r\n        BrowserModule,\r\n        FormsModule,\r\n        // NgbModule,\r\n        ReactiveFormsModule,\r\n        HttpClientModule,\r\n        GoogleChartsModule,\r\n        BrowserAnimationsModule,\r\n        MatToolbarModule,\r\n        MatSidenavModule,\r\n        MatListModule,\r\n        MatButtonModule,\r\n        MatIconModule,\r\n        MatSelectModule,\r\n        MatNativeDateModule,\r\n        MatFormFieldModule,\r\n        MatInputModule,\r\n        MatDatepickerModule,\r\n        RouterModule.forRoot([\r\n            { path: '', redirectTo: '/home', pathMatch: 'full' },\r\n            { path: 'home', component: StoresListComponent },\r\n            { path: 'login', component: LoginComponent },\r\n            { path: 'register', component: RegisterComponent },\r\n            { path: 'logout', component: LogoutComponent },\r\n            { path: 'getMessages', component: GetMessagesComponent },\r\n            { path: 'openStore', component: OpenStoreComponent },\r\n            { path: 'usersHistoryAdmin', component: UsersHistoryAdminComponent },\r\n            { path: 'home/:id', component: StoresDetailsComponent },\r\n            { path: 'home/:storeid/storeManagment', component: StoreManagmentComponent },\r\n            { path: 'home/:storeid/:itemid', component: ItemPageComponent },\r\n            { path: 'viewCart', component: ViewCartComponent },\r\n            { path: 'showStatistics', component: ShowStatisticsComponent },\r\n            { path: 'viewCart/:itemId/EditItemAmountInCart', component: EditItemAmountInCartComponent},\r\n            { path: 'checkout', component: CheckoutComponent },\r\n            { path: 'displayOrder', component: DisplayOrderComponent },\r\n            { path: 'home/:storeid/:itemid/editItem', component: EditItemComponent },\r\n\t\t\t{ path: 'searchResults', component: SearchResultsComponent },\r\n            { path: 'extendedSearch', component: ExtendedSearchComponent },\r\n            { path: 'UserHistory', component: UserHistoryComponent },\r\n            { path: 'home/:storeid/storeManagment/addItem', component: AddItemComponent },\r\n            { path: 'home/:storeid/storeManagment/storeHistory', component: StoreHistoryComponent },\r\n            { path: 'home/:storeid/storeManagment/storeHistoryAdmin', component: StoreHistoryAdminComponent },\r\n            { path: 'home/:storeid/storeManagment/addStoreOwner', component: AddStoreOwnerComponent },\r\n            { path: 'home/:storeid/storeManagment/approveStoreOwner', component: ApproveStoreOwnerComponent },\r\n            { path: 'home/:storeid/storeManagment/addStoreManager', component: AddStoreManagerComponent },\r\n            { path: 'home/:storeid/storeManagment/removeStoreManager', component: RemoveStoreManagerComponent },\r\n            { path: 'home/:storeid/storeManagment/managePermissions', component: ManagePermissionsComponent },\r\n\t\t\t{ path: 'home/:storeid/storeManagment/removeStoreOwner', component: RemoveStoreOwnerComponent },\r\n            { path: 'home/:storeid/storeManagment/discountsManagement', component: DiscountsManagementComponent },\r\n            { path: 'home/:storeid/storeManagment/discountTypesEditPage', component: DiscountTypesEditPageComponent },\r\n            { path: 'home/:storeid/storeManagment/discountsEditPage', component: DiscountsEditPageComponent },\r\n            { path: 'home/:storeid/storeManagment/AddOpenDiscount', component: AddOpenDiscountComponent },\r\n            { path: 'RefreshComponent', component: RefreshComponentComponent },\r\n            { path: 'home/:storeid/storeManagment/AddItemConditionalDiscount_MinItems_ToDiscountOnAll', component: AddItemConditionalDiscountMinItemsToDiscountOnAllComponent },\r\n            { path: 'home/:storeid/storeManagment/AddItemConditionalDiscount_MinItems_ToDiscountOnExtraItems', component: AddItemConditionalDiscountMinItemsToDiscountOnExtraItemsComponent },\r\n            { path: 'home/:storeid/storeManagment/AddStoreConditionalDiscount', component: AddStoreConditionalDiscountComponent },\r\n            { path: 'home/:storeid/storeManagment/purchasesManagment', component: ManagePurchasesComponent },\r\n            { path: 'home/:storeid/storeManagment/typesOfPurchasePolicy', component: ManageTypesOfPurchasePolicyComponent },\r\n            { path: 'home/:storeid/storeManagment/purchasePolicies', component: ManagePurchasePoliciesComponent },\r\n            { path: 'home/:storeid/storeManagment/AddItemMinMaxPurchasePolicy', component: AddItemMinMaxPurchasePolicyComponent },\r\n            { path: 'home/:storeid/storeManagment/AddStoreMinMaxPurchasePolicy', component: AddStoreMinMaxPurchasePolicyComponent },\r\n            { path: 'home/:storeid/storeManagment/AddDaysNotAllowedPurchasePolicy', component: AddDaysNotAllowedPurchasePolicyComponent },\r\n        ])\r\n    ],\r\n    declarations: [\r\n        AppComponent,\r\n        LoginComponent,\r\n        RegisterComponent,\r\n        StoresListComponent,\r\n        StoresDetailsComponent,\r\n        LogoutComponent,\r\n        OpenStoreComponent,\r\n        AddItemComponent,\r\n        ViewCartComponent,\r\n        CheckoutComponent,\r\n        DisplayOrderComponent,\r\n        StoreHistoryComponent,\r\n        ItemPageComponent,\r\n        EditItemComponent,\r\n\t\tSearchResultsComponent,\r\n        ExtendedSearchComponent,\r\n        DiscountsManagementComponent,\r\n        DiscountTypesEditPageComponent,\r\n        DiscountsEditPageComponent,\r\n        AddOpenDiscountComponent,\r\n        StoreManagmentComponent,\r\n        AddStoreOwnerComponent,\r\n        AddStoreManagerComponent,\r\n        RemoveStoreManagerComponent,\r\n        ManagePermissionsComponent,\r\n        RefreshComponentComponent,\r\n        RemoveStoreOwnerComponent,\r\n        AddItemConditionalDiscountMinItemsToDiscountOnAllComponent,\r\n        AddItemConditionalDiscountMinItemsToDiscountOnExtraItemsComponent,\r\n        AddStoreConditionalDiscountComponent,\r\n        UsersHistoryAdminComponent,\r\n        StoreHistoryAdminComponent,\r\n        UserHistoryComponent,\r\n        GetMessagesComponent,\r\n        EditItemAmountInCartComponent,\r\n        ApproveStoreOwnerComponent,\r\n        ManagePurchasesComponent,\r\n        ManageTypesOfPurchasePolicyComponent,\r\n        ManagePurchasePoliciesComponent,\r\n        AddItemMinMaxPurchasePolicyComponent,\r\n        AddStoreMinMaxPurchasePolicyComponent,\r\n        AddDaysNotAllowedPurchasePolicyComponent,\r\n        ShowStatisticsComponent,\r\n    ],\r\n    providers: [],\r\n    bootstrap: [AppComponent]\r\n  })\r\n\r\nexport class AppModule { }\r\n\r\n\r\n//@Injectable()\r\n//export class ConnectInterceptor implements HttpInterceptor {// from https://stackoverflow.com/a/53512758/9553459\r\n//    intercept(req: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\r\n//        const authReq = req.clone({\r\n//            //headers: req.headers.set(\"Authorization\", \"custom-token\"),\r\n\r\n//            withCredentials: true // Importand for consistent session id in ASP.NET\r\n//        });\r\n//        return next.handle(authReq);\r\n//    }\r\n//}\r\n","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, Router } from \"@angular/router\";\nimport { HttpRequestService, JsonParsed } from '../http-request.service';\nimport { AppointOrRemoveOwnerOrManagerBodyRequest, MyStore } from '../contracts.service';\n\n@Component({\n  selector: 'app-approve-store-owner',\n  templateUrl: './approve-store-owner.component.html',\n  styleUrls: ['./approve-store-owner.component.css']\n})\nexport class ApproveStoreOwnerComponent implements OnInit {\n    approveStoreOwnerFailed: boolean;\n    MessageToUser: string;\n    storeId: string;\n    StoreName: string;\n\n    constructor(\n        private router: ActivatedRoute,\n        private routerAppoint: Router,\n        private httpService: HttpRequestService,\n    ) {\n        this.approveStoreOwnerFailed = false;\n        this.MessageToUser = '';\n    }\n\n    ngOnInit(): void {\n        this.storeId = this.router.snapshot.paramMap.get('storeid');\n        this.StoreName = this.router.snapshot.paramMap.get('storeName');\n    }\n\n    onSubmit(customerData) {\n        let appointOwnerRequest: AppointOrRemoveOwnerOrManagerBodyRequest =\n        {\n            StoreId: this.storeId,\n            Username: customerData.username\n        }\n\n        this.httpService.post('api/store/ApproveOwnerContract', appointOwnerRequest).subscribe((data: JsonParsed) => {\n            if (data.Success) {\n                this.routerAppoint.navigateByUrl('/home/' + this.storeId);\n            } else {\n                this.approveStoreOwnerFailed = true;\n                let response = JSON.parse(data.AnswerOrExceptionJson);\n                if (response) {\n                    this.MessageToUser = response.Message;\n                }\n            }\n        });\n    }\n\n}\n","<!DOCTYPE html>\r\n<html>\r\n<head>\r\n    <meta charset=\"utf-8\">\r\n    <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\">\r\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\r\n    <title>Custom Bootstrap</title>\r\n    <link href=\"https://fonts.googleapis.com/css?family=Roboto:300,400\" rel=\"stylesheet\">\r\n</head>\r\n<body>\r\n    <div class=\"container\">\r\n        <form #approveOwnerForm=\"ngForm\" (ngSubmit)=\"onSubmit(approveOwnerForm.value)\" class=\"form-signin\">\r\n            <h2 class=\"form-signin-heading\">Apporove Additional Store Owner To Store: {{ StoreName }}</h2>\r\n            <hr class=\"spacer\">\r\n            <label for=\"username\" class=\"sr-only\">UserName</label>\r\n            <input type=\"text\" name=\"username\" class=\"form-control\" placeholder=\"UserName\" required autofocus ngModel>\r\n            <button class=\"btn btn-lg btn-primary btn-block\" type=\"submit\">Approve Store Owner</button>\r\n        </form>\r\n        <div *ngIf=\"approveStoreOwnerFailed == true\">\r\n            <div class=\"form-signin-heading\" style=\"color:red;\">{{MessageToUser}}</div>\r\n        </div>\r\n    </div>\r\n</body>\r\n</html>\r\n","<!DOCTYPE html>\r\n<html>\r\n<head>\r\n    <meta charset=\"utf-8\">\r\n    <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\">\r\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\r\n    <title>Custom Bootstrap</title>\r\n    <link href=\"https://fonts.googleapis.com/css?family=Roboto:300,400\" rel=\"stylesheet\">\r\n</head>\r\n<body>\r\n    <div class=\"container\">\r\n        <form #checkoutForm=\"ngForm\" (ngSubmit)=\"onSubmit(checkoutForm.value)\" class=\"form-signin\">\r\n            <h2 class=\"form-signin-heading\">Checkout</h2>\r\n            <label for=\"payingCustomerName\" class=\"sr-only\">Paying Customer Name</label>\r\n            <input type=\"text\" name=\"payingCustomerName\" class=\"form-control\" placeholder=\"Paying Customer Name\" required autofocus ngModel>\r\n            <!--Spacer-->\r\n            <hr class=\"spacer\">\r\n            <!--Spacer-->\r\n            <label for=\"card\" class=\"sr-only\">Credit Card Number</label>\r\n            <input type=\"text\" name=\"card\" class=\"form-control\" placeholder=\"Credit Card Number\" required autofocus ngModel>\r\n            <!--Spacer-->\r\n            <hr class=\"spacer\">\r\n            <!--Spacer-->\r\n            <mat-form-field>\r\n                <mat-label>Expire Date</mat-label>\r\n                <input matInput [matDatepicker]=\"dp\" [formControl]=\"date\">\r\n                <mat-datepicker-toggle matSuffix [for]=\"dp\"></mat-datepicker-toggle>\r\n                <mat-datepicker #dp\r\n                                startView=\"multi-year\"\r\n                                (yearSelected)=\"chosenYearHandler($event)\"\r\n                                (monthSelected)=\"chosenMonthHandler($event, dp)\"\r\n                                panelClass=\"example-month-picker\">\r\n                </mat-datepicker>\r\n            </mat-form-field>\r\n            <!--Spacer-->\r\n            <hr class=\"spacer\">\r\n            <!--Spacer-->\r\n            <label for=\"ccv\" class=\"sr-only\">CCV</label>\r\n            <input type=\"text\" name=\"ccv\" class=\"form-control\" placeholder=\"CCV\" required autofocus ngModel>\r\n            <!--Spacer-->\r\n            <hr class=\"spacer\">\r\n            <!--Spacer-->\r\n            <label for=\"id\" class=\"sr-only\">Paying Customer ID</label>\r\n            <input type=\"text\" name=\"id\" class=\"form-control\" placeholder=\"Paying Customer ID\" required autofocus ngModel>\r\n            <!--Spacer-->\r\n            <hr class=\"spacer\">\r\n            <!--Spacer-->\r\n            <label for=\"address\" class=\"sr-only\">Address</label>\r\n            <input type=\"text\" name=\"address\" class=\"form-control\" placeholder=\"Address\" required autofocus ngModel>\r\n            <!--Spacer-->\r\n            <hr class=\"spacer\">\r\n            <!--Spacer-->\r\n            <label for=\"city\" class=\"sr-only\">City</label>\r\n            <input type=\"text\" name=\"city\" class=\"form-control\" placeholder=\"City\" required autofocus ngModel>\r\n            <!--Spacer-->\r\n            <hr class=\"spacer\">\r\n            <!--Spacer-->\r\n            <label for=\"country\" class=\"sr-only\">Country</label>\r\n            <input type=\"text\" name=\"country\" class=\"form-control\" placeholder=\"Country\" required autofocus ngModel>\r\n            <!--Spacer-->\r\n            <hr class=\"spacer\">\r\n            <!--Spacer-->\r\n            <label for=\"zipcode\" class=\"sr-only\">Zip Code</label>\r\n            <input type=\"text\" name=\"zipcode\" class=\"form-control\" placeholder=\"Zip Code\" required autofocus ngModel>\r\n            <button class=\"btn btn-lg btn-primary btn-block\" type=\"submit\">Purchase</button>\r\n        </form>\r\n        <div *ngIf=\"checkoutFailed == true\">\r\n            <div class=\"form-signin-heading\" style=\"color:red;\">{{MessageToUser}}</div>\r\n        </div>\r\n    </div> \r\n</body>\r\n</html>\r\n","import { Component, OnInit } from '@angular/core';\nimport { Router, ActivatedRoute } from \"@angular/router\";\nimport { HttpRequestService, JsonParsed } from '../http-request.service';\nimport { Order, CheckoutBodyRequest } from '../contracts.service';\n\nimport { FormControl } from '@angular/forms';\nimport { MomentDateAdapter, MAT_MOMENT_DATE_ADAPTER_OPTIONS } from '@angular/material-moment-adapter';\nimport { DateAdapter, MAT_DATE_FORMATS, MAT_DATE_LOCALE } from '@angular/material/core';\nimport { MatDatepicker } from '@angular/material/datepicker';\nimport * as _moment from 'moment';\nimport { default as _rollupMoment, Moment } from 'moment';\n\nconst moment = _rollupMoment || _moment;\n\nexport const MY_FORMATS = {\n    parse: {\n        dateInput: 'MM/YYYY',\n    },\n    display: {\n        dateInput: 'MM/YYYY',\n        monthYearLabel: 'MMM YYYY',\n        dateA11yLabel: 'LL',\n        monthYearA11yLabel: 'MMMM YYYY',\n    },\n};\n\n\n@Component({\n  selector: 'app-checkout',\n  templateUrl: './checkout.component.html',\n    styleUrls: ['./checkout.component.css'],\n    providers: [\n        {\n            provide: DateAdapter,\n            useClass: MomentDateAdapter,\n            deps: [MAT_DATE_LOCALE, MAT_MOMENT_DATE_ADAPTER_OPTIONS]\n        },\n\n        { provide: MAT_DATE_FORMATS, useValue: MY_FORMATS },\n    ],\n})\n\nexport class CheckoutComponent implements OnInit {\n    checkoutFailed: boolean;\n    MessageToUser: string;\n    orderId: string;\n    date = new FormControl(moment());\n    \n    constructor(\n        private router: Router,\n        private httpService: HttpRequestService,\n        private routerCheckout: ActivatedRoute)\n    {\n        this.checkoutFailed = false;\n        this.MessageToUser = '';\n        this.orderId = 'emptyId';\n    }\n\n  ngOnInit(): void {\n  }\n\n    async onSubmit(customerData) {\n        this.orderId = this.routerCheckout.snapshot.paramMap.get('orderId');\n        let ExpireYear = this.date.value.year();\n        let ExpireMonth = this.date.value.month() + 1;\n        let checkoutRequest: CheckoutBodyRequest =\n        {\n            OrderID: this.orderId,\n            PayingCustomerName: customerData.payingCustomerName,\n            Card: customerData.card,\n            Expire: ExpireMonth + '/' + ExpireYear,\n            CCV: customerData.ccv,\n            ID: customerData.id,\n            Address: customerData.address,\n            City: customerData.city,\n            Country: customerData.country,\n            ZipCode: customerData.zipcode\n        }\n\n        let checkoutResponse = await this.httpService.postAsync('api/purchase/CheckOut', checkoutRequest);\n        if (checkoutResponse.Success) {\n            window.alert('purchase was successful!');\n            this.router.navigateByUrl('/home');\n        } else {\n            this.checkoutFailed = true;\n            let response = JSON.parse(checkoutResponse.AnswerOrExceptionJson);\n            if (response) {\n                this.MessageToUser = response.Message;\n            }\n        }\n    }\n\n    chosenYearHandler(normalizedYear: Moment) {\n        const ctrlValue = this.date.value;\n        ctrlValue.year(normalizedYear.year());\n        this.date.setValue(ctrlValue);\n    }\n\n    chosenMonthHandler(normalizedMonth: Moment, datepicker: MatDatepicker<Moment>) {\n        const ctrlValue = this.date.value;\n        ctrlValue.month(normalizedMonth.month());\n        this.date.setValue(ctrlValue);\n        datepicker.close();\n    }\n\n}\n","<!DOCTYPE html>\n<html>\n<head>\n    <meta charset=\"utf-8\">\n    <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\">\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\n    <title>Discount types managment</title>\n    <link href=\"https://fonts.googleapis.com/css?family=Roboto:300,400\" rel=\"stylesheet\">\n</head>\n<body>\n    <h2>Discount types available in {{storeName}}</h2>\n    <div *ngFor=\"let discountTypeAllowed of discountTypesAllowed\">\n        <hr class=\"spacer\">\n        <h3>{{discountTypeAllowed}}</h3>\n    </div>\n\n    <div *ngIf=\"actionFailed == true\">\n        <div class=\"form-signin-heading\" style=\"color:red;\">{{messageToUser}}</div>\n    </div>\n    <!--Spacer-->\n    <hr class=\"spacer\">\n    <!--Spacer-->\n    <div class=\"container\">\n        <h1>Choose discount type to delete</h1>\n\n        <form [formGroup]=\"formDeleteType\" (ngSubmit)=\"deleteDiscountType()\">\n\n            <div class=\"form-group\">\n                <select formControlName=\"formDeleteType\">\n                    <option *ngFor=\"let discountTypeAllowedToDelete of discountTypesAllowed\" [ngValue]=\"discountTypeAllowedToDelete\">{{discountTypeAllowedToDelete}}</option>\n                </select>\n            </div>\n\n            <button class=\"btn btn-primary\" type=\"submit\">Submit</button>\n        </form>\n        <div *ngIf=\"actionFailed == true\">\n            <div class=\"form-signin-heading\" style=\"color:red;\">{{messageToUser}}</div>\n        </div>\n    </div>\n    <!--Spacer-->\n    <hr class=\"spacer\">\n    <!--Spacer-->\n    <div class=\"container\">\n        <h1>Choose discount type to add</h1>\n        <form [formGroup]=\"formAddType\" (ngSubmit)=\"addDiscountType()\">\n\n            <div class=\"form-group\">\n                <select formControlName=\"formAddType\">\n                    <option *ngFor=\"let discountTypeToAdd of possibleTypesToAdd\" [ngValue]=\"discountTypeToAdd\">{{discountTypeToAdd}}</option>\n                </select>\n            </div>\n\n            <button class=\"btn btn-primary\" type=\"submit\">Submit</button>\n        </form>\n        <div *ngIf=\"actionFailed == true\">\n            <div class=\"form-signin-heading\" style=\"color:red;\">{{messageToUser}}</div>\n        </div>\n    </div>\n    <hr class=\"spacer\">\n    <button (click)=\"backToDiscountManagement()\">Back To Discount Management</button>\n</body>\n</html>\n","import { Component, OnInit } from '@angular/core';\nimport { Router, ActivatedRoute } from \"@angular/router\";\nimport { HttpRequestService, JsonParsed } from '../http-request.service';\nimport { FormGroup, FormControl, Validators } from '@angular/forms';\nimport { MyStore, Item, StoreInventory, MakeDiscountNotAllowedBodyRequest, MakeDiscountAllowedBodyRequest } from '../contracts.service';\n@Component({\n  selector: 'app-discount-types-edit-page',\n  templateUrl: './discount-types-edit-page.component.html',\n  styleUrls: ['./discount-types-edit-page.component.css']\n})\nexport class DiscountTypesEditPageComponent implements OnInit {\n    discountTypesAllowed: string[];\n    storeName: string;\n    storeid: string;\n    actionFailed: boolean;\n    messageToUser: string;\n    allTypesOfDiscount: string[] = [\n        \"OPENED\", \"ITEM_CONDITIONAL\", \"STORE_CONDITIONAL\", \"COMPOSITE\"\n    ];\n\n    possibleTypesToAdd: string[];\n\n    formDeleteType = new FormGroup({\n        formDeleteType: new FormControl('', Validators.required),\n    });\n\n    formAddType = new FormGroup({\n        formAddType: new FormControl('', Validators.required),\n    });\n\n    constructor(private httpService: HttpRequestService, private router: ActivatedRoute,\n        private routerDiscountsTypes: Router) {\n        this.discountTypesAllowed = [];\n        this.storeName = \"\";\n        this.storeid = \"\";\n        this.actionFailed = false;\n        this.messageToUser = \"\";\n        this.possibleTypesToAdd = [];\n    }\n\n    async ngOnInit(): Promise<void> {\n        this.possibleTypesToAdd = [];\n        this.storeid = this.router.snapshot.paramMap.get('storeid');\n        this.storeName = this.router.snapshot.paramMap.get('storeName');\n\n        let params: Map<string, string> = new Map();\n        params.set(\"storeid\", this.storeid);\n        let response: JsonParsed = await this.httpService.getWithParamsAsync('api/store/GetAllowedDiscounts', params);\n        if (response.Success) {\n            this.discountTypesAllowed = JSON.parse(response.AnswerOrExceptionJson);\n            this.allTypesOfDiscount.forEach(type => {\n                if (!this.discountTypesAllowed.includes(type)) {\n                    this.possibleTypesToAdd.push(type);\n                }\n            });\n        }\n        else {\n            let error = JSON.parse(response.AnswerOrExceptionJson);\n            if (error) {\n                this.actionFailed = true;\n                this.messageToUser = error.Message;\n                return;\n            }\n        }\n    }\n\n    deleteDiscountType() {\n        let deleteTypeRequest: MakeDiscountNotAllowedBodyRequest = {\n            StoreID: this.storeid,\n            DiscountTypeString: this.formDeleteType.get('formDeleteType').value\n        };\n\n        this.httpService.post('api/store/MakeDiscountNotAllowed', deleteTypeRequest).subscribe((data: JsonParsed) => {\n            if (data.Success) {\n                window.alert('The discount type has been removed from store');\n                this.routerDiscountsTypes.navigateByUrl('/RefreshComponent', { skipLocationChange: true }).then(() => {\n                    this.routerDiscountsTypes.navigate(['/home/' + this.storeid + '/storeManagment/discountsManagement', { 'storeName': this.storeName }]);\n                }); \n            } else {\n                this.actionFailed = true;\n                let response = JSON.parse(data.AnswerOrExceptionJson);\n                if (response) {\n                    this.messageToUser = response.Message;\n                }\n            }\n        });\n    }\n\n    addDiscountType() {\n        let addTypeRequest: MakeDiscountAllowedBodyRequest = {\n            StoreID: this.storeid,\n            DiscountTypeString: this.formAddType.get('formAddType').value\n        };\n\n        this.httpService.post('api/store/MakeDiscountAllowed', addTypeRequest).subscribe((data: JsonParsed) => {\n            if (data.Success) {\n                window.alert('The discount type has been added to store');\n                this.routerDiscountsTypes.navigateByUrl('/RefreshComponent', { skipLocationChange: true }).then(() => {\n                    this.routerDiscountsTypes.navigate(['/home/' + this.storeid + '/storeManagment/discountsManagement', { 'storeName': this.storeName }]);\n                });\n            } else {\n                this.actionFailed = true;\n                let response = JSON.parse(data.AnswerOrExceptionJson);\n                if (response) {\n                    this.messageToUser = response.Message;\n                }\n            }\n        });\n    }\n\n    backToDiscountManagement() {\n        this.routerDiscountsTypes.navigate(['/home/' + this.storeid + '/storeManagment/discountsManagement', { 'storeName': this.storeName }]);\n    }\n}\n","<!DOCTYPE html>\r\n<html>\r\n<head>\r\n    <meta charset=\"utf-8\">\r\n    <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\">\r\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\r\n    <title>Discounts edit page</title>\r\n    <link href=\"https://fonts.googleapis.com/css?family=Roboto:300,400\" rel=\"stylesheet\">\r\n</head>\r\n<body>\r\n    <h2>Discounts in {{storeName}}</h2>\r\n    <hr class=\"spacer\">\r\n    <div *ngIf=\"discounts?.length > 0\">\r\n        <div *ngFor=\"let discount of discounts\">\r\n            <hr class=\"spacer\">\r\n            <h3>{{discount.Description}}</h3>\r\n        </div>\r\n    </div>\r\n    <div *ngIf=\"actionFailed0 == true\">\r\n        <div class=\"form-signin-heading\" style=\"color:red;\">{{messageToUser}}</div>\r\n    </div>\r\n    <hr class=\"spacer\">\r\n    <button (click)=\"AddOpenDiscount()\">Add Open Discount</button>\r\n    <hr class=\"spacer\">\r\n    <button (click)=\"AddItemConditionalDiscount_MinItems_ToDiscountOnAll()\">Add conditional discount for item: minimum items for discount on all</button>\r\n    <hr class=\"spacer\">\r\n    <button (click)=\"AddItemConditionalDiscount_MinItems_ToDiscountOnExtraItems()\">Add conditional discount for item: minimum items for discount on extra items</button>\r\n    <hr class=\"spacer\">\r\n    <button (click)=\"AddStoreConditionalDiscount()\">Add conditional discount for store</button>\r\n    <hr class=\"spacer\">\r\n    <div class=\"container\">\r\n        <h3>Compose 2 discounts</h3>\r\n        <form [formGroup]=\"formDiscountComposite\" (ngSubmit)=\"ComposeTwoDiscounts()\">\r\n            <hr class=\"spacer\">\r\n            <h3>Choose left discount</h3>\r\n            <div class=\"form-group\">\r\n                <select formControlName=\"formDiscountLeft\" required>\r\n                    <option *ngFor=\"let discount of discounts\" [ngValue]=\"discount\">{{discount.Description}}</option>\r\n                </select>\r\n            </div>\r\n            <hr class=\"spacer\">\r\n            <h3>Choose right discount</h3>\r\n            <div class=\"form-group\">\r\n                <select formControlName=\"formDiscountRight\" required>\r\n                    <option *ngFor=\"let discount of discounts\" [ngValue]=\"discount\">{{discount.Description}}</option>\r\n                </select>\r\n            </div>\r\n            <hr class=\"spacer\">\r\n            <h3>Choose operator of the composite</h3>\r\n            <div class=\"form-group\">\r\n                <select formControlName=\"formOperator\" required>\r\n                    <option *ngFor=\"let operator of operatorsForComopsite\" [ngValue]=\"operator\">{{operator}}</option>\r\n                </select>\r\n            </div>\r\n            <button class=\"btn btn-primary\" type=\"submit\">Submit</button>\r\n        </form>\r\n        <div *ngIf=\"actionFailed1 == true\">\r\n            <div class=\"form-signin-heading\" style=\"color:red;\">{{messageToUser}}</div>\r\n        </div>\r\n    </div>\r\n    <!--Spacer-->\r\n    <hr class=\"spacer\">\r\n    <!--Spacer-->\r\n    <div class=\"container\">\r\n        <h3>Choose discount to delete</h3>\r\n        <form [formGroup]=\"formDelete\" (ngSubmit)=\"deleteDiscount()\">\r\n            <div class=\"form-group\">\r\n                <select formControlName=\"formDelete\">\r\n                    <option *ngFor=\"let discount of discounts\" [ngValue]=\"discount\">{{discount.Description}}</option>\r\n                </select>\r\n            </div>\r\n\r\n            <button class=\"btn btn-primary\" type=\"submit\">Submit</button>\r\n        </form>\r\n        <div *ngIf=\"actionFailed2 == true\">\r\n            <div class=\"form-signin-heading\" style=\"color:red;\">{{messageToUser}}</div>\r\n        </div>\r\n    </div>\r\n    <hr class=\"spacer\">\r\n    <button (click)=\"backToDiscountManagement()\">Back To Discount Management</button>\r\n</body>\r\n</html>\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { Router, ActivatedRoute } from \"@angular/router\";\r\nimport { MyStore, Item, StoreInventory, RemoveDiscountBodyRequest, Discount, ComposeTwoDiscountsBodyRequest} from '../contracts.service';\r\nimport { HttpRequestService, JsonParsed } from '../http-request.service';\r\nimport { FormGroup, FormControl, Validators } from '@angular/forms';\r\n\r\n@Component({\r\n  selector: 'app-discounts-edit-page',\r\n  templateUrl: './discounts-edit-page.component.html',\r\n  styleUrls: ['./discounts-edit-page.component.css']\r\n})\r\nexport class DiscountsEditPageComponent implements OnInit {\r\n    storeName: string;\r\n    storeid: string;\r\n    store: MyStore;\r\n    items: Item[];\r\n    discounts: Discount[]; //TODO:FIX!\r\n    storeInventory: StoreInventory;\r\n    actionFailed1: boolean;\r\n    actionFailed2: boolean;\r\n    actionFailed0: boolean;\r\n    messageToUser: string;\r\n    operatorsForComopsite = [ \"&\", \"|\", \"xor\"];\r\n    formDelete = new FormGroup({\r\n        formDelete: new FormControl('', Validators.required)\r\n    });\r\n\r\n    formDiscountComposite = new FormGroup({\r\n        formDiscountLeft: new FormControl('', Validators.required),\r\n        formDiscountRight: new FormControl('', Validators.required),\r\n        formOperator: new FormControl('', Validators.required),\r\n    });\r\n\r\n    constructor(private httpService: HttpRequestService, private router: ActivatedRoute, private routerDiscountsEditPage: Router) {\r\n        this.storeName = \"\";\r\n        this.storeid = \"\";\r\n        this.actionFailed0 = false;\r\n        this.actionFailed1 = false;\r\n        this.actionFailed2 = false;\r\n        this.messageToUser = \"\";\r\n        this.discounts = [];\r\n    }\r\n\r\n    async ngOnInit(): Promise<void> {\r\n        this.storeid = this.router.snapshot.paramMap.get('storeid');\r\n        this.storeName = this.router.snapshot.paramMap.get('storeName');\r\n        let params: Map<string, string> = new Map();\r\n        params.set(\"storeid\", this.storeid);\r\n        params.set(\"itemid\", undefined);\r\n\r\n        let dataDiscounts: JsonParsed = await this.httpService.getWithParamsAsync('api/store/GetAllDiscounts', params);\r\n        if (dataDiscounts.Success) {\r\n            this.discounts = JSON.parse(dataDiscounts.AnswerOrExceptionJson);\r\n            //this.store = JSON.parse(dataDiscounts.AnswerOrExceptionJson);\r\n            //this.storeName = this.store.ContactDetails.Name;\r\n            //this.storeInventory = this.store.storeInventory;\r\n           // for (let key in this.storeInventory.Items) {\r\n            //    this.items.push(this.storeInventory.Items[key]);\r\n           // }\r\n\r\n        }\r\n        else {\r\n            let response = JSON.parse(dataDiscounts.AnswerOrExceptionJson);\r\n            if (response) {\r\n                this.actionFailed0 = true;\r\n                this.messageToUser = response.Message;\r\n            }\r\n        }\r\n    }\r\n\r\n    AddOpenDiscount() {\r\n        this.routerDiscountsEditPage.navigateByUrl('/home/' + this.storeid + '/storeManagment/AddOpenDiscount');\r\n    }\r\n\r\n    AddItemConditionalDiscount_MinItems_ToDiscountOnAll() {\r\n        this.routerDiscountsEditPage.navigateByUrl('/home/' + this.storeid + '/storeManagment/AddItemConditionalDiscount_MinItems_ToDiscountOnAll');\r\n    }\r\n\r\n    AddItemConditionalDiscount_MinItems_ToDiscountOnExtraItems() {\r\n        this.routerDiscountsEditPage.navigateByUrl('/home/' + this.storeid + '/storeManagment/AddItemConditionalDiscount_MinItems_ToDiscountOnExtraItems');\r\n    }\r\n\r\n    AddStoreConditionalDiscount() {\r\n        this.routerDiscountsEditPage.navigate(['/home/' + this.storeid + '/storeManagment/AddStoreConditionalDiscount', { 'storeName': this.storeName }]);\r\n    }\r\n\r\n    backToDiscountManagement() {\r\n        this.routerDiscountsEditPage.navigate(['/home/' + this.storeid + '/storeManagment/discountsManagement', { 'storeName': this.storeName }]);\r\n    }\r\n\r\n    ComposeTwoDiscounts() {\r\n        let compositeRequest: ComposeTwoDiscountsBodyRequest = {\r\n            StoreID: this.storeid,\r\n            DiscountLeftID: this.formDiscountComposite.get('formDiscountLeft').value.DiscountID,\r\n            DiscountRightID: this.formDiscountComposite.get('formDiscountRight').value.DiscountID,\r\n            BoolOperator: this.formDiscountComposite.get('formOperator').value\r\n        };\r\n\r\n        this.httpService.post('api/store/ComposeTwoDiscounts', compositeRequest).subscribe((data: JsonParsed) => {\r\n            if (data.Success) {\r\n                window.alert('The discounts have been composed');\r\n                this.routerDiscountsEditPage.navigateByUrl('/RefreshComponent', { skipLocationChange: true }).then(() =>\r\n                    this.routerDiscountsEditPage.navigate(['/home/' + this.storeid + '/storeManagment/discountsManagement', { 'storeName': this.storeName }]));\r\n            } else {\r\n                this.actionFailed1 = true;\r\n                let response = JSON.parse(data.AnswerOrExceptionJson);\r\n                if (response) {\r\n                    this.messageToUser = response.Message;\r\n                }\r\n            }\r\n        });\r\n    }\r\n\r\n    deleteDiscount(){\r\n        let deleteRequest: RemoveDiscountBodyRequest = {\r\n            StoreID: this.storeid,\r\n            DiscountID: this.formDelete.get('formDelete').value.DiscountID\r\n        };\r\n\r\n        this.httpService.post('api/store/RemoveDiscount', deleteRequest).subscribe((data: JsonParsed) => {\r\n            if (data.Success) {\r\n                window.alert('The discount has been removed from store');\r\n                this.routerDiscountsEditPage.navigateByUrl('/RefreshComponent', { skipLocationChange: true }).then(() =>\r\n                    this.routerDiscountsEditPage.navigate(['/home/' + this.storeid + '/storeManagment/discountsManagement', { 'storeName': this.storeName }]));\r\n            } else {\r\n                this.actionFailed2 = true;\r\n                let response = JSON.parse(data.AnswerOrExceptionJson);\r\n                if (response) {\r\n                    this.messageToUser = response.Message;\r\n                }\r\n            }\r\n        });\r\n    }\r\n}\r\n","import { Component, OnInit } from '@angular/core';\nimport { Router, ActivatedRoute } from \"@angular/router\";\n\n@Component({\n  selector: 'app-discounts-management',\n  templateUrl: './discounts-management.component.html',\n  styleUrls: ['./discounts-management.component.css']\n})\nexport class DiscountsManagementComponent implements OnInit {\n    storeName: string;\n    storeid: string;\n\n    constructor(private router: ActivatedRoute, private routerDiscountsManager: Router) { }\n\n    ngOnInit(): void {\n        this.storeName = this.router.snapshot.paramMap.get('storeName');\n        this.storeid = this.router.snapshot.paramMap.get('storeid');\n    }\n\n    discountTypesEditPage() {\n        this.routerDiscountsManager.navigate(['/home/' + this.storeid + '/storeManagment/discountTypesEditPage', { 'storeName': this.storeName }]);\n    }\n\n    discountsEditPage() {\n        this.routerDiscountsManager.navigate(['/home/' + this.storeid + '/storeManagment/discountsEditPage', { 'storeName': this.storeName }]);\n    }\n\n    backToStore() {\n        this.routerDiscountsManager.navigateByUrl('/home/' + this.storeid);\n    }\n}\n","<!DOCTYPE html>\n<html>\n<head>\n    <meta charset=\"utf-8\">\n    <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\">\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\n    <title>Discounts managment</title>\n    <link href=\"https://fonts.googleapis.com/css?family=Roboto:300,400\" rel=\"stylesheet\">\n</head>\n<body>\r\n    <h2>Discount Policy Managment of store {{storeName}}</h2>\r\n    <hr class=\"spacer\">\r\n    <button (click)=\"discountTypesEditPage()\">Manage types of discount </button>\r\n    <hr class=\"spacer\">\r\n    <button (click)=\"discountsEditPage()\">Manage discounts </button>\r\n    <hr class=\"spacer\">\r\n    <button (click)=\"backToStore()\">Back To The Store</button>\r\n</body>\n</html>\n","<h2>Your Order</h2>\r\n\r\n<div *ngFor=\"let storeAndItem of storesAndItems\">\r\n    <h2>Store name: {{ storeAndItem.storeName }}</h2>\r\n    <div *ngFor=\"let orderItem of Object.keys(storeAndItem.items)\">\r\n        <h3>item name: {{ storeAndItem.items[orderItem].Name }}</h3>\r\n        <p>price per item: {{ storeAndItem.items[orderItem].DiscountedPricePerItem | currency:\"ILS\" }}</p>\r\n        <p>amount: {{ storeAndItem.items[orderItem].Amount }}</p>\r\n    </div>\r\n</div>\r\n\r\n<div *ngIf=\"order\">\r\n    <h3>Total price: {{ order.Total  | currency:\"ILS\" }}</h3>\r\n</div>\r\n\r\n<div *ngIf=\"checkoutFailed == true\">\r\n    <div class=\"form-signin-heading\" style=\"color:red;\">{{MessageToUser}}</div>\r\n</div>\r\n\r\n<div *ngIf=\"checkoutFailed == false\">\r\n    <button (click)=\"onApprove()\">\r\n        Continue To Purchase\r\n    </button>\r\n</div>\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { Router } from \"@angular/router\";\r\nimport { HttpRequestService, JsonParsed } from '../http-request.service';\r\nimport { Order, OrderItem, MyStore, StoreAndItems } from '../contracts.service';\n\n@Component({\n  selector: 'app-display-order',\n  templateUrl: './display-order.component.html',\n  styleUrls: ['./display-order.component.css']\n})\nexport class DisplayOrderComponent implements OnInit {\n    checkoutFailed: boolean;\n    MessageToUser: string;\n    order: Order;\n    storesAndItems: StoreAndItems[];\n    Object = Object;\n\n    constructor(private router: Router,\n        private httpService: HttpRequestService, )\n    {\n        this.checkoutFailed = false;\n        this.MessageToUser = '';\n    }\n\n    async ngOnInit(){\n        this.storesAndItems = [];\n        let data: JsonParsed = await this.httpService.getAsync('api/purchase/DisplayBeforeCheckout');\n        if (data.Success) {\n            this.order = JSON.parse(data.AnswerOrExceptionJson);\n            for (let session of Object.keys(this.order.StoreOrders)) {\n                let storeOrder = this.order.StoreOrders[session];\n                let storeInfoByIdResponse: JsonParsed = await this.httpService.getWithParamstAsync('api/store/GetStoreInformationByID', storeOrder.StoreId);\n                if (storeInfoByIdResponse.Success) {\n                    let store: MyStore = JSON.parse(storeInfoByIdResponse.AnswerOrExceptionJson);\n                    let storeName = store.ContactDetails.Name;\n                    let storeItems: OrderItem[] = storeOrder.StoreOrderItems;\r\n                    this.storesAndItems.push({ orderId: this.order.OrderId, storeName: storeName, items: storeItems });\n                } else {\n                    this.checkoutFailed = true;\n                    let response = JSON.parse(storeInfoByIdResponse.AnswerOrExceptionJson);\n                    if (response) {\n                        this.MessageToUser = response.Message;\n                    }\n                }\n            }\n        } else {\n            this.checkoutFailed = true;\n            let response = JSON.parse(data.AnswerOrExceptionJson);\n            if (response) {\n                this.MessageToUser = response.Message;\n            }\n        }\n    }\n\n    onApprove() {\n        this.router.navigate(['/checkout', { 'orderId': this.order.OrderId }]);\n    }\n}\n","import { Component, OnInit } from '@angular/core';\nimport { HttpRequestService, JsonParsed } from '../http-request.service';\nimport { ActivatedRoute, Router } from \"@angular/router\";\nimport { MyPair, MyStore ,Item,AddToCartBodyRequest} from '../contracts.service';\nimport { Location } from '@angular/common';\n\n@Component({\n  selector: 'app-edit-item-amount-in-cart',\n  templateUrl: './edit-item-amount-in-cart.component.html',\n  styleUrls: ['./edit-item-amount-in-cart.component.css']\n})\nexport class EditItemAmountInCartComponent implements OnInit {\n\n    updateAmountFailed: boolean;\n    MessageToUser: string;\n    itemId: string;\n    storeId: string;\n    item: Item;\n\n    constructor(private router: ActivatedRoute,\n        private httpService: HttpRequestService,\n        private _location: Location\n    ) {\n        this.updateAmountFailed = false;\n        this.MessageToUser = '';\n    }\n\n    ngOnInit(): void {\n        this.storeId = this.router.snapshot.paramMap.get('storeId');\n        this.itemId = this.router.snapshot.paramMap.get('itemId');\n        this.httpService.getWithParams('api/store/GetStoreInformationByID', this.storeId).subscribe((data: JsonParsed) => {\n            if (data.Success) {\n                let store: MyStore = JSON.parse(data.AnswerOrExceptionJson);\n                let storeInventory = store.storeInventory;\n                for (let key in storeInventory.Items) {\n                    if (storeInventory.Items[key].Id == this.itemId) {\n                        this.item = storeInventory.Items[key];\n                    }\n                }\n            } else {\n                this.updateAmountFailed = true;\n                let response = JSON.parse(data.AnswerOrExceptionJson);\n                if (response) {\n                    this.MessageToUser = response.Message;\n                }\n            }\n        });\n    }\n\n    UpdateAmount(Amount) {\n        let dataToSend: AddToCartBodyRequest = {\n           storeId: this.storeId,\n           itemId: this.itemId,\n           amount: Amount.amount\n        }\n        this.httpService.post('api/user/ChangeItemAmountInCart',dataToSend).subscribe((data: JsonParsed) => {\n            if (data.Success) {\n                window.alert('The item amount has been changed!');\n                this._location.back();\n            } else {\n                this.updateAmountFailed = true;\n                let response = JSON.parse(data.AnswerOrExceptionJson);\n                if (response) {\n                    this.MessageToUser = 'not enought storage of this item';\n                }\n            }\n        });\n}\n}\n","<!DOCTYPE html>\n<html>\n<head>\n    <meta charset=\"utf-8\">\n    <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\">\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\n    <title>Custom Bootstrap</title>\n    <link href=\"https://fonts.googleapis.com/css?family=Roboto:300,400\" rel=\"stylesheet\">\n</head>\n<body>\n    <div class=\"container\">\n        <h2>Enter Requested Amount for item: {{ item.Name }}</h2>\n        <form #UpdateAmountIncart=\"ngForm\" (ngSubmit)=\"UpdateAmount(UpdateAmountIncart.value)\" class=\"form-signin\">\n            <label for=\"amount\" class=\"sr-only\">Amount</label>\n            <input type=\"number\" name=\"amount\" class=\"form-control\" placeholder=\"Amount\" required autofocus ngModel>\n            <button class=\"btn btn-lg btn-primary btn-block\" type=\"submit\">Update Amount</button>\n        </form>\n        <div *ngIf=\"updateAmountFailed == true\">\n            <div class=\"form-signin-heading\" style=\"color:red;\">{{MessageToUser}}</div>\n        </div>\n    </div> \n</body>\n</html>\n","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute } from \"@angular/router\";\nimport { HttpRequestService, JsonParsed } from '../http-request.service';\nimport { MyStore, EditItemBodyRequest, Item } from '../contracts.service';\nimport { Location } from '@angular/common';\n\n@Component({\n  selector: 'app-edit-item',\n  templateUrl: './edit-item.component.html',\n  styleUrls: ['./edit-item.component.css']\n})\nexport class EditItemComponent implements OnInit {\n    editItemFailed: boolean;\n    MessageToUser: string;\n    storeid: string;\n    itemid: string;\n    StoreName: string;\n    item: Item;\n\n    constructor(\n        private router: ActivatedRoute,\n        private httpService: HttpRequestService,\n        private _location: Location\n    ) {\n        this.editItemFailed = false;\n        this.MessageToUser = '';\n    }\n\n    ngOnInit(): void {\n        this.storeid = this.router.snapshot.paramMap.get('storeid');\n        this.itemid = this.router.snapshot.paramMap.get('itemid');\n        this.httpService.getWithParams('api/store/GetStoreInformationByID', this.storeid).subscribe((data: JsonParsed) => {\n            if (data.Success) {\n                let store: MyStore = JSON.parse(data.AnswerOrExceptionJson);\n                this.StoreName = store.ContactDetails.Name;\n                let storeInventory = store.storeInventory;\n                for (let key in storeInventory.Items) {\n                    if (storeInventory.Items[key].Id == this.itemid) {\n                        this.item = storeInventory.Items[key];\r\n                    }\n                }\n            } else {\n                this.editItemFailed = true;\n                let response = JSON.parse(data.AnswerOrExceptionJson);\n                if (response) {\n                    this.MessageToUser = response.Message;\n                }\n            }\n        });\n    }\n\n    onSubmit(itemData) {\n        let editItemRequest: EditItemBodyRequest =\n        {\n            StoreID: this.storeid,\n            ItemID: this.itemid,\n            Amount: itemData.amount != \"\" ? itemData.amount : this.item.Amount,\n            Rank: itemData.rank != \"\" ? itemData.rank : this.item.Rank,\n            Price: itemData.price != \"\" ? itemData.price : this.item.Price,\n            Name: itemData.itemname != \"\" ? itemData.itemname : undefined,\n            Categories: itemData.categories != \"\" ? JSON.stringify(itemData.categories.split(',').map(function (category) {\r\n                return category.trim();\r\n                }))\n                :undefined,\n            Keywords: itemData.keywords != \"\" ? JSON.stringify(itemData.keywords.split(',').map(function (keyword) {\r\n                return keyword.trim();\r\n                }))\n                :undefined\n        }\n\n        this.httpService.post('api/store/EditItem', editItemRequest).subscribe((data: JsonParsed) => {\n            if (data.Success) {\n                this._location.back();\n            } else {\n                this.editItemFailed = true;\n                let response = JSON.parse(data.AnswerOrExceptionJson);\n                if (response) {\n                    this.MessageToUser = response.Message;\n                }\n            }\n        });\n    }\n\n}\n","<!DOCTYPE html>\r\n<html>\r\n<head>\r\n    <meta charset=\"utf-8\">\r\n    <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\">\r\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\r\n    <title>Custom Bootstrap</title>\r\n    <link href=\"https://fonts.googleapis.com/css?family=Roboto:300,400\" rel=\"stylesheet\">\r\n</head>\r\n<body>\r\n    <div class=\"container\">\r\n        <form #editItemForm=\"ngForm\" (ngSubmit)=\"onSubmit(editItemForm.value)\" class=\"form-signin\">\r\n            <h2 class=\"form-signin-heading\">Edit Item {{ item.Name }} Of Store: {{ StoreName }}</h2>\r\n            <hr class=\"spacer\">\r\n            <label for=\"itemname\" class=\"sr-only\">Item Name</label>\r\n            <input type=\"text\" name=\"itemname\" class=\"form-control\" placeholder=\"Item Name\" required autofocus ngModel>\r\n            <hr class=\"spacer\">\r\n            <label for=\"amount\" class=\"sr-only\">Amount</label>\r\n            <input type=\"number\" name=\"amount\" class=\"form-control\" placeholder=\"Amount\" required autofocus ngModel>\r\n            <hr class=\"spacer\">\r\n            <label for=\"rank\" class=\"sr-only\">Rank</label>\r\n            <input type=\"number\" name=\"rank\" class=\"form-control\" placeholder=\"Rank\" required autofocus ngModel>\r\n            <hr class=\"spacer\">\r\n            <label for=\"categories\" class=\"sr-only\">Categories</label>\r\n            <input type=\"text\" name=\"categories\" class=\"form-control\" placeholder=\"Categories\" required autofocus ngModel>\r\n            <hr class=\"spacer\">\r\n            <label for=\"price\" class=\"sr-only\">Item Price</label>\r\n            <input type=\"number\" name=\"price\" class=\"form-control\" placeholder=\"Item Price\" required autofocus ngModel>\r\n            <hr class=\"spacer\">\r\n            <label for=\"keywords\" class=\"sr-only\">Key Words</label>\r\n            <input type=\"text\" name=\"keywords\" class=\"form-control\" placeholder=\"Key Words\" required autofocus ngModel>\r\n            <button class=\"btn btn-lg btn-primary btn-block\" type=\"submit\">Update Item</button>\r\n        </form>\r\n        <div *ngIf=\"editItemFailed == true\">\r\n            <div class=\"form-signin-heading\" style=\"color:red;\">{{MessageToUser}}</div>\r\n        </div>\r\n    </div> \r\n</body>\r\n</html>\r\n","import { Component, OnInit } from '@angular/core';\nimport { Router } from \"@angular/router\";\nimport { ExtendedSearchDetails } from '../contracts.service';\n\n@Component({\n  selector: 'app-extended-search',\n  templateUrl: './extended-search.component.html',\n  styleUrls: ['./extended-search.component.css']\n})\nexport class ExtendedSearchComponent implements OnInit {\n\n    constructor(private router: Router) { }\n\n  ngOnInit(): void {\n  }\n\n    onSubmitSearch(extenedSearchForm) {\n        let details: ExtendedSearchDetails = {\n            itemName: extenedSearchForm.itemName,\n            filterItemRank: extenedSearchForm.filterItemRank,\n            filterMinPrice: extenedSearchForm.filterMinPrice,\n            filterMaxPrice: extenedSearchForm.filterMaxPrice,\n            filterStoreRank: extenedSearchForm.filterStoreRank,\n            category: extenedSearchForm.category,\n            keywords: extenedSearchForm.keywords\n        };\n\n        this.router.navigate(['/searchResults', details]);\n    }\n}\n","<!DOCTYPE html>\n<html>\n<head>\n    <meta charset=\"utf-8\">\n    <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\">\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\n    <title>Extended Search</title>\n    <link href=\"https://fonts.googleapis.com/css?family=Roboto:300,400\" rel=\"stylesheet\">\n</head>\n<body>\n    <div class=\"container\">\n        <form #ExtenedSearchForm=\"ngForm\" (ngSubmit)=\"onSubmitSearch(ExtenedSearchForm.value)\" class=\"form-signin\">\n            <h2 class=\"form-signin-heading\">Extended Search</h2>\n            <!--Spacer-->\n            <hr class=\"spacer\">\n            <!--Spacer-->\n            <label for=\"itemName\" class=\"sr-only\">Item Name</label>\n            <input type=\"text\" name=\"itemName\" class=\"form-control\" placeholder=\"Item Name\" required autofocus ngModel>\n            <!--Spacer-->\n            <hr class=\"spacer\">\n            <!--Spacer-->\n            <label for=\"category\" class=\"sr-only\">Category</label>\n            <input type=\"text\" name=\"category\" class=\"form-control\" placeholder=\"Category\" required autofocus ngModel>\n            <!--Spacer-->\n            <hr class=\"spacer\">\n            <!--Spacer-->\n            <label for=\"keywords\" class=\"sr-only\">Keywords (Seperated by , )</label>\n            <input type=\"text\" name=\"keywords\" class=\"form-control\" placeholder=\"Keywords\" required autofocus ngModel>\n            <!--Spacer-->\n            <hr class=\"spacer\">\n            <!--Spacer-->\n            <label for=\"filterMinPrice \" class=\"sr-only\">Minimum Price</label>\n            <input type=\"number\" name=\"filterMinPrice\" class=\"form-control\" placeholder=\"Minimum Price\" required autofocus ngModel>\n            <!--Spacer-->\n            <hr class=\"spacer\">\n            <label for=\"filterMaxPrice \" class=\"sr-only\">Maximum Price</label>\n            <input type=\"number\" name=\"filterMaxPrice\" class=\"form-control\" placeholder=\"Maximum Price\" required autofocus ngModel>\n            <!--Spacer-->\n            <hr class=\"spacer\">\n            <!--Spacer-->\n            <label for=\"filterItemRank \" class=\"sr-only\">Item Rank</label>\n            <input type=\"number\" name=\"filterItemRank\" class=\"form-control\" placeholder=\"Item Rank\" required autofocus ngModel>\n            <!--Spacer-->\n            <hr class=\"spacer\">\n            <!--Spacer-->\n            <label for=\"filterStoreRank \" class=\"sr-only\">Store Rank</label>\n            <input type=\"number\" name=\"filterStoreRank\" class=\"form-control\" placeholder=\"Store Rank\" required autofocus ngModel>\n            <!--Spacer-->\n            <hr class=\"spacer\">\n            <!--Spacer-->\n            <button class=\"btn btn-lg btn-primary btn-block\" type=\"submit\">Search Item</button>\n        </form>\n    </div> <!-- /container -->\n</body>\n</html>\n","import { Component, OnInit } from '@angular/core';\nimport { HttpRequestService, JsonParsed } from '../http-request.service';\n\n@Component({\n  selector: 'app-get-messages',\n  templateUrl: './get-messages.component.html',\n  styleUrls: ['./get-messages.component.css']\n})\nexport class GetMessagesComponent implements OnInit {\n    showMessagesFailed: boolean;\n    MessageToUser: string;\n    Messages: string[];\n\n\n constructor(private httpService: HttpRequestService, ) {\n        this.showMessagesFailed=false;\n        this.MessageToUser = '';\n        this.Messages=[];\n    }\n\n  ngOnInit(): void {\n        this.httpService.get('api/user/GetMyMessages').subscribe((data: JsonParsed) => {\n            if (data.Success) {\n                this.Messages = JSON.parse(data.AnswerOrExceptionJson);\n                if (this.Messages.length === 0) {\n                    this.Messages.push(\"You have no new messages\");\n                }\n                \n            }\n            else {\n                this.showMessagesFailed = true;\n                let response = JSON.parse(data.AnswerOrExceptionJson);\n                if (response) {\n                    this.MessageToUser = response.Message;\n                }\n            }\n        });\n  }\n  }\n","<h2>Messages</h2>\n\n<li *ngFor=\"let message of Messages\">\n    {{message}}\n</li>\n\n<div *ngIf=\"showMessagesFailed == true\">\n    <div class=\"form-signin-heading\" style=\"color:red;\">{{MessageToUser}}</div>\n</div>\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpParams } from '@angular/common/http';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class HttpRequestService {\r\n\r\n    constructor(\r\n        private _httpService: HttpClient,) { }\r\n\r\n    get(url: string) {\r\n        return this._httpService.get(url);\r\n    }\r\n\r\n    async getAsync(url: string): Promise<JsonParsed>{\r\n        return this._httpService.get<JsonParsed>(url).toPromise();\r\n    }\r\n\r\n    async getWithParamstAsync(url: string, param: string): Promise<JsonParsed> {\r\n        let params = new HttpParams().set('storeid', param);\r\n        return this._httpService.get<JsonParsed>(url, { params: params }).toPromise();\r\n    }\r\n\r\n    async getWithParamsAsync(url: string, parameters: Map<string, string | null>): Promise<JsonParsed> {\r\n\r\n        let paramsToSend = new HttpParams();\r\n\r\n        parameters.forEach((value: string | null, key: string) => {\r\n            paramsToSend = paramsToSend.set(key, value);\r\n        });\r\n        return this._httpService.get<JsonParsed>(url, { params: paramsToSend }).toPromise();\r\n    }\r\n\r\n    getWithParams(url: string, param: string) {\r\n        let params = new HttpParams().set('storeid', param);\r\n        return this._httpService.get(url, { params: params });\r\n    }\r\n\r\n    post(url: string, body: Object) {\r\n        return this._httpService.post(url, body);\r\n    }\r\n\r\n    postAsync(url: string, body: Object): Promise<JsonParsed> {\r\n        return this._httpService.post<JsonParsed>(url, body).toPromise();\r\n    }\r\n}\r\n\r\nexport interface JsonParsed {\r\n    Success: boolean;\r\n    AnswerOrExceptionJson: string;\r\n}\r\n","<!DOCTYPE html>\r\n<html>\r\n    <head>\r\n        <meta charset=\"utf-8\">\r\n        <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\">\r\n        <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\r\n        <title>Custom Bootstrap</title>\r\n        <link href=\"https://fonts.googleapis.com/css?family=Roboto:300,400\" rel=\"stylesheet\">\r\n    </head>\r\n    <body>\r\n        <div *ngIf=\"item\">\r\n            <h1>{{ item.Name }}</h1>\r\n            <p>item price: {{ item.Price | currency:\"ILS\" }}</p>\r\n            <p>item amount in inventory: {{ item.Amount }}</p>\r\n            <p>item categories: {{ item.Categories }}</p>\r\n            <p>item keywords: {{ item.Keywords }}</p>\r\n            <!--<p>item rank: {{ item.Rank }}</p>\r\n    <form [formGroup]=\"form\"\r\n          (ngSubmit)=\"rate()\"\r\n          class=\"mt-3\">\r\n        <div class=\"form-group\">\r\n            <ngb-rating [max]=\"10\"\r\n                        formControlName=\"rating\"></ngb-rating>\r\n        </div>\r\n        <button [disabled]=\"form.invalid || form.disabled\" class=\"btn btn-primary\">Rate</button>\r\n    </form>-->\r\n            <div *ngIf=\"inventoryPermission == true\">\r\n                <button (click)=\"deleteItem()\">Delete Item</button>\r\n                <button (click)=\"editItem()\">Edit Item</button>\r\n            </div>\r\n        </div>\r\n        <div class=\"container\">\r\n            <form #addToCartForm=\"ngForm\" (ngSubmit)=\"addToCartMethod(addToCartForm.value)\" class=\"form-signin\">\r\n                <label for=\"amount\" class=\"sr-only\">Amount</label>\r\n                <input type=\"number\" name=\"amount\" class=\"form-control\" placeholder=\"Amount\" required autofocus ngModel>\r\n                <button class=\"btn btn-lg btn-primary btn-block\" type=\"submit\">Add To Cart</button>\r\n            </form>\r\n            <div *ngIf=\"actionFailed == true\">\r\n                <div class=\"form-signin-heading\" style=\"color:red;\">{{MessageToUser}}</div>\r\n            </div>\r\n        </div> \r\n\r\n        <button (click)=\"backToStore()\">Back To The Store</button>\r\n    </body>\r\n</html>\r\n\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { ActivatedRoute, Router } from \"@angular/router\";\r\nimport { StoreInventory, Item, MyStore, AddToCartBodyRequest, DeleteItemBodyRequest/*, RateItemBodyRequest*/ } from '../contracts.service';\r\nimport { HttpRequestService, JsonParsed } from '../http-request.service';\r\nimport { Location } from '@angular/common';\r\n//import { FormGroup, FormControl, Validators } from '@angular/forms';\r\n\r\n@Component({\r\n  selector: 'app-item-page',\r\n  templateUrl: './item-page.component.html',\r\n  styleUrls: ['./item-page.component.css']\r\n})\r\nexport class ItemPageComponent implements OnInit {\r\n    /*form = new FormGroup({\r\n        rating: new FormControl('', Validators.required),\r\n    });*/\r\n    store: MyStore;\r\n    item: Item;\r\n    storeInventory: StoreInventory;\r\n    storeid: string;\r\n    itemid: string;\r\n    actionFailed: boolean;\r\n    MessageToUser: string;\r\n    inventoryPermission: boolean;\r\n\r\n    constructor(\r\n        private router: ActivatedRoute,\r\n        private httpService: HttpRequestService,\r\n        private _location: Location,\r\n        private routerItem: Router,\r\n    )\r\n    {\r\n        this.actionFailed = false;\r\n        this.MessageToUser = '';\r\n        this.inventoryPermission = false;\r\n    }\r\n\r\n    async ngOnInit() {\r\n        this.storeid = this.router.snapshot.paramMap.get('storeid');\r\n        this.itemid = this.router.snapshot.paramMap.get('itemid');\r\n        let data: JsonParsed = await this.httpService.getAsync('api/store/GetStoresWithPermissions');\r\n        if (data.Success) {\r\n            var storesWithPermissionsTuples = JSON.parse(data.AnswerOrExceptionJson);\r\n            storesWithPermissionsTuples.forEach((element, index, array) => {\r\n                if (element.Item2.includes(\"INVENTORY\")) {\r\n                    if (this.storeid == element.Item1.Id) {\r\n                        this.inventoryPermission = true;\r\n                    }\r\n                }\r\n            });\r\n        }\r\n\r\n        let storeInfoByIdResponse: JsonParsed = await this.httpService.getWithParamstAsync('api/store/GetStoreInformationByID', this.storeid);\r\n        if (storeInfoByIdResponse.Success) {\r\n            this.store = JSON.parse(storeInfoByIdResponse.AnswerOrExceptionJson);\r\n            this.storeInventory = this.store.storeInventory;\r\n            for (let key in this.storeInventory.Items) {\r\n                if (this.itemid == this.storeInventory.Items[key].Id) {\r\n                    this.item = this.storeInventory.Items[key];\r\n                }\r\n            }\r\n        } else {\r\n            this.actionFailed = true;\r\n            let response = JSON.parse(storeInfoByIdResponse.AnswerOrExceptionJson);\r\n            if (response) {\r\n                this.MessageToUser = response.Message;\r\n            }\r\n        }\r\n    }\r\n\r\n    addToCartMethod(customerData) {\r\n        if (customerData.amount == undefined || customerData.amount === \"\" || customerData.amount === 0) {\r\n            this.actionFailed = true;\r\n            this.MessageToUser = \"Invalid amount\";\r\n            return;\r\n        }\r\n\r\n        let dataToSend: AddToCartBodyRequest = {\r\n            storeId: this.store.Id,\r\n            itemId: this.item.Id,\r\n            amount: customerData.amount\r\n        };\r\n\r\n        this.httpService.post('api/user/AddToCart', dataToSend).subscribe((data: JsonParsed) => {\r\n            if (data.Success) {\r\n                window.alert('The item has been added to cart!');\r\n                this._location.back();\r\n            } else {\r\n                this.actionFailed = true;\r\n                let response = JSON.parse(data.AnswerOrExceptionJson);\r\n                if (response) {\r\n                    this.MessageToUser = response.Message;\r\n                }\r\n            }\r\n        });\r\n    }\r\n\r\n    /*rate() {\r\n        let rateItemRequest: RateItemBodyRequest =\r\n        {\r\n            StoreId: this.storeid,\r\n            ItemId: this.itemid,\r\n            Rank: this.form.value[\"rating\"],\r\n        }\r\n\r\n        this.httpService.post('api/store/Rankitem', rateItemRequest).subscribe((data: JsonParsed) => {\r\n            if (data.Success) {\r\n                window.location.reload();\r\n            } else {\r\n                this.actionFailed = true;\r\n                let response = JSON.parse(data.AnswerOrExceptionJson);\r\n                if (response) {\r\n                    this.MessageToUser = response.Message;\r\n                }\r\n            }\r\n        });\r\n        this.form.reset();\r\n    }*/\r\n\r\n    deleteItem() {\r\n        let dataToSend: DeleteItemBodyRequest = {\r\n            storeId: this.store.Id,\r\n            itemId: this.item.Id\r\n        };\r\n        this.httpService.post('api/store/DeleteItem', dataToSend).subscribe((data: JsonParsed) => {\r\n            if (data.Success) {\r\n                window.alert('The item has been deleted!');\r\n                this._location.back();\r\n            } else {\r\n                this.actionFailed = true;\r\n                let response = JSON.parse(data.AnswerOrExceptionJson);\r\n                if (response) {\r\n                    this.MessageToUser = response.Message;\r\n                }\r\n            }\r\n        });\r\n    }\r\n\r\n    editItem() {\r\n        this.routerItem.navigateByUrl('/home/' + this.store.Id + '/' + this.itemid + '/editItem');\r\n    }\r\n\r\n    backToStore() {\r\n        this.routerItem.navigateByUrl('/home/' + this.storeid);\r\n    }\r\n\r\n}\r\n","import { Component, OnInit, ChangeDetectorRef  } from '@angular/core';\r\nimport { Router } from \"@angular/router\";\r\nimport { HttpRequestService, JsonParsed } from '../http-request.service';\r\n\r\n@Component({\r\n  selector: 'app-login',\r\n  templateUrl: './login.component.html',\r\n  styleUrls: ['./login.component.css'],\r\n})\r\nexport class LoginComponent implements OnInit {\r\n    response: string;\r\n    result: JsonParsed;\r\n    loginFailed: boolean;\r\n    MessageToUser: string;\r\n    \r\n  constructor(\r\n      private _cdr: ChangeDetectorRef,\r\n      private router: Router,\r\n      private httpService: HttpRequestService,\r\n  ) {\r\n      this.loginFailed = false;\r\n      this.MessageToUser = '';\r\n  }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n    onSubmit(customerData) {\r\n        this.httpService.post('api/user/Login', customerData).subscribe((data: JsonParsed) => {\r\n            if (data.Success) {\r\n                localStorage.setItem('currentUser', customerData.username);\r\n                this.router.navigateByUrl('/home').then((_) => window.location.reload());\r\n            } else {\r\n                this.loginFailed = true;\r\n                let response = JSON.parse(data.AnswerOrExceptionJson);\r\n                if (response) {\r\n                    this.MessageToUser = response.Message;\r\n                }\r\n            }\r\n        });\r\n\r\n  }\r\n\r\n    changeStatus(): void {\r\n        setTimeout(() => {\r\n            this.loginFailed = false;\r\n            this.MessageToUser = '';\r\n            this._cdr.detectChanges()\r\n        }, 1000);\r\n    }\r\n}\r\n\r\n","<!DOCTYPE html>\r\n<html>\r\n<head>\r\n  <meta charset=\"utf-8\">\r\n  <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\">\r\n  <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\r\n  <title>Custom Bootstrap Login Page</title>\r\n  <link href=\"https://fonts.googleapis.com/css?family=Roboto:300,400\" rel=\"stylesheet\">\r\n</head>\r\n<body>\r\n  <!-- Fully Responsive Login Page-->\r\n    <div class=\"container\">\r\n        <form #loginForm=\"ngForm\" (ngSubmit)=\"onSubmit(loginForm.value)\" class=\"form-signin\">\r\n            <h2 class=\"form-signin-heading\">Login</h2>\r\n            <label for=\"username\" class=\"sr-only\">Username</label>\r\n            <input type=\"text\" name=\"username\" class=\"form-control\" placeholder=\"Username\" required autofocus ngModel>\r\n            <!--Spacer-->\r\n            <hr class=\"spacer\">\r\n            <!--Spacer-->\r\n            <label for=\"password\" class=\"sr-only\">Password</label>\r\n            <input type=\"password\" name=\"password\" class=\"form-control\" placeholder=\"Password\" required ngModel>\r\n            <button class=\"btn btn-lg btn-primary btn-block\" type=\"submit\">Sign in</button>\r\n        </form>\r\n        <div *ngIf=\"loginFailed == true\">\r\n            <div class=\"form-signin-heading\" style=\"color:red;\">{{MessageToUser}}</div>\r\n        </div>\r\n    </div> <!-- /container -->\r\n</body>\r\n</html>\r\n","import { Component, OnInit } from '@angular/core';\nimport { Router } from \"@angular/router\";\nimport { HttpRequestService, JsonParsed } from '../http-request.service';\n\n@Component({\n    selector: 'app-logout',\n    templateUrl: './logout.component.html',\n    styleUrls: ['./logout.component.css']\n})\nexport class LogoutComponent implements OnInit {\n    logoutSucces: boolean;\n    MessageToUser: string;\n\n    constructor(\n        private httpService: HttpRequestService,\n        private router: Router,\n    ) {\n        this.logoutSucces = false;\n    }\n\n    ngOnInit(): void {\n        this.httpService.get('api/user/logout').subscribe((data: JsonParsed) => {\n            if (!data.Success) {\n                let response = JSON.parse(data.AnswerOrExceptionJson);\n                if (response) {\n                    this.MessageToUser = response.Message;\r\n                }\n            }\n            else {\n                this.logoutSucces = true;\r\n                localStorage.removeItem('currentUser');\n                window.alert('Logout Success - Hope to see you soon');\n                this.router.navigateByUrl('/home').then((_) => window.location.reload()); \r\n            }\n        });\n    }\n}\n","<div *ngIf=\"logoutSucces == false; else loggedOut\">\r\n    <div class=\"form-signin-heading\" style=\"color:red;\">{{MessageToUser}}</div>\r\n</div>\r\n\r\n<ng-template #loggedOut>\r\n    <div class=\"form-signin-heading\" style=\"color:rebeccapurple;\">Logout Success - Hope to see you soon</div>\r\n</ng-template>\r\n","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, Router } from \"@angular/router\";\nimport { HttpRequestService, JsonParsed } from '../http-request.service';\nimport { AddOrRemovePermissionBodyRequest, MyStore } from '../contracts.service';\nimport { FormGroup, FormControl, Validators } from '@angular/forms';\r\n\n@Component({\n  selector: 'app-manage-permissions',\n  templateUrl: './manage-permissions.component.html',\n  styleUrls: ['./manage-permissions.component.css']\n})\nexport class ManagePermissionsComponent implements OnInit {\n    managePermissionsFailed: boolean;\n    MessageToUser: string;\n    storeId: string;\n    StoreName: string;\n    form = new FormGroup({\r\n        username: new FormControl('', Validators.required),\r\n        formEditPermission: new FormControl('', Validators.required),\r\n        addOrRemove: new FormControl('', Validators.required)\r\n    });\n    allPermissions: string[] = [\n        \"inventory\", \"appoint_owner\", \"appoint_manager\", \"edit_permissions\", \"remove_manager\", \"history\", \"remove_owner\", \"policy\", \"close_store\", \"requests\"\n    ];\n\n    constructor(\n        private router: ActivatedRoute,\n        private routerAppoint: Router,\n        private httpService: HttpRequestService,\n    ) {\n        this.managePermissionsFailed = false;\n        this.MessageToUser = '';\n    }\n\n    ngOnInit(): void {\n        this.storeId = this.router.snapshot.paramMap.get('storeid');\n        this.StoreName = this.router.snapshot.paramMap.get('storeName');\n    }\n\n    get f() {\r\n        return this.form.controls;\r\n    }\n\n    editPermission() {\n        let addOrRemovePermissionRequest: AddOrRemovePermissionBodyRequest =\n        {\n            StoreId: this.storeId,\n            Username: this.form.value.username,\n            Permission: this.form.value.formEditPermission\n        }\n        if (this.form.value.addOrRemove == \"true\") {\n            this.httpService.post('api/store/AddPermission', addOrRemovePermissionRequest).subscribe((data: JsonParsed) => {\n                if (data.Success) {\n                    this.routerAppoint.navigateByUrl('/home/' + this.storeId);\n                } else {\n                    this.managePermissionsFailed = true;\n                    let response = JSON.parse(data.AnswerOrExceptionJson);\n                    if (response) {\n                        this.MessageToUser = response.Message;\n                    }\n                }\n            });\r\n        }\n        else {\n            this.httpService.post('api/store/RemovePermission', addOrRemovePermissionRequest).subscribe((data: JsonParsed) => {\n                if (data.Success) {\n                    this.routerAppoint.navigateByUrl('/home/' + this.storeId);\n                } else {\n                    this.managePermissionsFailed = true;\n                    let response = JSON.parse(data.AnswerOrExceptionJson);\n                    if (response) {\n                        this.MessageToUser = response.Message;\n                    }\n                }\n            });\r\n        }\n    }\n\n}\n","<div class=\"container\">\r\n\r\n    <form [formGroup]=\"form\" (ngSubmit)=\"editPermission()\">\r\n        <h2>Add Or Remove Permission To Store Manager Of Store: {{ StoreName }}</h2>\r\n        <div class=\"form-group\">\r\n\r\n            <div>\r\n                <label for=\"username\">UserName</label>\r\n                <input id=\"username\" type=\"text\" name=\"username\" formControlName=\"username\">\r\n            </div>\r\n            <hr class=\"spacer\">\r\n            <p>Permission:</p>\r\n            <select formControlName=\"formEditPermission\">\r\n                <option *ngFor=\"let permission of allPermissions\" [ngValue]=\"permission\">{{permission}}</option>\r\n            </select>\r\n            <hr class=\"spacer\">\r\n            <div>\r\n                <input id=\"add\" type=\"radio\" value=\"true\" name=\"addOrRemove\" formControlName=\"addOrRemove\">\r\n                <label for=\"add\">Add Permission</label>\r\n            </div>\r\n\r\n            <div>\r\n                <input id=\"remove\" type=\"radio\" value=\"false\" name=\"addOrRemove\" formControlName=\"addOrRemove\">\r\n                <label for=\"remove\">Remove Permission</label>\r\n            </div>\r\n\r\n            <div *ngIf=\"f.addOrRemove.touched && f.addOrRemove.invalid\" class=\"alert alert-danger\">\r\n                <div *ngIf=\"f.addOrRemove.errors.required\">Add or Remove is required.</div>\r\n            </div>\r\n        </div>\r\n\r\n        <button class=\"btn btn-primary\" type=\"submit\" [disabled]=\"!form.valid\">Edit Permission</button>\r\n    </form>\r\n    <div *ngIf=\"managePermissionsFailed == true\">\r\n        <div class=\"form-signin-heading\" style=\"color:red;\">{{MessageToUser}}</div>\r\n    </div>\r\n</div>\r\n","<!DOCTYPE html>\n<html>\n<head>\n    <meta charset=\"utf-8\">\n    <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\">\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\n    <title>Manage purchase policies page</title>\n    <link href=\"https://fonts.googleapis.com/css?family=Roboto:300,400\" rel=\"stylesheet\">\n</head>\n<body>\n    <h2>Purchase policies in {{storeName}}</h2>\n    <hr class=\"spacer\">\n    <div *ngIf=\"purchasePolicies?.length > 0\">\n        <div *ngFor=\"let purchasePolicy of purchasePolicies\">\n            <hr class=\"spacer\">\n            <h3>{{purchasePolicy.Description}}</h3>\n        </div>\n    </div>\n    <div *ngIf=\"actionFailed0 == true\">\n        <div class=\"form-signin-heading\" style=\"color:red;\">{{messageToUser}}</div>\n    </div>\n    <hr class=\"spacer\">\n    <button (click)=\"AddItemMinMaxPurchasePolicy()\">Add item min max purchase policy</button>\n    <hr class=\"spacer\">\n    <button (click)=\"AddStoreMinMaxPurchasePolicy()\">Add store min max purchase policy</button>\n    <hr class=\"spacer\">\n    <button (click)=\"AddDaysNotAllowedPurchasePolicy()\">Add days not allowed purchase policy</button>\n    <hr class=\"spacer\">\n    <div class=\"container\">\n        <h3>Compose 2 purchase policies</h3>\n        <form [formGroup]=\"formPurchasePolicyComposite\" (ngSubmit)=\"ComposeTwoPurchasePolicies()\">\n            <hr class=\"spacer\">\n            <h3>Choose left purchase policy</h3>\n            <div class=\"form-group\">\n                <select formControlName=\"formPurchasePolicyLeft\" required>\n                    <option *ngFor=\"let purchasePolicy of purchasePolicies\" [ngValue]=\"purchasePolicy\">{{purchasePolicy.Description}}</option>\n                </select>\n            </div>\n            <hr class=\"spacer\">\n            <h3>Choose right purchase policy</h3>\n            <div class=\"form-group\">\n                <select formControlName=\"formPurchasePolicyRight\" required>\n                    <option *ngFor=\"let purchasePolicy of purchasePolicies\" [ngValue]=\"purchasePolicy\">{{purchasePolicy.Description}}</option>\n                </select>\n            </div>\n            <hr class=\"spacer\">\n            <h3>Choose operator of the composite</h3>\n            <div class=\"form-group\">\n                <select formControlName=\"formOperator\" required>\n                    <option *ngFor=\"let operator of operatorsForComopsite\" [ngValue]=\"operator\">{{operator}}</option>\n                </select>\n            </div>\n            <button class=\"btn btn-primary\" type=\"submit\">Submit</button>\n        </form>\n        <div *ngIf=\"actionFailed1 == true\">\n            <div class=\"form-signin-heading\" style=\"color:red;\">{{messageToUser}}</div>\n        </div>\n    </div>\n    <!--Spacer-->\n    <hr class=\"spacer\">\n    <!--Spacer-->\n    <div class=\"container\">\n        <h3>Choose purchase policy to delete</h3>\n        <form [formGroup]=\"formDelete\" (ngSubmit)=\"DeletePurchasePolicy()\">\n            <div class=\"form-group\">\n                <select formControlName=\"formDelete\">\n                    <option *ngFor=\"let purchasePolicy of purchasePolicies\" [ngValue]=\"purchasePolicy\">{{purchasePolicy.Description}}</option>\n                </select>\n            </div>\n\n            <button class=\"btn btn-primary\" type=\"submit\">Submit</button>\n        </form>\n        <div *ngIf=\"actionFailed2 == true\">\n            <div class=\"form-signin-heading\" style=\"color:red;\">{{messageToUser}}</div>\n        </div>\n    </div>\n    <hr class=\"spacer\">\n    <button (click)=\"backToManagePurchases()\">Back To Manage purchases</button>\n</body>\n</html>\n","import { Component, OnInit } from '@angular/core';\nimport { Router, ActivatedRoute } from \"@angular/router\";\nimport { PurchasePolicy, RemovePurchasePolicyBodyRequest, ComposeTwoPurchasePoliciesBodyRequest } from '../contracts.service';\nimport { HttpRequestService, JsonParsed } from '../http-request.service';\nimport { FormGroup, FormControl, Validators } from '@angular/forms';\n\n@Component({\n  selector: 'app-manage-purchase-policies',\n  templateUrl: './manage-purchase-policies.component.html',\n  styleUrls: ['./manage-purchase-policies.component.css']\n})\nexport class ManagePurchasePoliciesComponent implements OnInit {\n    storeName: string;\n    storeid: string;\n    purchasePolicies: PurchasePolicy[];\n    actionFailed1: boolean;\n    actionFailed2: boolean;\n    actionFailed0: boolean;\n    messageToUser: string;\n    operatorsForComopsite = [\"&\", \"|\", \"xor\"];\n    formDelete = new FormGroup({\n        formDelete: new FormControl('', Validators.required)\n    });\n\n    formPurchasePolicyComposite = new FormGroup({\n        formPurchasePolicyLeft: new FormControl('', Validators.required),\n        formPurchasePolicyRight: new FormControl('', Validators.required),\n        formOperator: new FormControl('', Validators.required),\n    });\n\n    constructor(private httpService: HttpRequestService, private router: ActivatedRoute, private routerPurchasePolicies: Router) {\n        this.storeName = \"\";\n        this.storeid = \"\";\n        this.actionFailed0 = false;\n        this.actionFailed1 = false;\n        this.actionFailed2 = false;\n        this.messageToUser = \"\";\n        this.purchasePolicies = [];\n    }\n\n    async ngOnInit(): Promise<void> {\n        this.storeid = this.router.snapshot.paramMap.get('storeid');\n        this.storeName = this.router.snapshot.paramMap.get('storeName');\n        let params: Map<string, string> = new Map();\n        params.set(\"storeid\", this.storeid);\n\n        let dataPurchasePolicies: JsonParsed = await this.httpService.getWithParamsAsync('api/store/GetAllPurchasePolicys', params);\n        if (dataPurchasePolicies.Success) {\n            this.purchasePolicies = JSON.parse(dataPurchasePolicies.AnswerOrExceptionJson);\n\n        }\n        else {\n            let response = JSON.parse(dataPurchasePolicies.AnswerOrExceptionJson);\n            if (response) {\n                this.actionFailed0 = true;\n                this.messageToUser = response.Message;\n            }\n        }\n    }\n\n    AddItemMinMaxPurchasePolicy() {\n        this.routerPurchasePolicies.navigate(['/home/' + this.storeid + '/storeManagment/AddItemMinMaxPurchasePolicy', { 'storeName': this.storeName }]);\n    }\n\n    AddStoreMinMaxPurchasePolicy() {\n        this.routerPurchasePolicies.navigate(['/home/' + this.storeid + '/storeManagment/AddStoreMinMaxPurchasePolicy', { 'storeName': this.storeName }]);\n    }\n\n    AddDaysNotAllowedPurchasePolicy() {\n        this.routerPurchasePolicies.navigate(['/home/' + this.storeid + '/storeManagment/AddDaysNotAllowedPurchasePolicy', { 'storeName': this.storeName }]);\n    }\n\n    ComposeTwoPurchasePolicies() {\n        let compositeRequest: ComposeTwoPurchasePoliciesBodyRequest = {\n            StoreID: this.storeid,\n            PolicyLeftID: this.formPurchasePolicyComposite.get('formPurchasePolicyLeft').value.PolicyID,\n            PolicyRightID: this.formPurchasePolicyComposite.get('formPurchasePolicyRight').value.PolicyID,\n            BoolOperator: this.formPurchasePolicyComposite.get('formOperator').value\n        };\n\n        this.httpService.post('api/store/ComposeTwoPurchasePolicies', compositeRequest).subscribe((data: JsonParsed) => {\n            if (data.Success) {\n                window.alert('The purchase policies have been composed');\n                this.routerPurchasePolicies.navigateByUrl('/RefreshComponent', { skipLocationChange: true }).then(() =>\n                    this.routerPurchasePolicies.navigate(['/home/' + this.storeid + '/storeManagment/purchasesManagment', { 'storeName': this.storeName }]));\n            } else {\n                this.actionFailed1 = true;\n                let response = JSON.parse(data.AnswerOrExceptionJson);\n                if (response) {\n                    this.messageToUser = response.Message;\n                }\n            }\n        });\n    }\n\n    DeletePurchasePolicy() {\n        let deleteRequest: RemovePurchasePolicyBodyRequest = {\n            StoreID: this.storeid,\n            PolicyID: this.formDelete.get('formDelete').value.PolicyID\n        };\n\n        this.httpService.post('api/store/RemovePurchasePolicy', deleteRequest).subscribe((data: JsonParsed) => {\n            if (data.Success) {\n                window.alert('The purchase policy has been removed from store');\n                this.routerPurchasePolicies.navigateByUrl('/RefreshComponent', { skipLocationChange: true }).then(() =>\n                    this.routerPurchasePolicies.navigate(['/home/' + this.storeid + '/storeManagment/purchasesManagment', { 'storeName': this.storeName }]));\n            } else {\n                this.actionFailed2 = true;\n                let response = JSON.parse(data.AnswerOrExceptionJson);\n                if (response) {\n                    this.messageToUser = response.Message;\n                }\n            }\n        });\n    }\n\n    backToManagePurchases() {\n        this.routerPurchasePolicies.navigate(['/home/' + this.storeid + '/storeManagment/purchasesManagment', { 'storeName': this.storeName }]);\n    }\n\n}\n","import { Component, OnInit } from '@angular/core';\nimport { Router, ActivatedRoute } from \"@angular/router\";\n\n@Component({\n  selector: 'app-manage-purchases',\n  templateUrl: './manage-purchases.component.html',\n  styleUrls: ['./manage-purchases.component.css']\n})\nexport class ManagePurchasesComponent implements OnInit {\n\n    storeName: string;\n    storeid: string;\n\n    constructor(private router: ActivatedRoute, private routerDiscountsManager: Router) { }\n\n    ngOnInit(): void {\n        this.storeName = this.router.snapshot.paramMap.get('storeName');\n        this.storeid = this.router.snapshot.paramMap.get('storeid');\n    }\n\n    manageTypesOfPurchasePolicy() {\n        this.routerDiscountsManager.navigate(['/home/' + this.storeid + '/storeManagment/typesOfPurchasePolicy', { 'storeName': this.storeName }]);\n    }\n\n    managePurchasePolicies() {\n        this.routerDiscountsManager.navigate(['/home/' + this.storeid + '/storeManagment/purchasePolicies', { 'storeName': this.storeName }]);\n    }\n\n    backToStore() {\n        this.routerDiscountsManager.navigateByUrl('/home/' + this.storeid);\n    }\n\n}\n","<!DOCTYPE html>\n<html>\n<head>\n    <meta charset=\"utf-8\">\n    <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\">\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\n    <title>Purchases managment</title>\n    <link href=\"https://fonts.googleapis.com/css?family=Roboto:300,400\" rel=\"stylesheet\">\n</head>\n<body>\n    <h2>Purchase Policy Managment of store {{storeName}}</h2>\n    <hr class=\"spacer\">\n    <button (click)=\"manageTypesOfPurchasePolicy()\">Manage types of purchase policy </button>\n    <hr class=\"spacer\">\n    <button (click)=\"managePurchasePolicies()\">Manage purchase policies </button>\n    <hr class=\"spacer\">\n    <button (click)=\"backToStore()\">Back To The Store</button>\n</body>\n</html>\n","<!DOCTYPE html>\n<html>\n<head>\n    <meta charset=\"utf-8\">\n    <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\">\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\n    <title>purchase policy types managment</title>\n    <link href=\"https://fonts.googleapis.com/css?family=Roboto:300,400\" rel=\"stylesheet\">\n</head>\n<body>\n    <h2>Purchase policy types available in {{storeName}}</h2>\n    <div *ngFor=\"let purchasePolicyTypeAllowed of purchasePolicyTypesAllowed\">\n        <hr class=\"spacer\">\n        <h3>{{purchasePolicyTypeAllowed}}</h3>\n    </div>\n\n    <div *ngIf=\"actionFailed == true\">\n        <div class=\"form-signin-heading\" style=\"color:red;\">{{messageToUser}}</div>\n    </div>\n    <!--Spacer-->\n    <hr class=\"spacer\">\n    <!--Spacer-->\n    <div class=\"container\">\n        <h1>Choose purchase policy type to delete</h1>\n\n        <form [formGroup]=\"formDeleteType\" (ngSubmit)=\"deletePurchasePolicyType()\">\n\n            <div class=\"form-group\">\n                <select formControlName=\"formDeleteType\">\n                    <option *ngFor=\"let purchasePolicyTypeAllowedToDelete of purchasePolicyTypesAllowed\" [ngValue]=\"purchasePolicyTypeAllowedToDelete\">{{purchasePolicyTypeAllowedToDelete}}</option>\n                </select>\n            </div>\n\n            <button class=\"btn btn-primary\" type=\"submit\">Submit</button>\n        </form>\n        <div *ngIf=\"actionFailed == true\">\n            <div class=\"form-signin-heading\" style=\"color:red;\">{{messageToUser}}</div>\n        </div>\n    </div>\n    <!--Spacer-->\n    <hr class=\"spacer\">\n    <!--Spacer-->\n    <div class=\"container\">\n        <h1>Choose purchase policy type to add</h1>\n        <form [formGroup]=\"formAddType\" (ngSubmit)=\"addPurchasePolicyType()\">\n\n            <div class=\"form-group\">\n                <select formControlName=\"formAddType\">\n                    <option *ngFor=\"let  purchasePolicyTypeToAdd of possibleTypesToAdd\" [ngValue]=\"purchasePolicyTypeToAdd\">{{purchasePolicyTypeToAdd}}</option>\n                </select>\n            </div>\n\n            <button class=\"btn btn-primary\" type=\"submit\">Submit</button>\n        </form>\n        <div *ngIf=\"actionFailed == true\">\n            <div class=\"form-signin-heading\" style=\"color:red;\">{{messageToUser}}</div>\n        </div>\n    </div>\n    <hr class=\"spacer\">\n    <button (click)=\"backToManagePurchases()\">Back To Manage purchases</button>\n</body>\n</html>\n\n","import { Component, OnInit } from '@angular/core';\nimport { Router, ActivatedRoute } from \"@angular/router\";\nimport { HttpRequestService, JsonParsed } from '../http-request.service';\nimport { FormGroup, FormControl, Validators } from '@angular/forms';\nimport { MakePurchasePolicyNotAllowedBodyRequest, MakePurchasePolicyAllowedBodyRequest } from '../contracts.service';\n\n@Component({\n  selector: 'app-manage-types-of-purchase-policy',\n  templateUrl: './manage-types-of-purchase-policy.component.html',\n  styleUrls: ['./manage-types-of-purchase-policy.component.css']\n})\nexport class ManageTypesOfPurchasePolicyComponent implements OnInit {\n    purchasePolicyTypesAllowed: string[];\n    storeName: string;\n    storeid: string;\n    actionFailed: boolean;\n    messageToUser: string;\n    allTypesOfPurchasePolicy: string[] = [\n        \"ITEM\", \"STORE\", \"DAYS\", \"COMPOSITE\"\n    ];\n\n    possibleTypesToAdd: string[];\n\n    formDeleteType = new FormGroup({\n        formDeleteType: new FormControl('', Validators.required),\n    });\n\n    formAddType = new FormGroup({\n        formAddType: new FormControl('', Validators.required),\n    });\n\n\n    constructor(private httpService: HttpRequestService, private router: ActivatedRoute,\n        private routerPurchasePolicyTypes: Router)\n    {\n        this.purchasePolicyTypesAllowed = [];\n        this.storeName = \"\";\n        this.storeid = \"\";\n        this.actionFailed = false;\n        this.messageToUser = \"\";\n        this.possibleTypesToAdd = [];\n    }\n\n    async ngOnInit(): Promise<void> {\n        this.possibleTypesToAdd = [];\n        this.storeid = this.router.snapshot.paramMap.get('storeid');\n        this.storeName = this.router.snapshot.paramMap.get('storeName');\n\n        let params: Map<string, string> = new Map();\n        params.set(\"storeid\", this.storeid);\n        let response: JsonParsed = await this.httpService.getWithParamsAsync('api/store/GetAllowedPurchasePolicys', params);\n        if (response.Success) {\n            this.purchasePolicyTypesAllowed = JSON.parse(response.AnswerOrExceptionJson);\n            this.allTypesOfPurchasePolicy.forEach(type => {\n                if (!this.purchasePolicyTypesAllowed.includes(type)) {\n                    this.possibleTypesToAdd.push(type);\n                }\n            });\n        }\n        else {\n            let error = JSON.parse(response.AnswerOrExceptionJson);\n            if (error) {\n                this.actionFailed = true;\n                this.messageToUser = error.Message;\n                return;\n            }\n        }\n    }\n\n    deletePurchasePolicyType() {\n        let deleteTypeRequest: MakePurchasePolicyNotAllowedBodyRequest = {\n            StoreID: this.storeid,\n            PurchasePolicy: this.formDeleteType.get('formDeleteType').value\n        };\n\n        this.httpService.post('api/store/MakePurcahsePolicyNotAllowed', deleteTypeRequest).subscribe((data: JsonParsed) => {\n            if (data.Success) {\n                window.alert('The purchase policy type has been removed from store');\n                this.routerPurchasePolicyTypes.navigateByUrl('/RefreshComponent', { skipLocationChange: true }).then(() => {\n                    this.routerPurchasePolicyTypes.navigate(['/home/' + this.storeid + '/storeManagment/purchasesManagment', { 'storeName': this.storeName }]);\n                });\n            } else {\n                this.actionFailed = true;\n                let response = JSON.parse(data.AnswerOrExceptionJson);\n                if (response) {\n                    this.messageToUser = response.Message;\n                }\n            }\n        });\n    }\n\n    addPurchasePolicyType() {\n        let addTypeRequest: MakePurchasePolicyAllowedBodyRequest = {\n            StoreID: this.storeid,\n            PurchasePolicy: this.formAddType.get('formAddType').value\n        };\n\n        this.httpService.post('api/store/MakePurcahsePolicyAllowed', addTypeRequest).subscribe((data: JsonParsed) => {\n            if (data.Success) {\n                window.alert('The purchase policy type has been added to store');\n                this.routerPurchasePolicyTypes.navigateByUrl('/RefreshComponent', { skipLocationChange: true }).then(() => {\n                    this.routerPurchasePolicyTypes.navigate(['/home/' + this.storeid + '/storeManagment/purchasesManagment', { 'storeName': this.storeName }]);\n                });\n            } else {\n                this.actionFailed = true;\n                let response = JSON.parse(data.AnswerOrExceptionJson);\n                if (response) {\n                    this.messageToUser = response.Message;\n                }\n            }\n        });\n    }\n\n    backToManagePurchases() {\n        this.routerPurchasePolicyTypes.navigate(['/home/' + this.storeid + '/storeManagment/purchasesManagment', { 'storeName': this.storeName }]);\n    }\n\n}\n","import { Component, OnInit } from '@angular/core';\nimport { Router } from \"@angular/router\";\nimport { HttpRequestService, JsonParsed } from '../http-request.service';\n\n@Component({\n    selector: 'app-open-store',\n    templateUrl: './open-store.component.html',\n    styleUrls: ['./open-store.component.css']\n})\nexport class OpenStoreComponent implements OnInit {\n    openStoreFailed: boolean;\n    MessageToUser: string;\n\n    constructor(\n        private router: Router,\n        private httpService: HttpRequestService, )\n    {\n        this.openStoreFailed = false;\n        this.MessageToUser = '';\n    }\n\n    ngOnInit(): void {\n    }\n\n    onSubmit(storeData) {\n        this.httpService.post('api/store/OpenStore', storeData).subscribe((data: JsonParsed) => {\n            if (data.Success) {\n                this.router.navigateByUrl('/home');\n            } else {\n                this.openStoreFailed = true;\n                let response = JSON.parse(data.AnswerOrExceptionJson);\n                if (response) {\n                    this.MessageToUser = response.Message;\n                }\n            }\n        });\n    }\n}\n","<!DOCTYPE html>\r\n<html>\r\n<head>\r\n    <meta charset=\"utf-8\">\r\n    <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\">\r\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\r\n    <title>Custom Bootstrap Login Page</title>\r\n    <link href=\"https://fonts.googleapis.com/css?family=Roboto:300,400\" rel=\"stylesheet\">\r\n</head>\r\n<body>\r\n    <div class=\"container\">\r\n        <form #openStoreForm=\"ngForm\" (ngSubmit)=\"onSubmit(openStoreForm.value)\" class=\"form-signin\">\r\n            <h2 class=\"form-signin-heading\">Open Store</h2>\r\n            <label for=\"name\" class=\"sr-only\">Store Name</label>\r\n            <input type=\"text\" name=\"name\" class=\"form-control\" placeholder=\"Store Name\" required autofocus ngModel>\r\n            <!--Spacer-->\r\n            <hr class=\"spacer\">\r\n            <!--Spacer-->\r\n            <label for=\"email\" class=\"sr-only\">Email Address</label>\r\n            <input type=\"email\" name=\"email\" class=\"form-control\" placeholder=\"Email Address\" required autofocus ngModel>\r\n            <!--Spacer-->\r\n            <hr class=\"spacer\">\r\n            <!--Spacer-->\r\n            <label for=\"address\" class=\"sr-only\">Store Address</label>\r\n            <input type=\"text\" name=\"address\" class=\"form-control\" placeholder=\"Store Address\" required autofocus ngModel>\r\n            <!--Spacer-->\r\n            <hr class=\"spacer\">\r\n            <!--Spacer-->\r\n            <label for=\"phone\" class=\"sr-only\">Phone Number</label>\r\n            <input type=\"tel\" name=\"phone\" pattern=\"[0]{1}[1-9]{1}-[0-9]{6}\" class=\"form-control\" placeholder=\"Phone Number\" required autofocus ngModel>\r\n            <!--Spacer-->\r\n            <hr class=\"spacer\">\r\n            <!--Spacer-->\r\n            <label for=\"bankAccountNumber\" class=\"sr-only\">Bank Account</label>\r\n            <input type=\"text\" name=\"bankAccountNumber\" class=\"form-control\" placeholder=\"Bank Account\" required autofocus ngModel>\r\n            <!--Spacer-->\r\n            <hr class=\"spacer\">\r\n            <!--Spacer-->\r\n            <label for=\"bank\" class=\"sr-only\">Bank Name</label>\r\n            <input type=\"text\" name=\"bank\" class=\"form-control\" placeholder=\"Bank Name\" required autofocus ngModel>\r\n            <!--Spacer-->\r\n            <hr class=\"spacer\">\r\n            <!--Spacer-->\r\n            <label for=\"description\" class=\"sr-only\">Description</label>\r\n            <input type=\"text\" name=\"description\" class=\"form-control\" placeholder=\"Description\" required autofocus ngModel>\r\n            <button class=\"btn btn-lg btn-primary btn-block\" type=\"submit\">Open Store</button>\r\n        </form>\r\n        <div *ngIf=\"openStoreFailed == true\">\r\n            <div class=\"form-signin-heading\" style=\"color:red;\">{{MessageToUser}}</div>\r\n        </div>\r\n    </div> <!-- /container -->\r\n</body>\r\n</html>\r\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-refresh-component',\n  templateUrl: './refresh-component.component.html',\n  styleUrls: ['./refresh-component.component.css']\n})\nexport class RefreshComponentComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<p>refresh-component works!</p>\n","import { Component, OnInit, ChangeDetectorRef } from '@angular/core';\nimport { Router } from \"@angular/router\";\nimport { HttpRequestService, JsonParsed } from '../http-request.service';\n\n@Component({\n  selector: 'app-register',\n  templateUrl: './register.component.html',\n  styleUrls: ['./register.component.css']\n})\nexport class RegisterComponent implements OnInit {\n    registerFailed: boolean;\n    MessageToUser: string;\n\n  constructor(\n      private _cdr: ChangeDetectorRef,\n      private router: Router,\n      private httpService: HttpRequestService,\n  ) {\n      this.registerFailed = false;\n      this.MessageToUser = '';\n  }\n\n  ngOnInit(): void {\n  }\n\n    onSubmit(customerData) {\n        this.httpService.post('api/user/Register', customerData).subscribe((data: JsonParsed) => {\n            if (data.Success) {\n              this.router.navigateByUrl('/login');\n          } else {\n                this.registerFailed = true;\n                let response = JSON.parse(data.AnswerOrExceptionJson);\n                if (response) {\n                    this.MessageToUser = response.Message;\r\n                }\n          }\n      });\n  }\n\n    changeStatus(): void {\n        setTimeout(() => {\n            this.registerFailed = false;\n            this.MessageToUser = '';\n            this._cdr.detectChanges()\n        }, 1000);\n    }\n}\n\n\n\n","<!DOCTYPE html>\r\n<html>\r\n<head>\r\n  <meta charset=\"utf-8\">\r\n  <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\">\r\n  <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\r\n  <title>Custom Bootstrap Login Page</title>\r\n  <link href=\"https://fonts.googleapis.com/css?family=Roboto:300,400\" rel=\"stylesheet\">\r\n</head>\r\n<body>\r\n    <div class=\"container\">\r\n        <form #loginForm=\"ngForm\" (ngSubmit)=\"onSubmit(loginForm.value)\" class=\"form-signin\">\r\n            <h2 class=\"form-signin-heading\">Register</h2>\r\n            <label for=\"username\" class=\"sr-only\">Username</label>\r\n            <input type=\"text\" name=\"username\" class=\"form-control\" placeholder=\"Username\" required autofocus ngModel>\r\n            <!--Spacer-->\r\n            <hr class=\"spacer\">\r\n            <!--Spacer-->\r\n            <label for=\"password\" class=\"sr-only\">Password</label>\r\n            <input type=\"password\" name=\"password\" class=\"form-control\" placeholder=\"Password\" required ngModel>\r\n            <button class=\"btn btn-lg btn-primary btn-block\" type=\"submit\">Register</button>\r\n        </form>\r\n        <div *ngIf=\"registerFailed == true\">\r\n            <div class=\"form-signin-heading\" style=\"color:red;\">{{MessageToUser}}</div>\r\n        </div>\r\n    </div> <!-- /container -->\r\n</body>\r\n</html>\r\n","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, Router } from \"@angular/router\";\nimport { HttpRequestService, JsonParsed } from '../http-request.service';\nimport { AppointOrRemoveOwnerOrManagerBodyRequest, MyStore } from '../contracts.service';\n\n@Component({\n  selector: 'app-remove-store-manager',\n  templateUrl: './remove-store-manager.component.html',\n  styleUrls: ['./remove-store-manager.component.css']\n})\nexport class RemoveStoreManagerComponent implements OnInit {\n    removeStoreManagerFailed: boolean;\n    MessageToUser: string;\n    storeId: string;\n    StoreName: string;\n\n    constructor(\n        private router: ActivatedRoute,\n        private routerAppoint: Router,\n        private httpService: HttpRequestService,\n    ) {\n        this.removeStoreManagerFailed = false;\n        this.MessageToUser = '';\n    }\n\n    ngOnInit(): void {\n        this.storeId = this.router.snapshot.paramMap.get('storeid');\n        this.StoreName = this.router.snapshot.paramMap.get('storeName');\n    }\n\n    onSubmit(customerData) {\n        let appointOwnerRequst: AppointOrRemoveOwnerOrManagerBodyRequest =\n        {\n            StoreId: this.storeId,\n            Username: customerData.username\n        }\n\n        this.httpService.post('api/store/RemoveManager', appointOwnerRequst).subscribe((data: JsonParsed) => {\n            if (data.Success) {\n                this.routerAppoint.navigateByUrl('/home/' + this.storeId);\n            } else {\n                this.removeStoreManagerFailed = true;\n                let response = JSON.parse(data.AnswerOrExceptionJson);\n                if (response) {\n                    this.MessageToUser = response.Message;\n                }\n            }\n        });\n    }\n\n}\n","<!DOCTYPE html>\r\n<html>\r\n<head>\r\n    <meta charset=\"utf-8\">\r\n    <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\">\r\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\r\n    <title>Custom Bootstrap Login Page</title>\r\n    <link href=\"https://fonts.googleapis.com/css?family=Roboto:300,400\" rel=\"stylesheet\">\r\n</head>\r\n<body>\r\n    <div class=\"container\">\r\n        <form #removeManagerForm=\"ngForm\" (ngSubmit)=\"onSubmit(removeManagerForm.value)\" class=\"form-signin\">\r\n            <h2 class=\"form-signin-heading\">Remove Store Manager From Store: {{ StoreName }}</h2>\r\n            <!--Spacer-->\r\n            <hr class=\"spacer\">\r\n            <!--Spacer-->\r\n            <label for=\"username\" class=\"sr-only\">UserName</label>\r\n            <input type=\"text\" name=\"username\" class=\"form-control\" placeholder=\"UserName\" required autofocus ngModel>\r\n            <button class=\"btn btn-lg btn-primary btn-block\" type=\"submit\">Remove Store Manager</button>\r\n        </form>\r\n        <div *ngIf=\"removeStoreManagerFailed == true\">\r\n            <div class=\"form-signin-heading\" style=\"color:red;\">{{MessageToUser}}</div>\r\n        </div>\r\n    </div> <!-- /container -->\r\n</body>\r\n</html>\r\n","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, Router } from \"@angular/router\";\nimport { HttpRequestService, JsonParsed } from '../http-request.service';\nimport { AppointOrRemoveOwnerOrManagerBodyRequest, MyStore } from '../contracts.service';\n\n@Component({\n  selector: 'app-remove-store-owner',\n  templateUrl: './remove-store-owner.component.html',\n  styleUrls: ['./remove-store-owner.component.css']\n})\nexport class RemoveStoreOwnerComponent implements OnInit {\n    removeStoreOwnerFailed: boolean;\n    MessageToUser: string;\n    storeId: string;\n    StoreName: string;\n\n    constructor(\n        private router: ActivatedRoute,\n        private routerAppoint: Router,\n        private httpService: HttpRequestService,\n    ) {\n        this.removeStoreOwnerFailed = false;\n        this.MessageToUser = '';\n    }\n\n  ngOnInit(): void {\n      this.storeId = this.router.snapshot.paramMap.get('storeid');\n      this.StoreName = this.router.snapshot.paramMap.get('storeName');\n    }\n\n    onSubmit(customerData) {\n        let appointOwnerRequst: AppointOrRemoveOwnerOrManagerBodyRequest =\n        {\n            StoreId: this.storeId,\n            Username: customerData.username\n        }\n\n        this.httpService.post('api/store/RemoveOwner', appointOwnerRequst).subscribe((data: JsonParsed) => {\n            if (data.Success) {\n                this.routerAppoint.navigateByUrl('/home/' + this.storeId);\n            } else {\n                this.removeStoreOwnerFailed = true;\n                let response = JSON.parse(data.AnswerOrExceptionJson);\n                if (response) {\n                    this.MessageToUser = response.Message;\n                }\n            }\n        });\n    }\n\n}\n","<!DOCTYPE html>\r\n<html>\r\n<head>\r\n    <meta charset=\"utf-8\">\r\n    <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\">\r\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\r\n    <title>Custom Bootstrap Login Page</title>\r\n    <link href=\"https://fonts.googleapis.com/css?family=Roboto:300,400\" rel=\"stylesheet\">\r\n</head>\r\n<body>\r\n    <div class=\"container\">\r\n        <form #removeOwnerForm=\"ngForm\" (ngSubmit)=\"onSubmit(removeOwnerForm.value)\" class=\"form-signin\">\r\n            <h2 class=\"form-signin-heading\">Remove Store Owner From Store: {{ StoreName }}</h2>\r\n            <!--Spacer-->\r\n            <hr class=\"spacer\">\r\n            <!--Spacer-->\r\n            <label for=\"username\" class=\"sr-only\">UserName</label>\r\n            <input type=\"text\" name=\"username\" class=\"form-control\" placeholder=\"UserName\" required autofocus ngModel>\r\n            <button class=\"btn btn-lg btn-primary btn-block\" type=\"submit\">Remove Store Owner</button>\r\n        </form>\r\n        <div *ngIf=\"removeStoreOwnerFailed == true\">\r\n            <div class=\"form-signin-heading\" style=\"color:red;\">{{MessageToUser}}</div>\r\n        </div>\r\n    </div> <!-- /container -->\r\n</body>\r\n</html>\r\n","<!DOCTYPE html>\n<html>\n<head>\n    <meta charset=\"utf-8\">\n    <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\">\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\n    <title>Search Item Results</title>\n    <link href=\"https://fonts.googleapis.com/css?family=Roboto:300,400\" rel=\"stylesheet\">\n</head>\n<body>\n    <div *ngFor=\"let StoreName of Object.keys(itemsByStoreName)\">\n        <h2>Store name: {{ StoreName }}</h2>\n\n        <div *ngFor=\"let item of itemsByStoreName[StoreName]\">\n            <div *ngIf=\" item\">\n                <a routerLink='/home/{{ item.StoreId }}/{{ item.Id }}'> <h2>{{ item.Name }}</h2></a>\n                <p>{{ item.Price | currency:\"ILS\" }}</p>\n            </div>\n        </div>\n    </div>\n    <div *ngIf=\"searchFailed == true\">\n        <div class=\"form-signin-heading\" style=\"color:red;\">{{messageToUser}}</div>\n    </div>\n</body>\n</html>\n","import { Component, OnInit } from '@angular/core';\nimport { Router, ActivatedRoute } from \"@angular/router\";\nimport { MyStore} from '../contracts.service';\nimport { HttpRequestService, JsonParsed } from '../http-request.service';\n\n@Component({\n  selector: 'app-search-results',\n  templateUrl: './search-results.component.html',\n  styleUrls: ['./search-results.component.css']\n})\nexport class SearchResultsComponent implements OnInit {\n    itemName: string;\n    filterItemRank: string;\n    filterMinPrice: string;\n    filterMaxPrice: string;\n    filterStoreRank: string;\n    category: string;\n    keywords: string;\n    itemsByStoreName;\n    searchFailed: boolean;\n    messageToUser: string;\n    messageNoResults: string;\n    Object = Object;\n\n    constructor(private httpService: HttpRequestService, private router: ActivatedRoute) {\n        this.itemName = null;\n        this.filterItemRank = null;\n        this.filterMinPrice = null;\n        this.filterMaxPrice = null;\n        this.filterStoreRank = null;\n        this.category = null;\n        this.keywords = null;\n        this.searchFailed = false;\n        this.messageToUser = '';\n        this.itemsByStoreName = {};\n    }\n\n    async ngOnInit(): Promise<void> {\n        this.itemName = this.router.snapshot.paramMap.get('itemName');\n        this.filterItemRank = this.router.snapshot.paramMap.get('filterItemRank');\n        this.filterMinPrice = this.router.snapshot.paramMap.get('filterMinPrice');\n        this.filterMaxPrice = this.router.snapshot.paramMap.get('filterMaxPrice');\n        this.filterStoreRank = this.router.snapshot.paramMap.get('filterStoreRank');\n        this.category = this.router.snapshot.paramMap.get('category');\n        let keywordsAsString = this.router.snapshot.paramMap.get('keywords');\n        if (keywordsAsString) {\n            this.keywords = JSON.stringify(keywordsAsString.split(','));\n        }\n        else {\n            this.keywords = keywordsAsString;\n        }\n\n        let params: Map<string, string> = new Map();\n\n        if (this.itemName && this.itemName.length > 0) {\n            params.set(\"itemName\", this.itemName);\n        }\n\n        if (this.filterItemRank && this.filterItemRank.length > 0) {\n            params.set(\"filterItemRank\", this.filterItemRank);\n        }\n        else {\n            params.set(\"filterItemRank\", null);\n        }\n\n        if (this.filterMinPrice && this.filterMinPrice.length > 0) {\n            params.set(\"filterMinPrice\", this.filterMinPrice);\n        }\n        else {\n            params.set(\"filterMinPrice\", null);\n        }\n\n        if (this.filterMaxPrice && this.filterMaxPrice.length > 0) {\n            params.set(\"filterMaxPrice\", this.filterMaxPrice);\n        }\n        else {\n            params.set(\"filterMaxPrice\", null);\n        }\n\n        if (this.filterStoreRank && this.filterStoreRank.length > 0) {\n            params.set(\"filterStoreRank\", this.filterStoreRank);\n        }\n        else {\n            params.set(\"filterStoreRank\", null);\n        }\n\n        if (this.category && this.category.length > 0) {\n            params.set(\"category\", this.category);\n        }\n\n        if (this.keywords && this.keywords.length > 0) {\n            params.set(\"keywords\", this.keywords);\n        }\n\n        params.set(\"filterItemRank\", this.filterItemRank);\n        params.set(\"filterMinPrice\", this.filterMinPrice);\n        params.set(\"filterMaxPrice\", this.filterMaxPrice);\n        params.set(\"filterStoreRank\", this.filterStoreRank);\n\n        let dataSearch: JsonParsed = await this.httpService.getWithParamsAsync('api/store/SearchItems', params);\n        if (dataSearch.Success) {\n            let results = JSON.parse(dataSearch.AnswerOrExceptionJson);\n            for (var key in results) {\n                let paramsForStoreDetails: Map<string, string> = new Map();\n                paramsForStoreDetails.set('storeid', key);\n                let dataStore: JsonParsed = await this.httpService.getWithParamsAsync('api/store/GetStoreInformationByID', paramsForStoreDetails);\n                if (dataStore.Success) {\n                        let store: MyStore = JSON.parse(dataStore.AnswerOrExceptionJson);\n                        let name = store.ContactDetails.Name;\n                        this.itemsByStoreName[name] = results[key];\n                 }\n                else {\n                    let response = JSON.parse(dataStore.AnswerOrExceptionJson);\n                    if (response) {\n                        this.searchFailed = true;\n                        this.messageToUser = response.Message;\n                        return;\n                    }\n                }\n            }\n\n            if (Object.keys(results).length === 0 && results.constructor === Object) {\n                this.searchFailed = true;\n                this.messageToUser = \"we are very sorry but we didn't find what you are looking for\";\n            }\n\n        } else {\n            this.searchFailed = true;\n            let response = JSON.parse(dataSearch.AnswerOrExceptionJson);\n            if (response) {\n                this.messageToUser = response.Message;\n            }\n        }\n  }\n\n}\n","<!DOCTYPE html>\n<html>\n<head>\n    <meta charset=\"utf-8\">\n    <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\">\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\n    <title>Custom Bootstrap Login Page</title>\n    <link href=\"https://fonts.googleapis.com/css?family=Roboto:300,400\" rel=\"stylesheet\">\n</head>\n<body>\n    <!--Div that will hold the pie chart-->\n    <div id=\"chart_div\"></div>\n    <h2>Enter relevant Dates For Statistics</h2>\n    <div class=\"container\">\n        <mat-form-field>\n            <mat-label>Date From</mat-label>\n            <input matInput [matDatepicker]=\"pickerFrom\"\n                   (dateInput)=\"ChangeDateFrom($event,pickerFrom)\" (dateChange)=\"ChangeDateFrom($event,pickerFrom)\">\n            <mat-datepicker-toggle matSuffix [for]=\"pickerFrom\"></mat-datepicker-toggle>\n            <mat-datepicker #pickerFrom></mat-datepicker>\n        </mat-form-field>\n        <mat-form-field>\n            <mat-label>Date To</mat-label>\n            <input matInput [matDatepicker]=\"pickerTo\"\n                   (dateInput)=\"ChangeDateTo($event,pickerTo)\" (dateChange)=\"ChangeDateTo($event,pickerTo)\">\n            <mat-datepicker-toggle matSuffix [for]=\"pickerTo\"></mat-datepicker-toggle>\n            <mat-datepicker #pickerTo></mat-datepicker>\n        </mat-form-field>\n        <form [formGroup]=\"selectUsers\" (ngSubmit)=\"onSubmit()\">\n            <!--Spacer-->\n            <hr class=\"spacer\">\n            <!--Spacer-->\n            <label for=\"statisticsUser\" class=\"sr-only\">Select User for statistics</label>\n            <p>\n                <input type=\"checkbox\" formControlName=\"Guests\">Guests\n            </p>\n            <p>\n                <input type=\"checkbox\" formControlName=\"Registered\">Registered\n            </p>\n            <p>\n                <input type=\"checkbox\" formControlName=\"Managers\">Managers\n            </p>\n            <p>\n                <input type=\"checkbox\" formControlName=\"Owners\">Owners\n            </p>\n            <p>\n                <input type=\"checkbox\" formControlName=\"Admins\">Admins\n            </p>\n            <!--Spacer-->\n            <hr class=\"spacer\">\n            <!--Spacer-->\n            <button class=\"btn btn-lg btn-primary btn-block\" type=\"submit\">Select</button>\n        </form>\n        <google-chart [type]=\"myType\" [data]=\"myData\" [title]=\"myTitle\" [columns]=\"mycolumnNames\" [height]=\"myHeight\" style=\"width: 100%;\"></google-chart>\n\n        <div *ngIf=\"permission == false\">\n            <div class=\"form-signin-heading\" style=\"color:red;\">Action Faild: Don't have the right permission</div>\n        </div>\n    </div> <!-- /container -->\n</body>\n</html>\n","import { Component, OnInit } from '@angular/core';\nimport { Router, ActivatedRoute } from \"@angular/router\";\nimport { HttpRequestService, JsonParsed } from '../http-request.service';\nimport { Order, DateForStatisticsReqBody } from '../contracts.service';\nimport { FormGroup, FormControl } from '@angular/forms';\nimport { MomentDateAdapter, MAT_MOMENT_DATE_ADAPTER_OPTIONS } from '@angular/material-moment-adapter';\nimport { DateAdapter, MAT_DATE_FORMATS, MAT_DATE_LOCALE } from '@angular/material/core';\nimport { MatDatepicker } from '@angular/material/datepicker';\nimport * as _moment from 'moment';\nimport { GoogleChartsModule } from 'angular-google-charts';\nimport { MatMomentDateModule } from '@angular/material-moment-adapter';\nimport { MatDatepickerModule } from '@angular/material/datepicker';\nimport { default as _rollupMoment, Moment } from 'moment';\nimport {MatDatepickerInputEvent} from '@angular/material/datepicker';\n\n\nconst moment = _rollupMoment || _moment;\n\n@Component({\n  selector: 'app-show-statistics',\n  templateUrl: './show-statistics.component.html',\n  styleUrls: ['./show-statistics.component.css'],\n  providers: [  \n    MatDatepickerModule,  \n  ],\n})\nexport class ShowStatisticsComponent implements OnInit {\n\nmyData=[];\nmyType='';\ncolumnNames;\nmyWidth='600';\nmyHeight='400';\n  permission : boolean;\n  actionFailed: boolean;\n  messageToUser: string;\n  statisticsByUsers: { [key: string]: number[] };\n  datefrom = new FormControl(moment());\n  dateto = null;\n  mycolumnNames=['Date','Guests','Registered','Managers','Owners','Admins'];\n  myTitle='Statistics for WebSite';\n  dropdownList = [];\n  selectedItems = [];\n  dropdownSettings: any = {};\n  selectedDays: any[] = [];\n\n        selectUsers = new FormGroup({\n        Guests: new FormControl(),\n        Registered: new FormControl(),\n        Managers: new FormControl(),\n        Owners: new FormControl(),\n        Admins: new FormControl()\n    });\n\n    constructor(private httpService: HttpRequestService,       private router: Router,) {\n  this.permission = true;\n  this.actionFailed = true;\n  this.messageToUser='';\n  //this.statisticsByUsers=[]\n}\n\n\n\n  ChangeDateTo(event: any,datepicker: MatDatepicker<Moment>) {\n    this.dateto = new FormControl(moment());\n    const ctrlValueTo = this.dateto.value;\n    ctrlValueTo.set('year',event.target.value.getFullYear());\n    ctrlValueTo.set('month',event.target.value.getMonth());\n    ctrlValueTo.set('date',event.target.value.getDate());\n    this.dateto.setValue(ctrlValueTo);\n    datepicker.close();\n  }\n    ChangeDateFrom(event: any,datepicker: MatDatepicker<Moment>) {\n    const ctrlValueFrom = this.datefrom.value;\n    ctrlValueFrom.set('year',event.target.value.getFullYear());\n    ctrlValueFrom.set('month',event.target.value.getMonth());\n    ctrlValueFrom.set('date',event.target.value.getDate());\n    this.datefrom.setValue(ctrlValueFrom);\n    datepicker.close();\n  }\n  /*\n  */\n\n  ngOnInit(): void {\n\n    /*      this.dropdownList = [\n            { item_id: 1, item_text: 'Guests' },\n            { item_id: 2, item_text: 'Registered' },\n            { item_id: 3, item_text: 'Managers' },\n            { item_id: 4, item_text: 'Owners' },\n            { item_id: 5, item_text: 'Admins' },\n        ];\n        this.selectedUsers = [];\n\n        this.dropdownSettings = {\n            singleSelection: false,\n            idField: 'item_id',\n            textField: 'item_text',\n            selectAllText: 'Select All',\n            unSelectAllText: 'UnSelect All',\n            allowSearchFilter: true\n        };\n    }\n\n    onItemSelect(item: any) {\n        if (!this.selectedDays.includes(item)) {\n\n        }\n        this.selectedDays.push(item);\n        //console.log(item);\n    }\n    onSelectAll(items: any) {\n        //console.log(items);\n    }*/\n}\n  async onSubmit(): Promise<void> {\n\n      /*  let selectedUsers: number[] = [];\n\n        if (this.selectUsers.get('Guests').value) {\n            selectedUsers.push(1);\n        }\n        if (this.selectUsers.get('Registered').value) {\n            selectedUsers.push(2);\n        }\n\n        if (this.selectUsers.get('Managers').value) {\n            selectedUsers.push(3);\n        }\n\n        if (this.selectUsers.get('Owners').value) {\n            selectedUsers.push(4);\n        }\n\n        if (this.selectUsers.get('Admins').value) {\n            selectedUsers.push(5);\n        }*/\n        let statisticsReq: DateForStatisticsReqBody={\n        datefrom: this.datefrom.value.format('L'),\n        dateto: this.dateto.value.format('L')\n        }\n        let params: Map<string, string> = new Map();\n        params.set('datefrom',statisticsReq.datefrom);\n        params.set('dateto',statisticsReq.dateto);\n        let data: JsonParsed= await this.httpService.getWithParamsAsync('api/user/GetDailyStatistics', params);\n            if (data.Success) {\n            this.myData=[];\n             this.statisticsByUsers = JSON.parse(data.AnswerOrExceptionJson);\n                this.myType = 'ColumnChart';\n                for (let key in this.statisticsByUsers) {\n                let v= this.statisticsByUsers[key][0];\n                    this.myData.push([key,this.statisticsByUsers[key][0],this.statisticsByUsers[key][1],this.statisticsByUsers[key][2],this.statisticsByUsers[key][3],this.statisticsByUsers[key][4]]);\n                    }\n            console.log('sucess');\n           // this.router.navigateByUrl('showStatistics/chart');\n            }\n             else {\n                this.actionFailed = true;\n                let response = JSON.parse(data.AnswerOrExceptionJson);\n                if (response) {\n                    this.messageToUser = response.Message;\n                }\n            }\n    }\n}\n","<div *ngIf=\"store\">\r\n    <h2>History of {{ storeName }}: Store</h2>\r\n\r\n    <div *ngFor=\"let order of Orders\">\r\n        <div *ngIf=\"order\">\r\n            <h3>order id: {{ order.OrderId }}</h3>\r\n            <h3>order time: {{ order.OrderTime }}</h3>\r\n            <h3>items:</h3>\r\n            <div *ngFor=\"let orderAndItems of ordersAndItems\">\r\n                <div *ngIf=\"order.OrderId == orderAndItems.orderId\">\r\n                    <div *ngFor=\"let orderItem of Object.keys(orderAndItems.items)\">\r\n                        <h3>item name: {{ orderAndItems.items[orderItem].Name }}</h3>\r\n                        <p>price per item: {{ orderAndItems.items[orderItem].DiscountedPricePerItem | currency:\"ILS\" }}</p>\r\n                        <p>amount: {{ orderAndItems.items[orderItem].Amount }}</p>\r\n                    </div>\r\n                    <p>total price for the order: {{ order.Total | currency:\"ILS\" }}</p>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>\r\n\r\n<div *ngIf=\"storeHistoryFailed == true\">\r\n    <div class=\"form-signin-heading\" style=\"color:red;\">{{MessageToUser}}</div>\r\n</div>\r\n\r\n<div *ngIf=\"permission == false\">\r\n    <div class=\"form-signin-heading\" style=\"color:red;\">Action Faild: Don't have the right permission</div>\r\n</div>\r\n\r\n<button (click)=\"backToStore()\">Back To The Store</button>\r\n\r\n\r\n\r\n","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, Router } from \"@angular/router\";\nimport { MyStore, Order, OrderItem, OrderAndItems, StoreOrder } from '../contracts.service';\nimport { HttpRequestService, JsonParsed } from '../http-request.service';\n\n@Component({\n  selector: 'app-store-history-admin',\n  templateUrl: './store-history-admin.component.html',\n  styleUrls: ['./store-history-admin.component.css']\n})\nexport class StoreHistoryAdminComponent implements OnInit {\n    storeid: string;\n    storeName: string;\n    storeHistoryFailed: boolean;\n    MessageToUser: string;\n    Orders: Order[];\n    ordersAndItems: OrderAndItems[];\n    store: MyStore;\n    Object = Object;\n    permission: boolean;\n\n    constructor(\n        private httpService: HttpRequestService,\n        private router: ActivatedRoute,\n        private routerHistory: Router,\n    ) {\n        this.Orders = [];\n        this.ordersAndItems = [];\n        this.storeHistoryFailed = false;\n        this.MessageToUser = '';\n        this.permission = true;\n    }\n\n    async ngOnInit() {\n        this.storeid = this.router.snapshot.paramMap.get('storeid');\n        let dataAdmin: JsonParsed = await this.httpService.getAsync('api/user/IsAdmin');\n        if (dataAdmin.Success) {\n            this.permission = true;\n        }\n\n        let dataOfHistory: JsonParsed = await this.httpService.getWithParamstAsync('api/store/GetStoreOrderHistoryAdmin', this.storeid);\n        if (dataOfHistory.Success) {\n            this.Orders = JSON.parse(dataOfHistory.AnswerOrExceptionJson);\n            for (let session of Object.keys(this.Orders)) {\n                let storeOrder: StoreOrder = this.Orders[session];\n                let storeInfoByIdResponse: JsonParsed = await this.httpService.getWithParamstAsync('api/store/GetStoreInformationByID', storeOrder.StoreId);\n                if (storeInfoByIdResponse.Success) {\n                    this.store = JSON.parse(storeInfoByIdResponse.AnswerOrExceptionJson);\n                    this.storeName = this.store.ContactDetails.Name;\n                    let storeItems: OrderItem[] = storeOrder.StoreOrderItems;\n                    this.ordersAndItems.push({ orderId: storeOrder.OrderId, items: storeItems });\n                }\n            }\n        } else {\n            this.storeHistoryFailed = true;\n            let response = JSON.parse(dataOfHistory.AnswerOrExceptionJson);\n            if (response) {\n                this.MessageToUser = response.Message;\n            }\n        }\n    }\n\n    backToStore() {\n        this.routerHistory.navigateByUrl('/home/' + this.storeid);\n    }\n}\n","<div *ngIf=\"store\">\r\n    <h2>History of {{ storeName }}: Store</h2>\r\n\r\n    <div *ngFor=\"let order of Orders\">\r\n        <div *ngIf=\"order\">\r\n            <h3>order:</h3>\r\n            <h3>order id: {{ order.OrderId }}</h3>\r\n            <h3>order time: {{ order.OrderTime }}</h3>\r\n            <h3>items:</h3>\r\n            <div *ngFor=\"let orderAndItems of ordersAndItems\">\r\n                <div *ngIf=\"order.OrderId == orderAndItems.orderId\">\r\n                    <div *ngFor=\"let orderItem of Object.keys(orderAndItems.items)\">\r\n                        <h3>item name: {{ orderAndItems.items[orderItem].Name }}</h3>\r\n                        <p>price per item: {{ orderAndItems.items[orderItem].DiscountedPricePerItem | currency:\"ILS\" }}</p>\r\n                        <p>amount: {{ orderAndItems.items[orderItem].Amount }}</p>\r\n                    </div>\r\n                    <h3>total price for the order: {{ order.Total | currency:\"ILS\" }}</h3>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>\r\n\r\n<div *ngIf=\"storeHistoryFailed == true\">\r\n    <div class=\"form-signin-heading\" style=\"color:red;\">{{MessageToUser}}</div>\r\n</div>\r\n\r\n<div *ngIf=\"permission == false\">\r\n    <div class=\"form-signin-heading\" style=\"color:red;\">Action Faild: Don't have the right permission</div>\r\n</div>\r\n\r\n<button (click)=\"backToStore()\">Back To The Store</button>\r\n\r\n\r\n\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { ActivatedRoute, Router } from \"@angular/router\";\r\nimport { MyStore, Order, OrderAndItems, OrderItem, StoreOrder } from '../contracts.service';\r\nimport { HttpRequestService, JsonParsed } from '../http-request.service';\r\n\r\n\r\n@Component({\r\n    selector: 'app-store-history',\r\n    templateUrl: './store-history.component.html',\r\n    styleUrls: ['./store-history.component.css']\r\n})\r\nexport class StoreHistoryComponent implements OnInit {\r\n    storeid: string;\r\n    storeName: string;\r\n    storeHistoryFailed: boolean;\r\n    MessageToUser: string;\r\n    Orders: Order[];\r\n    ordersAndItems: OrderAndItems[];\r\n    store: MyStore;\r\n    Object = Object;\r\n    permission: boolean;\r\n\r\n    constructor(\r\n        private httpService: HttpRequestService,\r\n        private router: ActivatedRoute,\r\n        private routerHistory: Router,\r\n    ) {\r\n        this.Orders = [];\r\n        this.ordersAndItems = [];\r\n        this.storeHistoryFailed = false;\r\n        this.MessageToUser = '';\r\n        this.permission = true;\r\n    }\r\n\r\n    async ngOnInit() {\r\n        this.storeid = this.router.snapshot.paramMap.get('storeid');\r\n        let data: JsonParsed = await this.httpService.getWithParamstAsync('api/store/GetMyPermissions', this.storeid);\r\n        if (data.Success) {\r\n            let permissions: string[] = JSON.parse(data.AnswerOrExceptionJson);\r\n            if (!permissions.includes(\"HISTORY\")) {\r\n                this.permission = false;\r\n            }\r\n        }\r\n        else {\r\n            this.storeHistoryFailed = true;\r\n            let response = JSON.parse(data.AnswerOrExceptionJson);\r\n            if (response) {\r\n                this.MessageToUser = response.Message;\r\n            }\r\n        }\r\n\r\n        let dataOfHistory: JsonParsed = await this.httpService.getWithParamstAsync('api/store/GetStoreOrderHistory', this.storeid);\r\n        if (dataOfHistory.Success) {\r\n            this.Orders = JSON.parse(dataOfHistory.AnswerOrExceptionJson);\r\n            for (let session of Object.keys(this.Orders)) {\r\n                let storeOrder: StoreOrder = this.Orders[session];\r\n                let storeInfoByIdResponse: JsonParsed = await this.httpService.getWithParamstAsync('api/store/GetStoreInformationByID', storeOrder.StoreId);\r\n                if (storeInfoByIdResponse.Success) {\r\n                    this.store = JSON.parse(storeInfoByIdResponse.AnswerOrExceptionJson);\r\n                    this.storeName = this.store.ContactDetails.Name;\r\n                    let storeItems: OrderItem[] = storeOrder.StoreOrderItems;\r\n                    this.ordersAndItems.push({ orderId: storeOrder.OrderId, items: storeItems });\r\n                }\r\n            }\r\n        } else {\r\n            this.storeHistoryFailed = true;\r\n            let response = JSON.parse(dataOfHistory.AnswerOrExceptionJson);\r\n            if (response) {\r\n                this.MessageToUser = response.Message;\r\n            }\r\n        }\r\n    }\r\n\r\n    backToStore() {\r\n        this.routerHistory.navigateByUrl('/home/' + this.storeid);\r\n    }\r\n}\r\n","<div *ngIf=\"historyAdminPermission == true\">\r\n    <button (click)=\"storeHistoryAdmin()\">Store History</button>\r\n</div>\r\n\r\n<div *ngIf=\"inventoryPermission == true\">\r\n    <button (click)=\"addItem()\">Add Item</button>\r\n</div>\r\n<hr class=\"spacer\">\r\n<div *ngIf=\"historyPermission == true\">\r\n    <button (click)=\"storeHistory()\">Store History</button>\r\n</div>\r\n<hr class=\"spacer\">\r\n<div *ngIf=\"appointOwnerPermission == true\">\r\n    <button (click)=\"AppointOwner()\">Appoint Additional Store Owner</button>\r\n</div>\r\n<hr class=\"spacer\">\r\n<div *ngIf=\"appointOwnerPermission == true\">\r\n    <button (click)=\"ApproveOwner()\">Approve Additional Store Owner</button>\r\n</div>\r\n<hr class=\"spacer\">\r\n<div *ngIf=\"appointManagerPermission == true\">\r\n    <button (click)=\"AppointManager()\">Appoint Additional Store Manager</button>\r\n</div>\r\n<hr class=\"spacer\">\r\n<div *ngIf=\"editPermission == true\">\r\n    <button (click)=\"managePermissions()\">Manage Store Manger Permissions</button>\r\n</div>\r\n<hr class=\"spacer\">\r\n<div *ngIf=\"removeManagerPermission == true\">\r\n    <button (click)=\"removeStoreManager()\">Remove Store Manager</button>\r\n</div>\r\n<hr class=\"spacer\">\r\n<div *ngIf=\"removeOwnerPermission == true\">\r\n    <button (click)=\"removeStoreOwner()\">Remove Store Owner</button>\r\n</div>\r\n<hr class=\"spacer\">\r\n<div *ngIf=\"policyPermission == true\">\r\n    <button (click)=\"manageDiscounts()\">Manage discounts</button>\r\n</div>\r\n<hr class=\"spacer\">\r\n<div *ngIf=\"policyPermission == true\">\r\n    <button (click)=\"managePurchases()\">Manage purchases</button>\r\n</div>\r\n<hr class=\"spacer\">\r\n<button (click)=\"backToStore()\">Back To The Store</button>\r\n\r\n","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, Router } from \"@angular/router\";\nimport { HttpRequestService, JsonParsed } from '../http-request.service';\n\n@Component({\n  selector: 'app-store-managment',\n  templateUrl: './store-managment.component.html',\n  styleUrls: ['./store-managment.component.css']\n})\nexport class StoreManagmentComponent implements OnInit {\n    storeid: string;\n    storeName: string;\n    appointOwnerPermission: boolean;\n    removeOwnerPermission: boolean;\n    appointManagerPermission: boolean;\n    editPermission: boolean;\n    removeManagerPermission: boolean;\n    inventoryPermission: boolean;\n    historyPermission: boolean;\n    policyPermission: boolean;\n    historyAdminPermission: boolean;\n\n    constructor(private router: ActivatedRoute,\n        private routerManagement: Router,\n        private httpService: HttpRequestService,\n    ) {\n        this.inventoryPermission = false;\n        this.appointOwnerPermission = false;\n        this.removeOwnerPermission = false;\n        this.appointManagerPermission = false;\n        this.editPermission = false;\n        this.removeManagerPermission = false;\n        this.historyPermission = false;\n        this.policyPermission = false;\n        this.historyAdminPermission = false;\n    }\n\n    async ngOnInit() {\n        this.storeid = this.router.snapshot.paramMap.get('storeid');\n        this.storeName = this.router.snapshot.paramMap.get('storeName');\n        let data: JsonParsed = await this.httpService.getWithParamstAsync('api/store/GetMyPermissions', this.storeid);\n        if (data.Success) {\n            let permissions: string[] = JSON.parse(data.AnswerOrExceptionJson);\n            if (permissions.includes(\"APPOINT_OWNER\")) {\r\n                this.appointOwnerPermission = true;\n            }\n            if (permissions.includes(\"REMOVE_OWNER\")) {\r\n                this.removeOwnerPermission = true;\n            }\n            if (permissions.includes(\"APPOINT_MANAGER\")) {\r\n                this.appointManagerPermission = true;\n            }\n            if (permissions.includes(\"EDIT_PERMISSIONS\")) {\r\n                this.editPermission = true;\n            }\n            if (permissions.includes(\"REMOVE_MANAGER\")) {\r\n                this.removeManagerPermission = true;\n            }\n            if (permissions.includes(\"INVENTORY\")) {\r\n                this.inventoryPermission = true;\n            }\n            if (permissions.includes(\"HISTORY\")) {\r\n                this.historyPermission = true;\n            }\n\n            if (permissions.includes(\"POLICY\")) {\n                this.policyPermission = true;\r\n            }\n        }\n\n        let dataAdmin: JsonParsed = await this.httpService.getAsync('api/user/IsAdmin');\n        if (dataAdmin.Success) {\n            this.historyAdminPermission = true;\n        }\n    }\n\n    addItem() {\r\n        this.routerManagement.navigate(['/home/' + this.storeid + '/storeManagment/addItem', { 'storeName': this.storeName }]);\r\n    }\n\n    storeHistory() {\n        this.routerManagement.navigateByUrl('/home/' + this.storeid + '/storeManagment/storeHistory');\r\n    }\n\n    storeHistoryAdmin() {\n        this.routerManagement.navigateByUrl('/home/' + this.storeid + '/storeManagment/storeHistoryAdmin');\r\n    }\n\n    AppointOwner() {\n        this.routerManagement.navigate(['/home/' + this.storeid + '/storeManagment/addStoreOwner', { 'storeName': this.storeName }]);\r\n    }\n\n    ApproveOwner() {\n        this.routerManagement.navigate(['/home/' + this.storeid + '/storeManagment/approveStoreOwner', { 'storeName': this.storeName }]);\r\n    }\n\n    AppointManager() {\n        this.routerManagement.navigate(['/home/' + this.storeid + '/storeManagment/addStoreManager', { 'storeName': this.storeName }]);\r\n    }\n\n    removeStoreManager() {\n        this.routerManagement.navigate(['/home/' + this.storeid + '/storeManagment/removeStoreManager', { 'storeName': this.storeName }]);\r\n    }\n\n    managePermissions() {\r\n        this.routerManagement.navigate(['/home/' + this.storeid + '/storeManagment/managePermissions', { 'storeName': this.storeName }]);\r\n    }\n\n    manageDiscounts() {\n        this.routerManagement.navigate(['/home/' + this.storeid + '/storeManagment/discountsManagement', { 'storeName': this.storeName }]);\r\n    }\n\n    managePurchases() {\n        this.routerManagement.navigate(['/home/' + this.storeid + '/storeManagment/purchasesManagment', { 'storeName': this.storeName }]);\r\n    }\n\t\n    removeStoreOwner() {\n        this.routerManagement.navigate(['/home/' + this.storeid + '/storeManagment/removeStoreOwner', { 'storeName': this.storeName }]);\r\n    }\n\n    backToStore() {\r\n        this.routerManagement.navigateByUrl('/home/' + this.storeid);\n    }\n}\n","<div *ngIf=\"store\">\r\n    <h1>Welcome To {{ store.ContactDetails.Name }} Store</h1>\r\n    <h2>{{ store.ContactDetails.Description }}</h2>\r\n\r\n    <div *ngFor=\"let item of items\">\r\n        <div *ngIf=\"item\">\r\n            <a routerLink='/home/{{ store.Id }}/{{ item.Id }}'> <h2>{{ item.Name }}</h2></a>\r\n            <p>{{ item.Price | currency:\"ILS\" }}</p>\r\n        </div>\r\n    </div>\r\n</div>\r\n\r\n<div *ngIf=\"actionFailed == true\">\r\n    <div class=\"form-signin-heading\" style=\"color:red;\">{{MessageToUser}}</div>\r\n</div>\r\n\r\n<div *ngIf=\"permission == true\">\r\n    <button (click)=\"storeManagment()\">Store Management</button>\r\n</div>\r\n","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, Router } from \"@angular/router\";\nimport { StoreInventory, Item, MyStore } from '../contracts.service';\nimport { HttpRequestService, JsonParsed } from '../http-request.service';\n\n@Component({\n  selector: 'app-stores-details',\n  templateUrl: './stores-details.component.html',\n  styleUrls: ['./stores-details.component.css']\n})\nexport class StoresDetailsComponent implements OnInit {\n    store: MyStore;\n    storeInventory: StoreInventory;\n    storeid: string;\n    items: Item[];\n    actionFailed: boolean;\n    MessageToUser: string;\n    permission: boolean;\n    inventoryPermission: boolean;\n\n    constructor(\n        private router: ActivatedRoute,\n        private routerAdd: Router,\n        private httpService: HttpRequestService,\n    )\n    {\n        this.items = [];\n        this.actionFailed = false;\n        this.MessageToUser = '';\n        this.permission = false;\n    }\n    \n    async ngOnInit() {\n        this.storeid = this.router.snapshot.paramMap.get('id');\n        let data: JsonParsed = await this.httpService.getWithParamstAsync('api/store/GetMyPermissions', this.storeid);\n        if (data.Success) {\n            let permissions: string[] = JSON.parse(data.AnswerOrExceptionJson);\n            if (permissions.includes(\"APPOINT_OWNER\") || permissions.includes(\"REMOVE_OWNER\") || permissions.includes(\"APPOINT_MANAGER\") ||\r\n                permissions.includes(\"EDIT_PERMISSIONS\") || permissions.includes(\"REMOVE_MANAGER\") || permissions.includes(\"INVENTORY\") ||\r\n                permissions.includes(\"POLICY\") || permissions.includes(\"CLOSE_STORE\") || permissions.includes(\"REQUESTS\") || permissions.includes(\"HISTORY\")) {\r\n                this.permission = true;\n            }\n        }\n\n        let dataAdmin: JsonParsed = await this.httpService.getAsync('api/user/IsAdmin');\n        if (dataAdmin.Success) {\n            this.permission = true;\n        }\n\n        let storeInfoByIdResponse: JsonParsed = await this.httpService.getWithParamstAsync('api/store/GetStoreInformationByID', this.storeid);\n        if (storeInfoByIdResponse.Success) {\n            this.store = JSON.parse(storeInfoByIdResponse.AnswerOrExceptionJson);\n            this.storeInventory = this.store.storeInventory;\n            for (let key in this.storeInventory.Items) {\r\n                this.items.push(this.storeInventory.Items[key]);\r\n            }\r\n        } else {\r\n            this.actionFailed = true;\r\n            let response = JSON.parse(data.AnswerOrExceptionJson);\r\n            if (response) {\r\n                this.MessageToUser = response.Message;\r\n            }\r\n        }\r\n    }\n\n    storeManagment() {\n        this.routerAdd.navigate(['/home/' + this.store.Id + '/storeManagment', { 'storeName': this.store.ContactDetails.Name }]);\r\n    }\n}\n","import { Component, OnInit } from '@angular/core';\nimport { HttpRequestService, JsonParsed } from '../http-request.service';\nimport { MyStore } from '../contracts.service';\n\n@Component({\n    selector: 'app-stores-list',\n    templateUrl: './stores-list.component.html',\n    styleUrls: ['./stores-list.component.css']\n})\nexport class StoresListComponent implements OnInit {\n    stores: MyStore[];\n    getAllStoresFaild: boolean;\n    MessageToUser: string;\n\n    constructor(\n        private httpService: HttpRequestService,\n    ) {\n        this.getAllStoresFaild = false;\n        this.MessageToUser = '';\n    }\n\n    ngOnInit(): void {\n        this.httpService.get('api/store/GetAllStoresInformation').subscribe((data: JsonParsed) => {\n            if (data.Success) {\n                this.stores = JSON.parse(data.AnswerOrExceptionJson);\n            } else {\n                this.getAllStoresFaild = true;\n                let response = JSON.parse(data.AnswerOrExceptionJson);\n                if (response) {\n                    this.MessageToUser = response.Message;\n                }\n            }\n        });\n    }\n\n}\n","<h2>Stores</h2>\r\n\r\n<div *ngFor=\"let store of stores\">\r\n    \r\n    <h3>\r\n        <a title=\"{{store.ContactDetails.Description}}\" routerLink='/home/{{ store.Id }}'> {{ store.ContactDetails.Name }}</a>\r\n    </h3>\r\n</div>\r\n\r\n<div *ngIf=\"getAllStoresFaild == true\">\r\n    <div class=\"form-signin-heading\" style=\"color:red;\">{{MessageToUser}}</div>\r\n</div>\r\n\r\n\r\n","<!DOCTYPE html>\r\n<html>\r\n<head>\r\n    <meta charset=\"utf-8\">\r\n    <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\">\r\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\r\n    <title>Custom Bootstrap Login Page</title>\r\n    <link href=\"https://fonts.googleapis.com/css?family=Roboto:300,400\" rel=\"stylesheet\">\r\n</head>\r\n<body>\r\n    <div class=\"container\">\r\n        <form #UserHistoryForm=\"ngForm\" (ngSubmit)=\"onSubmit()\" class=\"form-signin\">\r\n            <h3 class=\"form-signin-heading\">User History</h3>\r\n            <mat-form-field>\r\n                <mat-label>Order</mat-label>\r\n                <mat-select [(value)]=\"selectedOrderId\">\r\n                    <mat-option *ngFor=\"let Order of Orders\" [value]=\"Order.OrderId\">\r\n                        {{ Order.OrderId }}\r\n                    </mat-option>\r\n                </mat-select>\r\n            </mat-form-field>\r\n            <button class=\"btn btn-lg btn-primary btn-block\" type=\"submit\">Watch User History</button>\r\n        </form>\r\n        <div *ngIf=\"actionFailed == true\">\r\n            <div class=\"form-signin-heading\" style=\"color:red;\">{{MessageToUser}}</div>\r\n        </div>\r\n    </div> \r\n\r\n    <div *ngIf=\"selectedOrderId\">\r\n        <div *ngFor=\"let storeAndItem of storesAndItems\">\r\n            <div *ngIf=\"selectedOrderId == storeAndItem.orderId\">\r\n                <h2>Order id: {{ selectedOrderId }}</h2>\r\n                <h3>Order time: {{ order.OrderTime }}</h3>\r\n                <h2>Store name: {{ storeAndItem.storeName }}</h2>\r\n                <h3>items:</h3>\r\n                <div *ngFor=\"let orderItem of Object.keys(storeAndItem.items)\">\r\n                    <h3>item name: {{ storeAndItem.items[orderItem].Name }}</h3>\r\n                    <p>price per item: {{ storeAndItem.items[orderItem].DiscountedPricePerItem | currency:\"ILS\" }}</p>\r\n                    <p>amount: {{ storeAndItem.items[orderItem].Amount }}</p>\r\n                </div>\r\n            </div>\r\n        </div>\r\n        <div *ngIf=\"showTotal == true\">\r\n            <h3>Total price: {{ order.Total  | currency:\"ILS\" }}</h3>\r\n        </div>\r\n    </div>\r\n\r\n</body>\r\n</html>\r\n","import { Component, OnInit } from '@angular/core';\nimport { MyStore, Order, StoreAndItems, OrderItem } from '../contracts.service';\nimport { HttpRequestService, JsonParsed } from '../http-request.service';\n\n@Component({\n    selector: 'app-user-history',\n    templateUrl: './user-history.component.html',\n    styleUrls: ['./user-history.component.css']\n})\nexport class UserHistoryComponent implements OnInit {\n    actionFailed: boolean;\n    MessageToUser: string;\n    Orders: Order[];\n    storesAndItems: StoreAndItems[];\n    Object = Object;\n    selectedOrderId: string;\n    data: JsonParsed;\n    order: Order;\n    showTotal: boolean;\n\n    constructor(\n        private httpService: HttpRequestService, ) {\n        this.Orders = [];\n        this.data;\n        this.actionFailed = false;\n        this.MessageToUser = '';\n        this.selectedOrderId = 'empty';\n        this.storesAndItems = [];\n        this.showTotal = false;\n    }\n\n    async ngOnInit() {\n        this.Orders = [];\n        this.data = await this.httpService.getAsync('api/user/GetMyOrderHistory');\n        if (this.data.Success) {\n            this.Orders = JSON.parse(this.data.AnswerOrExceptionJson);\n        }\n        else {\n            this.actionFailed = true;\n            let response = JSON.parse(this.data.AnswerOrExceptionJson);\n            if (response)\n                this.MessageToUser = response.Message;\r\n        }\n    }\n\n\n    async onSubmit() {\n        this.storesAndItems = [];\n        if (this.selectedOrderId != 'empty') {\n            this.showTotal = true; \n            for (let ord of Object.keys(this.Orders)) {\n                let Order: Order = this.Orders[ord];\n                if (Order.OrderId == this.selectedOrderId) {\n                    this.order = Order;\n                    for (let session of Object.keys(Order.StoreOrders)) {\n                        let storeOrder = Order.StoreOrders[session];\n                        let storeInfoByIdResponse: JsonParsed = await this.httpService.getWithParamstAsync('api/store/GetStoreInformationByID', storeOrder.StoreId);\n                        if (storeInfoByIdResponse.Success) {\n                            let store: MyStore = JSON.parse(storeInfoByIdResponse.AnswerOrExceptionJson);\n                            let storeName = store.ContactDetails.Name;\n                            let storeItems: OrderItem[] = storeOrder.StoreOrderItems;\n                            this.storesAndItems.push({ orderId: Order.OrderId, storeName: storeName, items: storeItems });\n                        }\n                        else {\n                            this.actionFailed = true;\n                            let response = JSON.parse(this.data.AnswerOrExceptionJson);\n                            if (response)\n                                this.MessageToUser = response.Message;\r\n                        }\n                    }\n                }\n            }\n        }\n    }\n}\n","<!DOCTYPE html>\r\n<html>\r\n<head>\r\n    <meta charset=\"utf-8\">\r\n    <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\">\r\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\r\n    <title>Custom Bootstrap Login Page</title>\r\n    <link href=\"https://fonts.googleapis.com/css?family=Roboto:300,400\" rel=\"stylesheet\">\r\n</head>\r\n<body>\r\n    <div class=\"container\">\r\n        <form #UsersHistoryForm=\"ngForm\" (ngSubmit)=\"onSubmit(UsersHistoryForm.value)\" class=\"form-signin\">\r\n            <h2 class=\"form-signin-heading\">Watch User History</h2>\r\n            <hr class=\"spacer\">\r\n            <label for=\"username\" class=\"sr-only\">UserName</label>\r\n            <input type=\"text\" name=\"username\" class=\"form-control\" placeholder=\"UserName\" required autofocus ngModel>\r\n            <button class=\"btn btn-lg btn-primary btn-block\" type=\"submit\">Watch History</button>\r\n        </form>\r\n        <div *ngIf=\"userHistoryAdminFailed == true\">\r\n            <div class=\"form-signin-heading\" style=\"color:red;\">{{MessageToUser}}</div>\r\n        </div>\r\n    </div>\r\n    <div *ngFor=\"let order of Orders\">\r\n        <h2>Order id: {{ order.OrderId }}</h2>\r\n        <h3>Order time: {{ order.OrderTime }}</h3>\r\n        <div *ngFor=\"let storeAndItem of storesAndItems\">\r\n            <div *ngIf=\"order.OrderId == storeAndItem.orderId\">\r\n                <h2>Store name: {{ storeAndItem.storeName }}</h2>\r\n                <div *ngFor=\"let orderItem of Object.keys(storeAndItem.items)\">\r\n                    <h3>item name: {{ storeAndItem.items[orderItem].Name }}</h3>\r\n                    <p>price per item: {{ storeAndItem.items[orderItem].DiscountedPricePerItem | currency:\"ILS\" }}</p>\r\n                    <p>amount: {{ storeAndItem.items[orderItem].Amount }}</p>\r\n                </div>\r\n            </div>\r\n        </div>\r\n        <div><h3>Total price: {{ order.Total  | currency:\"ILS\" }}</h3></div>\r\n    </div>\r\n</body>\r\n</html>\r\n\r\n\r\n","import { Component, OnInit } from '@angular/core';\nimport { HttpRequestService, JsonParsed } from '../http-request.service';\nimport { Order, MyStore, OrderItem, StoreAndItems } from '../contracts.service';\r\n\n@Component({\n  selector: 'app-users-history-admin',\n  templateUrl: './users-history-admin.component.html',\n  styleUrls: ['./users-history-admin.component.css']\n})\nexport class UsersHistoryAdminComponent implements OnInit {\n    userHistoryAdminFailed: boolean;\n    MessageToUser: string;\n    Orders: Order[];\n    Object = Object;\n    storesAndItems: StoreAndItems[];\n\n    constructor(private httpService: HttpRequestService,\n    ) {\n        this.userHistoryAdminFailed = false;\n        this.MessageToUser = '';\n        this.Orders = [];\n        this.storesAndItems = [];\n    }\n\n    ngOnInit(): void {\n        this.httpService.get('api/user/IsAdmin').subscribe((data: JsonParsed) => {\n            if (!data.Success) {\n                this.userHistoryAdminFailed = true;\n                let response = JSON.parse(data.AnswerOrExceptionJson);\n                if (response) {\n                    this.MessageToUser = response.Message;\n                }\r\n            }\n        });\n    }\n\n    async onSubmit(customerData) {\n        this.storesAndItems = [];\n        let dataOfHistory: JsonParsed = await this.httpService.getWithParamstAsync('api/Purchase/GetUserOrderHistory', customerData.username);\r\n        if (dataOfHistory.Success) {\r\n            this.Orders = JSON.parse(dataOfHistory.AnswerOrExceptionJson);\r\n            for (let ord of Object.keys(this.Orders)) {\n                let Order: Order = this.Orders[ord];\n                for (let session of Object.keys(Order.StoreOrders)) {\n                    let storeOrder = Order.StoreOrders[session];\n                    let storeInfoByIdResponse: JsonParsed = await this.httpService.getWithParamstAsync('api/store/GetStoreInformationByID', storeOrder.StoreId);\n                    if (storeInfoByIdResponse.Success) {\n                        let store: MyStore = JSON.parse(storeInfoByIdResponse.AnswerOrExceptionJson);\n                        let storeName = store.ContactDetails.Name;\n                        let storeItems: OrderItem[] = storeOrder.StoreOrderItems;\n                        this.storesAndItems.push({ orderId: Order.OrderId, storeName: storeName, items: storeItems });\n                    }\n                    else {\n                        this.userHistoryAdminFailed = true;\n                        let response = JSON.parse(storeInfoByIdResponse.AnswerOrExceptionJson);\n                        if (response)\n                            this.MessageToUser = response.Message;\r\n                    }\n                }\n            }\r\n        } else {\r\n            this.userHistoryAdminFailed = true;\r\n            let response = JSON.parse(dataOfHistory.AnswerOrExceptionJson);\r\n            if (response) {\r\n                this.MessageToUser = response.Message;\r\n            }\r\n        }\n    }\n}\n","import { Component, OnInit } from '@angular/core';\r\nimport { HttpRequestService, JsonParsed } from '../http-request.service';\r\nimport { MyPair, MyStore ,StoreItem} from '../contracts.service';\r\nimport { ActivatedRoute, Router } from \"@angular/router\";\r\nimport { Location } from '@angular/common';\r\n\r\n@Component({\r\n  selector: 'app-view-cart',\r\n  templateUrl: './view-cart.component.html',\r\n  styleUrls: ['./view-cart.component.css']\r\n})\r\nexport class ViewCartComponent implements OnInit {\r\n    itemsInCart;\r\n    response: string;\r\n    viewCartFaild: boolean;\r\n    RemoveItemFromCartFailed: boolean;\r\n    storeId: string;\r\n    itemId: string;\r\n    UpdateItemAmountInCartFailed: boolean;\r\n    MessageToUser: string;\r\n    itemsToPresent;\r\n    Object = Object;\r\n    total;\r\n\r\n      constructor(private router: Router,\r\n        private httpService: HttpRequestService,\r\n        private _location: Location )  {\r\n        this.viewCartFaild = false;\r\n        this.RemoveItemFromCartFailed=false;\r\n        this.MessageToUser = '';\r\n        this.itemsToPresent = {};\r\n        this.UpdateItemAmountInCartFailed=false;\r\n        this.itemId='empty';\r\n        this.storeId='empty';\r\n        this.total = 0;\r\n    }\r\n\r\n    ngOnInit(): void {\r\n        this.httpService.get('api/user/ViewCart').subscribe((data: JsonParsed) => {\r\n            if (data.Success) {\r\n                this.itemsInCart = JSON.parse(data.AnswerOrExceptionJson);\r\n                for (var key in this.itemsInCart) {\r\n                    this.httpService.getWithParams('api/store/GetStoreInformationByID', key).subscribe((data: JsonParsed) => {\r\n                        if (data.Success) {\r\n                            let store: MyStore = JSON.parse(data.AnswerOrExceptionJson);\r\n                            let name = store.ContactDetails.Name;\r\n                            this.itemsToPresent[name] = [];\r\n                            this.itemsInCart[store.Id].forEach((element, index, array) => {\r\n                                let pair: MyPair = {\r\n                                    item: element.Item1,\r\n                                    amount: element.Item2,\r\n                                    storeId: store.Id\r\n                                }\r\n                                this.total += element.Item1.Price * element.Item2;\r\n                                this.itemsToPresent[name].push(pair);\r\n                            });\r\n                            \r\n                        } else {\r\n                            this.viewCartFaild = true;\r\n                            let response = JSON.parse(data.AnswerOrExceptionJson);\r\n                            if (response) {\r\n                                this.MessageToUser = response.Message;\r\n                            }\r\n                        }\r\n                    });\r\n                }\r\n                \r\n            } else {\r\n                this.viewCartFaild = true;\r\n                let response = JSON.parse(data.AnswerOrExceptionJson);\r\n                if (response) {\r\n                    this.MessageToUser = response.Message;\r\n                }\r\n            }\r\n        });\r\n     \r\n    }\r\nRemoveItemFromCart(storeID,itemId)\r\n{\r\n\r\n        let ItemToRemove: StoreItem = {\r\n            StoreID:storeID,\r\n            ItemID: itemId\r\n        };\r\n            this.httpService.post('api/user/RemoveFromCart', ItemToRemove).subscribe((data: JsonParsed) => {\r\n            if (data.Success) {\r\n               window.location.reload();\r\n            } else {\r\n                this.RemoveItemFromCartFailed = true;\r\n                let response = JSON.parse(data.AnswerOrExceptionJson);\r\n                if (response) {\r\n                    this.MessageToUser = response.Message;\r\n                }\r\n            }\r\n        });\r\n}\r\n \r\n editItemAmount(storeId,itemId) {\r\n        this.itemId = itemId;\r\n        this.storeId = storeId;\r\n        this.router.navigate(['/viewCart/' + this.itemId + '/EditItemAmountInCart', { 'storeId': this.storeId }]);\r\n    }\r\n\r\n    checkout() {\r\n        this.router.navigateByUrl('/displayOrder');\r\n    }\r\n}\r\n","<h2>Shopping Cart</h2>\r\n\r\n<body>\r\n    <div *ngFor=\"let name of Object.keys(itemsToPresent)\">\r\n        <h2>Store name: {{ name }}</h2>\r\n\r\n        <div *ngFor=\"let pair of itemsToPresent[name]\">\r\n            <div *ngIf=\"pair\">\r\n                <h3>item name: {{ pair.item.Name }}</h3>\r\n                <p>price per item: {{ pair.item.Price | currency:\"ILS\" }}</p>\r\n                <p>amount: {{ pair.amount }}</p>\r\n                <button (click)=\"RemoveItemFromCart(pair.storeId,pair.item.Id)\">Remove from cart</button>\r\n                <button (click)=\"editItemAmount(pair.storeId,pair.item.Id)\">Update Amount</button>\r\n            </div>\r\n        </div>\r\n    </div>\r\n    <div><h3>Total price: {{ total  | currency:\"ILS\" }}</h3></div>\r\n\r\n    <button (click)=\"checkout()\">Checkout</button>\r\n\r\n    <div *ngIf=\"viewCartFaild == true\">\r\n        <div class=\"form-signin-heading\" style=\"color:red;\">{{MessageToUser}}</div>\r\n    </div>\r\n</body>\r\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"]}